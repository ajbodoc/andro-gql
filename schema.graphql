"""The root query type which gives access points into the data universe."""
type Query implements Node {
  """
  Exposes the root query type nested one level down. This is helpful for Relay 1
  which can only query top level fields if they are in a particular form.
  """
  query: Query!

  """
  The root query type must be a `Node` to work well with Relay 1 mutations. This just resolves to `query`.
  """
  nodeId: ID!

  """Fetches an object given its globally unique `ID`."""
  node(
    """The globally unique `ID`."""
    nodeId: ID!
  ): Node

  """Reads and enables pagination through a set of `Activity`."""
  activities(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Activity`."""
    orderBy: [ActivitiesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ActivityCondition
  ): ActivitiesConnection

  """Reads and enables pagination through a set of `ActividadesAlumno`."""
  actividadesAlumnos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `ActividadesAlumno`."""
    orderBy: [ActividadesAlumnosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ActividadesAlumnoCondition
  ): ActividadesAlumnosConnection

  """Reads and enables pagination through a set of `ActividadesArchivo`."""
  actividadesArchivos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `ActividadesArchivo`."""
    orderBy: [ActividadesArchivosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ActividadesArchivoCondition
  ): ActividadesArchivosConnection

  """Reads and enables pagination through a set of `ActividadesEntregas`."""
  actividadesEntregases(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `ActividadesEntregas`."""
    orderBy: [ActividadesEntregasesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ActividadesEntregasCondition
  ): ActividadesEntregasesConnection

  """
  Reads and enables pagination through a set of `ActividadesEntregasComentario`.
  """
  actividadesEntregasComentarios(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `ActividadesEntregasComentario`."""
    orderBy: [ActividadesEntregasComentariosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ActividadesEntregasComentarioCondition
  ): ActividadesEntregasComentariosConnection

  """Reads and enables pagination through a set of `ActivityLog`."""
  activityLogs(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `ActivityLog`."""
    orderBy: [ActivityLogsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ActivityLogCondition
  ): ActivityLogsConnection

  """Reads and enables pagination through a set of `AdmAporte`."""
  admAportes(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmAporte`."""
    orderBy: [AdmAportesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmAporteCondition
  ): AdmAportesConnection

  """Reads and enables pagination through a set of `AdmBanco`."""
  admBancos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmBanco`."""
    orderBy: [AdmBancosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmBancoCondition
  ): AdmBancosConnection

  """Reads and enables pagination through a set of `AdmBancosCuenta`."""
  admBancosCuentas(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmBancosCuenta`."""
    orderBy: [AdmBancosCuentasOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmBancosCuentaCondition
  ): AdmBancosCuentasConnection

  """Reads and enables pagination through a set of `AdmCaja`."""
  admCajas(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmCaja`."""
    orderBy: [AdmCajasOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmCajaCondition
  ): AdmCajasConnection

  """Reads and enables pagination through a set of `AdmCegreso`."""
  admCegresos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmCegreso`."""
    orderBy: [AdmCegresosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmCegresoCondition
  ): AdmCegresosConnection

  """Reads and enables pagination through a set of `AdmCingreso`."""
  admCingresos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmCingreso`."""
    orderBy: [AdmCingresosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmCingresoCondition
  ): AdmCingresosConnection

  """Reads and enables pagination through a set of `AdmCingresosValore`."""
  admCingresosValores(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmCingresosValore`."""
    orderBy: [AdmCingresosValoresOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmCingresosValoreCondition
  ): AdmCingresosValoresConnection

  """Reads and enables pagination through a set of `AdmCuenta`."""
  admCuentas(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmCuenta`."""
    orderBy: [AdmCuentasOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmCuentaCondition
  ): AdmCuentasConnection

  """Reads and enables pagination through a set of `AdmDescuento`."""
  admDescuentos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmDescuento`."""
    orderBy: [AdmDescuentosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmDescuentoCondition
  ): AdmDescuentosConnection

  """Reads and enables pagination through a set of `AdmDescuentosGrupo`."""
  admDescuentosGrupos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmDescuentosGrupo`."""
    orderBy: [AdmDescuentosGruposOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmDescuentosGrupoCondition
  ): AdmDescuentosGruposConnection

  """
  Reads and enables pagination through a set of `AdmDescuentosGruposFamiliare`.
  """
  admDescuentosGruposFamiliares(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmDescuentosGruposFamiliare`."""
    orderBy: [AdmDescuentosGruposFamiliaresOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmDescuentosGruposFamiliareCondition
  ): AdmDescuentosGruposFamiliaresConnection

  """Reads and enables pagination through a set of `AdmEgresoItem`."""
  admEgresoItems(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmEgresoItem`."""
    orderBy: [AdmEgresoItemsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmEgresoItemCondition
  ): AdmEgresoItemsConnection

  """Reads and enables pagination through a set of `AdmEgreso`."""
  admEgresos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmEgreso`."""
    orderBy: [AdmEgresosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmEgresoCondition
  ): AdmEgresosConnection

  """Reads and enables pagination through a set of `AdmFacturaItem`."""
  admFacturaItems(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmFacturaItem`."""
    orderBy: [AdmFacturaItemsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmFacturaItemCondition
  ): AdmFacturaItemsConnection

  """Reads and enables pagination through a set of `AdmFacturaPago`."""
  admFacturaPagos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmFacturaPago`."""
    orderBy: [AdmFacturaPagosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmFacturaPagoCondition
  ): AdmFacturaPagosConnection

  """Reads and enables pagination through a set of `AdmFactura`."""
  admFacturas(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmFactura`."""
    orderBy: [AdmFacturasOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmFacturaCondition
  ): AdmFacturasConnection

  """Reads and enables pagination through a set of `AdmGruposFamiliare`."""
  admGruposFamiliares(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmGruposFamiliare`."""
    orderBy: [AdmGruposFamiliaresOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmGruposFamiliareCondition
  ): AdmGruposFamiliaresConnection

  """Reads and enables pagination through a set of `AdmProveedore`."""
  admProveedores(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmProveedore`."""
    orderBy: [AdmProveedoresOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmProveedoreCondition
  ): AdmProveedoresConnection

  """Reads and enables pagination through a set of `Alerta`."""
  alertas(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Alerta`."""
    orderBy: [AlertasOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AlertaCondition
  ): AlertasConnection

  """Reads and enables pagination through a set of `Asignatura`."""
  asignaturas(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Asignatura`."""
    orderBy: [AsignaturasOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AsignaturaCondition
  ): AsignaturasConnection

  """Reads and enables pagination through a set of `AwsSesHistorial`."""
  awsSesHistorials(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AwsSesHistorial`."""
    orderBy: [AwsSesHistorialsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AwsSesHistorialCondition
  ): AwsSesHistorialsConnection

  """Reads and enables pagination through a set of `Calendario`."""
  calendarios(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Calendario`."""
    orderBy: [CalendariosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: CalendarioCondition
  ): CalendariosConnection

  """Reads and enables pagination through a set of `CalendarioGrupo`."""
  calendarioGrupos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `CalendarioGrupo`."""
    orderBy: [CalendarioGruposOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: CalendarioGrupoCondition
  ): CalendarioGruposConnection

  """Reads and enables pagination through a set of `CalendarioUser`."""
  calendarioUsers(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `CalendarioUser`."""
    orderBy: [CalendarioUsersOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: CalendarioUserCondition
  ): CalendarioUsersConnection

  """Reads and enables pagination through a set of `Calificacione`."""
  calificaciones(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Calificacione`."""
    orderBy: [CalificacionesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: CalificacioneCondition
  ): CalificacionesConnection

  """
  Reads and enables pagination through a set of `CalificacionesConcepto`.
  """
  calificacionesConceptos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `CalificacionesConcepto`."""
    orderBy: [CalificacionesConceptosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: CalificacionesConceptoCondition
  ): CalificacionesConceptosConnection

  """
  Reads and enables pagination through a set of `CalificacionesConceptosAlumno`.
  """
  calificacionesConceptosAlumnos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `CalificacionesConceptosAlumno`."""
    orderBy: [CalificacionesConceptosAlumnosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: CalificacionesConceptosAlumnoCondition
  ): CalificacionesConceptosAlumnosConnection

  """Reads and enables pagination through a set of `CalificacionesEscala`."""
  calificacionesEscalas(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `CalificacionesEscala`."""
    orderBy: [CalificacionesEscalasOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: CalificacionesEscalaCondition
  ): CalificacionesEscalasConnection

  """
  Reads and enables pagination through a set of `CalificacionesEscalasValore`.
  """
  calificacionesEscalasValores(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `CalificacionesEscalasValore`."""
    orderBy: [CalificacionesEscalasValoresOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: CalificacionesEscalasValoreCondition
  ): CalificacionesEscalasValoresConnection

  """Reads and enables pagination through a set of `Changelog`."""
  changelogs(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Changelog`."""
    orderBy: [ChangelogsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ChangelogCondition
  ): ChangelogsConnection

  """Reads and enables pagination through a set of `City`."""
  cities(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `City`."""
    orderBy: [CitiesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: CityCondition
  ): CitiesConnection

  """Reads and enables pagination through a set of `ClienteModule`."""
  clienteModules(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `ClienteModule`."""
    orderBy: [ClienteModulesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ClienteModuleCondition
  ): ClienteModulesConnection

  """Reads and enables pagination through a set of `Cliente`."""
  clientes(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Cliente`."""
    orderBy: [ClientesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ClienteCondition
  ): ClientesConnection

  """Reads and enables pagination through a set of `Dispositivo`."""
  dispositivos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Dispositivo`."""
    orderBy: [DispositivosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: DispositivoCondition
  ): DispositivosConnection

  """Reads and enables pagination through a set of `Divisione`."""
  divisiones(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Divisione`."""
    orderBy: [DivisionesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: DivisioneCondition
  ): DivisionesConnection

  """Reads and enables pagination through a set of `Errorsapp`."""
  errorsapps(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Errorsapp`."""
    orderBy: [ErrorsappsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ErrorsappCondition
  ): ErrorsappsConnection

  """Reads and enables pagination through a set of `EspaciosCurriculare`."""
  espaciosCurriculares(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `EspaciosCurriculare`."""
    orderBy: [EspaciosCurricularesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: EspaciosCurriculareCondition
  ): EspaciosCurricularesConnection

  """Reads and enables pagination through a set of `Evento`."""
  eventos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Evento`."""
    orderBy: [EventosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: EventoCondition
  ): EventosConnection

  """Reads and enables pagination through a set of `FailedJob`."""
  failedJobs(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `FailedJob`."""
    orderBy: [FailedJobsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: FailedJobCondition
  ): FailedJobsConnection

  """Reads and enables pagination through a set of `Foto`."""
  fotos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Foto`."""
    orderBy: [FotosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: FotoCondition
  ): FotosConnection

  """Reads and enables pagination through a set of `Galeria`."""
  galerias(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Galeria`."""
    orderBy: [GaleriasOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GaleriaCondition
  ): GaleriasConnection

  """Reads and enables pagination through a set of `Grupo`."""
  grupos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Grupo`."""
    orderBy: [GruposOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GrupoCondition
  ): GruposConnection

  """Reads and enables pagination through a set of `GruposArchivo`."""
  gruposArchivos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `GruposArchivo`."""
    orderBy: [GruposArchivosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GruposArchivoCondition
  ): GruposArchivosConnection

  """Reads and enables pagination through a set of `Hijo`."""
  hijos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Hijo`."""
    orderBy: [HijosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: HijoCondition
  ): HijosConnection

  """
  Reads and enables pagination through a set of `HistorialNotificacione`.
  """
  historialNotificaciones(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `HistorialNotificacione`."""
    orderBy: [HistorialNotificacionesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: HistorialNotificacioneCondition
  ): HistorialNotificacionesConnection

  """Reads and enables pagination through a set of `Log`."""
  logs(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Log`."""
    orderBy: [LogsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: LogCondition
  ): LogsConnection

  """Reads and enables pagination through a set of `MensajeItem`."""
  mensajeItems(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `MensajeItem`."""
    orderBy: [MensajeItemsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MensajeItemCondition
  ): MensajeItemsConnection

  """Reads and enables pagination through a set of `Mensaje`."""
  mensajes(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Mensaje`."""
    orderBy: [MensajesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MensajeCondition
  ): MensajesConnection

  """Reads and enables pagination through a set of `MensajesAdmin`."""
  mensajesAdmins(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `MensajesAdmin`."""
    orderBy: [MensajesAdminsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MensajesAdminCondition
  ): MensajesAdminsConnection

  """Reads and enables pagination through a set of `MensajesArchivo`."""
  mensajesArchivos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `MensajesArchivo`."""
    orderBy: [MensajesArchivosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MensajesArchivoCondition
  ): MensajesArchivosConnection

  """Reads and enables pagination through a set of `MenuApp`."""
  menuApps(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `MenuApp`."""
    orderBy: [MenuAppsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MenuAppCondition
  ): MenuAppsConnection

  """Reads and enables pagination through a set of `Migration`."""
  migrations(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Migration`."""
    orderBy: [MigrationsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MigrationCondition
  ): MigrationsConnection

  """Reads and enables pagination through a set of `Module`."""
  modules(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Module`."""
    orderBy: [ModulesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ModuleCondition
  ): ModulesConnection

  """Reads and enables pagination through a set of `ModulesBack`."""
  modulesBacks(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `ModulesBack`."""
    orderBy: [ModulesBacksOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ModulesBackCondition
  ): ModulesBacksConnection

  """Reads and enables pagination through a set of `MtCorregir`."""
  mtCorregirs(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `MtCorregir`."""
    orderBy: [MtCorregirsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MtCorregirCondition
  ): MtCorregirsConnection

  """Reads and enables pagination through a set of `MultimediaMapping`."""
  multimediaMappings(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `MultimediaMapping`."""
    orderBy: [MultimediaMappingsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MultimediaMappingCondition
  ): MultimediaMappingsConnection

  """Reads and enables pagination through a set of `Noticia`."""
  noticias(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Noticia`."""
    orderBy: [NoticiasOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: NoticiaCondition
  ): NoticiasConnection

  """Reads and enables pagination through a set of `Opcione`."""
  opciones(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Opcione`."""
    orderBy: [OpcionesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: OpcioneCondition
  ): OpcionesConnection

  """Reads and enables pagination through a set of `OpcionesDivision`."""
  opcionesDivisions(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `OpcionesDivision`."""
    orderBy: [OpcionesDivisionsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: OpcionesDivisionCondition
  ): OpcionesDivisionsConnection

  """Reads and enables pagination through a set of `PasswordReset`."""
  passwordResets(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `PasswordReset`."""
    orderBy: [PasswordResetsOrderBy!] = [NATURAL]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: PasswordResetCondition
  ): PasswordResetsConnection

  """Reads and enables pagination through a set of `Plantilla`."""
  plantillas(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Plantilla`."""
    orderBy: [PlantillasOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: PlantillaCondition
  ): PlantillasConnection

  """Reads and enables pagination through a set of `Provincia`."""
  provincias(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Provincia`."""
    orderBy: [ProvinciasOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ProvinciaCondition
  ): ProvinciasConnection

  """Reads and enables pagination through a set of `Setting`."""
  settings(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Setting`."""
    orderBy: [SettingsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: SettingCondition
  ): SettingsConnection

  """Reads and enables pagination through a set of `TelescopeEntry`."""
  telescopeEntries(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `TelescopeEntry`."""
    orderBy: [TelescopeEntriesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TelescopeEntryCondition
  ): TelescopeEntriesConnection

  """Reads and enables pagination through a set of `TelescopeEntriesTag`."""
  telescopeEntriesTags(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `TelescopeEntriesTag`."""
    orderBy: [TelescopeEntriesTagsOrderBy!] = [NATURAL]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TelescopeEntriesTagCondition
  ): TelescopeEntriesTagsConnection

  """Reads and enables pagination through a set of `TelescopeMonitoring`."""
  telescopeMonitorings(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `TelescopeMonitoring`."""
    orderBy: [TelescopeMonitoringsOrderBy!] = [NATURAL]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TelescopeMonitoringCondition
  ): TelescopeMonitoringsConnection

  """Reads and enables pagination through a set of `Tip`."""
  tips(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Tip`."""
    orderBy: [TipsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TipCondition
  ): TipsConnection

  """Reads and enables pagination through a set of `User`."""
  users(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `User`."""
    orderBy: [UsersOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UserCondition
  ): UsersConnection

  """Reads and enables pagination through a set of `UsersConfiguracion`."""
  usersConfiguracions(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `UsersConfiguracion`."""
    orderBy: [UsersConfiguracionsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UsersConfiguracionCondition
  ): UsersConfiguracionsConnection

  """Reads and enables pagination through a set of `UsersGrupo`."""
  usersGrupos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `UsersGrupo`."""
    orderBy: [UsersGruposOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UsersGrupoCondition
  ): UsersGruposConnection

  """Reads and enables pagination through a set of `UsersInactivo`."""
  usersInactivos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `UsersInactivo`."""
    orderBy: [UsersInactivosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UsersInactivoCondition
  ): UsersInactivosConnection

  """Reads and enables pagination through a set of `UsersRole`."""
  usersRoles(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `UsersRole`."""
    orderBy: [UsersRolesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UsersRoleCondition
  ): UsersRolesConnection

  """Reads and enables pagination through a set of `Usuario`."""
  usuarios(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Usuario`."""
    orderBy: [UsuariosOrderBy!] = [NATURAL]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UsuarioCondition
  ): UsuariosConnection

  """Reads and enables pagination through a set of `Versione`."""
  versiones(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Versione`."""
    orderBy: [VersionesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: VersioneCondition
  ): VersionesConnection
  activity(id: BigInt!): Activity
  actividadesAlumno(id: BigInt!): ActividadesAlumno
  actividadesArchivo(id: BigInt!): ActividadesArchivo
  actividadesEntregas(id: BigInt!): ActividadesEntregas
  actividadesEntregasComentario(id: BigInt!): ActividadesEntregasComentario
  activityLog(id: BigInt!): ActivityLog
  admAporte(id: BigInt!): AdmAporte
  admBanco(id: BigInt!): AdmBanco
  admBancosCuenta(id: BigInt!): AdmBancosCuenta
  admCaja(id: BigInt!): AdmCaja
  admCegreso(id: BigInt!): AdmCegreso
  admCingreso(id: BigInt!): AdmCingreso
  admCingresosValore(id: BigInt!): AdmCingresosValore
  admCuenta(id: BigInt!): AdmCuenta
  admDescuento(id: BigInt!): AdmDescuento
  admDescuentosGrupo(id: BigInt!): AdmDescuentosGrupo
  admDescuentosGruposFamiliare(id: BigInt!): AdmDescuentosGruposFamiliare
  admEgresoItem(id: BigInt!): AdmEgresoItem
  admEgreso(id: BigInt!): AdmEgreso
  admFacturaItem(id: BigInt!): AdmFacturaItem
  admFacturaPago(id: BigInt!): AdmFacturaPago
  admFactura(id: BigInt!): AdmFactura
  admGruposFamiliare(id: BigInt!): AdmGruposFamiliare
  admProveedore(id: BigInt!): AdmProveedore
  alerta(id: BigInt!): Alerta
  asignatura(id: BigInt!): Asignatura
  awsSesHistorial(id: BigInt!): AwsSesHistorial
  calendario(id: BigInt!): Calendario
  calendarioGrupo(id: BigInt!): CalendarioGrupo
  calendarioUser(id: BigInt!): CalendarioUser
  calificacione(id: BigInt!): Calificacione
  calificacionesConcepto(id: BigInt!): CalificacionesConcepto
  calificacionesConceptosAlumno(id: BigInt!): CalificacionesConceptosAlumno
  calificacionesEscala(id: BigInt!): CalificacionesEscala
  calificacionesEscalasValore(id: BigInt!): CalificacionesEscalasValore
  changelog(id: BigInt!): Changelog
  city(id: BigInt!): City
  clienteModule(id: BigInt!): ClienteModule
  cliente(id: BigInt!): Cliente
  dispositivo(id: BigInt!): Dispositivo
  divisione(id: BigInt!): Divisione
  errorsapp(id: BigInt!): Errorsapp
  espaciosCurriculare(id: BigInt!): EspaciosCurriculare
  evento(id: BigInt!): Evento
  failedJob(id: BigInt!): FailedJob
  foto(id: BigInt!): Foto
  galeria(id: BigInt!): Galeria
  grupo(id: BigInt!): Grupo
  gruposArchivo(id: BigInt!): GruposArchivo
  hijo(id: BigInt!): Hijo
  historialNotificacione(id: BigInt!): HistorialNotificacione
  log(id: BigInt!): Log
  mensajeItem(id: BigInt!): MensajeItem
  mensaje(id: BigInt!): Mensaje
  mensajesAdmin(id: BigInt!): MensajesAdmin
  mensajesArchivo(id: BigInt!): MensajesArchivo
  menuApp(id: BigInt!): MenuApp
  migration(id: BigInt!): Migration
  module(id: BigInt!): Module
  modulesBack(id: BigInt!): ModulesBack
  mtCorregir(id: BigInt!): MtCorregir
  multimediaMapping(id: BigInt!): MultimediaMapping
  noticia(id: BigInt!): Noticia
  opcione(id: BigInt!): Opcione
  opcionesDivision(id: BigInt!): OpcionesDivision
  plantilla(id: BigInt!): Plantilla
  provincia(id: BigInt!): Provincia
  setting(id: BigInt!): Setting
  telescopeEntry(sequence: BigInt!): TelescopeEntry
  tip(id: BigInt!): Tip
  user(id: BigInt!): User
  usersConfiguracion(id: BigInt!): UsersConfiguracion
  usersGrupo(id: BigInt!): UsersGrupo
  usersInactivo(id: BigInt!): UsersInactivo
  usersRole(usersRolesId: BigInt!): UsersRole
  versione(id: BigInt!): Versione

  """Reads a single `Activity` using its globally unique `ID`."""
  activityByNodeId(
    """The globally unique `ID` to be used in selecting a single `Activity`."""
    nodeId: ID!
  ): Activity

  """Reads a single `ActividadesAlumno` using its globally unique `ID`."""
  actividadesAlumnoByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `ActividadesAlumno`.
    """
    nodeId: ID!
  ): ActividadesAlumno

  """Reads a single `ActividadesArchivo` using its globally unique `ID`."""
  actividadesArchivoByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `ActividadesArchivo`.
    """
    nodeId: ID!
  ): ActividadesArchivo

  """Reads a single `ActividadesEntregas` using its globally unique `ID`."""
  actividadesEntregasByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `ActividadesEntregas`.
    """
    nodeId: ID!
  ): ActividadesEntregas

  """
  Reads a single `ActividadesEntregasComentario` using its globally unique `ID`.
  """
  actividadesEntregasComentarioByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `ActividadesEntregasComentario`.
    """
    nodeId: ID!
  ): ActividadesEntregasComentario

  """Reads a single `ActivityLog` using its globally unique `ID`."""
  activityLogByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `ActivityLog`.
    """
    nodeId: ID!
  ): ActivityLog

  """Reads a single `AdmAporte` using its globally unique `ID`."""
  admAporteByNodeId(
    """The globally unique `ID` to be used in selecting a single `AdmAporte`."""
    nodeId: ID!
  ): AdmAporte

  """Reads a single `AdmBanco` using its globally unique `ID`."""
  admBancoByNodeId(
    """The globally unique `ID` to be used in selecting a single `AdmBanco`."""
    nodeId: ID!
  ): AdmBanco

  """Reads a single `AdmBancosCuenta` using its globally unique `ID`."""
  admBancosCuentaByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `AdmBancosCuenta`.
    """
    nodeId: ID!
  ): AdmBancosCuenta

  """Reads a single `AdmCaja` using its globally unique `ID`."""
  admCajaByNodeId(
    """The globally unique `ID` to be used in selecting a single `AdmCaja`."""
    nodeId: ID!
  ): AdmCaja

  """Reads a single `AdmCegreso` using its globally unique `ID`."""
  admCegresoByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `AdmCegreso`.
    """
    nodeId: ID!
  ): AdmCegreso

  """Reads a single `AdmCingreso` using its globally unique `ID`."""
  admCingresoByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `AdmCingreso`.
    """
    nodeId: ID!
  ): AdmCingreso

  """Reads a single `AdmCingresosValore` using its globally unique `ID`."""
  admCingresosValoreByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `AdmCingresosValore`.
    """
    nodeId: ID!
  ): AdmCingresosValore

  """Reads a single `AdmCuenta` using its globally unique `ID`."""
  admCuentaByNodeId(
    """The globally unique `ID` to be used in selecting a single `AdmCuenta`."""
    nodeId: ID!
  ): AdmCuenta

  """Reads a single `AdmDescuento` using its globally unique `ID`."""
  admDescuentoByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `AdmDescuento`.
    """
    nodeId: ID!
  ): AdmDescuento

  """Reads a single `AdmDescuentosGrupo` using its globally unique `ID`."""
  admDescuentosGrupoByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `AdmDescuentosGrupo`.
    """
    nodeId: ID!
  ): AdmDescuentosGrupo

  """
  Reads a single `AdmDescuentosGruposFamiliare` using its globally unique `ID`.
  """
  admDescuentosGruposFamiliareByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `AdmDescuentosGruposFamiliare`.
    """
    nodeId: ID!
  ): AdmDescuentosGruposFamiliare

  """Reads a single `AdmEgresoItem` using its globally unique `ID`."""
  admEgresoItemByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `AdmEgresoItem`.
    """
    nodeId: ID!
  ): AdmEgresoItem

  """Reads a single `AdmEgreso` using its globally unique `ID`."""
  admEgresoByNodeId(
    """The globally unique `ID` to be used in selecting a single `AdmEgreso`."""
    nodeId: ID!
  ): AdmEgreso

  """Reads a single `AdmFacturaItem` using its globally unique `ID`."""
  admFacturaItemByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `AdmFacturaItem`.
    """
    nodeId: ID!
  ): AdmFacturaItem

  """Reads a single `AdmFacturaPago` using its globally unique `ID`."""
  admFacturaPagoByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `AdmFacturaPago`.
    """
    nodeId: ID!
  ): AdmFacturaPago

  """Reads a single `AdmFactura` using its globally unique `ID`."""
  admFacturaByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `AdmFactura`.
    """
    nodeId: ID!
  ): AdmFactura

  """Reads a single `AdmGruposFamiliare` using its globally unique `ID`."""
  admGruposFamiliareByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `AdmGruposFamiliare`.
    """
    nodeId: ID!
  ): AdmGruposFamiliare

  """Reads a single `AdmProveedore` using its globally unique `ID`."""
  admProveedoreByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `AdmProveedore`.
    """
    nodeId: ID!
  ): AdmProveedore

  """Reads a single `Alerta` using its globally unique `ID`."""
  alertaByNodeId(
    """The globally unique `ID` to be used in selecting a single `Alerta`."""
    nodeId: ID!
  ): Alerta

  """Reads a single `Asignatura` using its globally unique `ID`."""
  asignaturaByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Asignatura`.
    """
    nodeId: ID!
  ): Asignatura

  """Reads a single `AwsSesHistorial` using its globally unique `ID`."""
  awsSesHistorialByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `AwsSesHistorial`.
    """
    nodeId: ID!
  ): AwsSesHistorial

  """Reads a single `Calendario` using its globally unique `ID`."""
  calendarioByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Calendario`.
    """
    nodeId: ID!
  ): Calendario

  """Reads a single `CalendarioGrupo` using its globally unique `ID`."""
  calendarioGrupoByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `CalendarioGrupo`.
    """
    nodeId: ID!
  ): CalendarioGrupo

  """Reads a single `CalendarioUser` using its globally unique `ID`."""
  calendarioUserByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `CalendarioUser`.
    """
    nodeId: ID!
  ): CalendarioUser

  """Reads a single `Calificacione` using its globally unique `ID`."""
  calificacioneByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Calificacione`.
    """
    nodeId: ID!
  ): Calificacione

  """
  Reads a single `CalificacionesConcepto` using its globally unique `ID`.
  """
  calificacionesConceptoByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `CalificacionesConcepto`.
    """
    nodeId: ID!
  ): CalificacionesConcepto

  """
  Reads a single `CalificacionesConceptosAlumno` using its globally unique `ID`.
  """
  calificacionesConceptosAlumnoByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `CalificacionesConceptosAlumno`.
    """
    nodeId: ID!
  ): CalificacionesConceptosAlumno

  """Reads a single `CalificacionesEscala` using its globally unique `ID`."""
  calificacionesEscalaByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `CalificacionesEscala`.
    """
    nodeId: ID!
  ): CalificacionesEscala

  """
  Reads a single `CalificacionesEscalasValore` using its globally unique `ID`.
  """
  calificacionesEscalasValoreByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `CalificacionesEscalasValore`.
    """
    nodeId: ID!
  ): CalificacionesEscalasValore

  """Reads a single `Changelog` using its globally unique `ID`."""
  changelogByNodeId(
    """The globally unique `ID` to be used in selecting a single `Changelog`."""
    nodeId: ID!
  ): Changelog

  """Reads a single `City` using its globally unique `ID`."""
  cityByNodeId(
    """The globally unique `ID` to be used in selecting a single `City`."""
    nodeId: ID!
  ): City

  """Reads a single `ClienteModule` using its globally unique `ID`."""
  clienteModuleByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `ClienteModule`.
    """
    nodeId: ID!
  ): ClienteModule

  """Reads a single `Cliente` using its globally unique `ID`."""
  clienteByNodeId(
    """The globally unique `ID` to be used in selecting a single `Cliente`."""
    nodeId: ID!
  ): Cliente

  """Reads a single `Dispositivo` using its globally unique `ID`."""
  dispositivoByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `Dispositivo`.
    """
    nodeId: ID!
  ): Dispositivo

  """Reads a single `Divisione` using its globally unique `ID`."""
  divisioneByNodeId(
    """The globally unique `ID` to be used in selecting a single `Divisione`."""
    nodeId: ID!
  ): Divisione

  """Reads a single `Errorsapp` using its globally unique `ID`."""
  errorsappByNodeId(
    """The globally unique `ID` to be used in selecting a single `Errorsapp`."""
    nodeId: ID!
  ): Errorsapp

  """Reads a single `EspaciosCurriculare` using its globally unique `ID`."""
  espaciosCurriculareByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `EspaciosCurriculare`.
    """
    nodeId: ID!
  ): EspaciosCurriculare

  """Reads a single `Evento` using its globally unique `ID`."""
  eventoByNodeId(
    """The globally unique `ID` to be used in selecting a single `Evento`."""
    nodeId: ID!
  ): Evento

  """Reads a single `FailedJob` using its globally unique `ID`."""
  failedJobByNodeId(
    """The globally unique `ID` to be used in selecting a single `FailedJob`."""
    nodeId: ID!
  ): FailedJob

  """Reads a single `Foto` using its globally unique `ID`."""
  fotoByNodeId(
    """The globally unique `ID` to be used in selecting a single `Foto`."""
    nodeId: ID!
  ): Foto

  """Reads a single `Galeria` using its globally unique `ID`."""
  galeriaByNodeId(
    """The globally unique `ID` to be used in selecting a single `Galeria`."""
    nodeId: ID!
  ): Galeria

  """Reads a single `Grupo` using its globally unique `ID`."""
  grupoByNodeId(
    """The globally unique `ID` to be used in selecting a single `Grupo`."""
    nodeId: ID!
  ): Grupo

  """Reads a single `GruposArchivo` using its globally unique `ID`."""
  gruposArchivoByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `GruposArchivo`.
    """
    nodeId: ID!
  ): GruposArchivo

  """Reads a single `Hijo` using its globally unique `ID`."""
  hijoByNodeId(
    """The globally unique `ID` to be used in selecting a single `Hijo`."""
    nodeId: ID!
  ): Hijo

  """
  Reads a single `HistorialNotificacione` using its globally unique `ID`.
  """
  historialNotificacioneByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `HistorialNotificacione`.
    """
    nodeId: ID!
  ): HistorialNotificacione

  """Reads a single `Log` using its globally unique `ID`."""
  logByNodeId(
    """The globally unique `ID` to be used in selecting a single `Log`."""
    nodeId: ID!
  ): Log

  """Reads a single `MensajeItem` using its globally unique `ID`."""
  mensajeItemByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `MensajeItem`.
    """
    nodeId: ID!
  ): MensajeItem

  """Reads a single `Mensaje` using its globally unique `ID`."""
  mensajeByNodeId(
    """The globally unique `ID` to be used in selecting a single `Mensaje`."""
    nodeId: ID!
  ): Mensaje

  """Reads a single `MensajesAdmin` using its globally unique `ID`."""
  mensajesAdminByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `MensajesAdmin`.
    """
    nodeId: ID!
  ): MensajesAdmin

  """Reads a single `MensajesArchivo` using its globally unique `ID`."""
  mensajesArchivoByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `MensajesArchivo`.
    """
    nodeId: ID!
  ): MensajesArchivo

  """Reads a single `MenuApp` using its globally unique `ID`."""
  menuAppByNodeId(
    """The globally unique `ID` to be used in selecting a single `MenuApp`."""
    nodeId: ID!
  ): MenuApp

  """Reads a single `Migration` using its globally unique `ID`."""
  migrationByNodeId(
    """The globally unique `ID` to be used in selecting a single `Migration`."""
    nodeId: ID!
  ): Migration

  """Reads a single `Module` using its globally unique `ID`."""
  moduleByNodeId(
    """The globally unique `ID` to be used in selecting a single `Module`."""
    nodeId: ID!
  ): Module

  """Reads a single `ModulesBack` using its globally unique `ID`."""
  modulesBackByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `ModulesBack`.
    """
    nodeId: ID!
  ): ModulesBack

  """Reads a single `MtCorregir` using its globally unique `ID`."""
  mtCorregirByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `MtCorregir`.
    """
    nodeId: ID!
  ): MtCorregir

  """Reads a single `MultimediaMapping` using its globally unique `ID`."""
  multimediaMappingByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `MultimediaMapping`.
    """
    nodeId: ID!
  ): MultimediaMapping

  """Reads a single `Noticia` using its globally unique `ID`."""
  noticiaByNodeId(
    """The globally unique `ID` to be used in selecting a single `Noticia`."""
    nodeId: ID!
  ): Noticia

  """Reads a single `Opcione` using its globally unique `ID`."""
  opcioneByNodeId(
    """The globally unique `ID` to be used in selecting a single `Opcione`."""
    nodeId: ID!
  ): Opcione

  """Reads a single `OpcionesDivision` using its globally unique `ID`."""
  opcionesDivisionByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `OpcionesDivision`.
    """
    nodeId: ID!
  ): OpcionesDivision

  """Reads a single `Plantilla` using its globally unique `ID`."""
  plantillaByNodeId(
    """The globally unique `ID` to be used in selecting a single `Plantilla`."""
    nodeId: ID!
  ): Plantilla

  """Reads a single `Provincia` using its globally unique `ID`."""
  provinciaByNodeId(
    """The globally unique `ID` to be used in selecting a single `Provincia`."""
    nodeId: ID!
  ): Provincia

  """Reads a single `Setting` using its globally unique `ID`."""
  settingByNodeId(
    """The globally unique `ID` to be used in selecting a single `Setting`."""
    nodeId: ID!
  ): Setting

  """Reads a single `TelescopeEntry` using its globally unique `ID`."""
  telescopeEntryByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `TelescopeEntry`.
    """
    nodeId: ID!
  ): TelescopeEntry

  """Reads a single `Tip` using its globally unique `ID`."""
  tipByNodeId(
    """The globally unique `ID` to be used in selecting a single `Tip`."""
    nodeId: ID!
  ): Tip

  """Reads a single `User` using its globally unique `ID`."""
  userByNodeId(
    """The globally unique `ID` to be used in selecting a single `User`."""
    nodeId: ID!
  ): User

  """Reads a single `UsersConfiguracion` using its globally unique `ID`."""
  usersConfiguracionByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `UsersConfiguracion`.
    """
    nodeId: ID!
  ): UsersConfiguracion

  """Reads a single `UsersGrupo` using its globally unique `ID`."""
  usersGrupoByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `UsersGrupo`.
    """
    nodeId: ID!
  ): UsersGrupo

  """Reads a single `UsersInactivo` using its globally unique `ID`."""
  usersInactivoByNodeId(
    """
    The globally unique `ID` to be used in selecting a single `UsersInactivo`.
    """
    nodeId: ID!
  ): UsersInactivo

  """Reads a single `UsersRole` using its globally unique `ID`."""
  usersRoleByNodeId(
    """The globally unique `ID` to be used in selecting a single `UsersRole`."""
    nodeId: ID!
  ): UsersRole

  """Reads a single `Versione` using its globally unique `ID`."""
  versioneByNodeId(
    """The globally unique `ID` to be used in selecting a single `Versione`."""
    nodeId: ID!
  ): Versione
}

"""An object with a globally unique `ID`."""
interface Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
}

"""A connection to a list of `Activity` values."""
type ActivitiesConnection {
  """A list of `Activity` objects."""
  nodes: [Activity]!

  """
  A list of edges which contains the `Activity` and cursor to aid in pagination.
  """
  edges: [ActivitiesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Activity` you could get from the connection."""
  totalCount: Int!
}

type Activity implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  nombre: String
  fechaInicio: Datetime
  fechaEntrega: Datetime
  espacioCurricularId: Int
  grupoId: Int
  divisionId: Int
  docenteId: Int
  calificable: Boolean!
  calificacionConceptoId: Int
  descripcion: String
  borrador: Boolean
  aprobada: Boolean
  fechaAprobacion: Datetime
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime

  """
  Reads a single `EspaciosCurriculare` that is related to this `Activity`.
  """
  espacioCurricular: EspaciosCurriculare

  """Reads a single `Grupo` that is related to this `Activity`."""
  grupo: Grupo

  """Reads a single `Divisione` that is related to this `Activity`."""
  division: Divisione

  """Reads a single `User` that is related to this `Activity`."""
  docente: User

  """
  Reads a single `CalificacionesConcepto` that is related to this `Activity`.
  """
  calificacionConcepto: CalificacionesConcepto

  """Reads and enables pagination through a set of `ActividadesAlumno`."""
  actividadesAlumnosByActividadId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `ActividadesAlumno`."""
    orderBy: [ActividadesAlumnosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ActividadesAlumnoCondition
  ): ActividadesAlumnosConnection!

  """Reads and enables pagination through a set of `ActividadesEntregas`."""
  actividadesEntregasesByActividadId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `ActividadesEntregas`."""
    orderBy: [ActividadesEntregasesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ActividadesEntregasCondition
  ): ActividadesEntregasesConnection!

  """Reads and enables pagination through a set of `ActividadesArchivo`."""
  actividadesArchivosByActividadId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `ActividadesArchivo`."""
    orderBy: [ActividadesArchivosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ActividadesArchivoCondition
  ): ActividadesArchivosConnection!

  """Reads and enables pagination through a set of `Alerta`."""
  alertasByActividadId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Alerta`."""
    orderBy: [AlertasOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AlertaCondition
  ): AlertasConnection!

  """Reads and enables pagination through a set of `Calendario`."""
  calendariosByActividadId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Calendario`."""
    orderBy: [CalendariosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: CalendarioCondition
  ): CalendariosConnection!
}

"""
A signed eight-byte integer. The upper big integer values are greater than the
max value for a JavaScript number. Therefore all big integers will be output as
strings and not numbers.
"""
scalar BigInt

"""
A point in time as described by the [ISO
8601](https://en.wikipedia.org/wiki/ISO_8601) standard. May or may not include a timezone.
"""
scalar Datetime

type EspaciosCurriculare implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  nombre: String
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime

  """Reads and enables pagination through a set of `Activity`."""
  activitiesByEspacioCurricularId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Activity`."""
    orderBy: [ActivitiesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ActivityCondition
  ): ActivitiesConnection!

  """Reads and enables pagination through a set of `Asignatura`."""
  asignaturasByEspacioCurricularId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Asignatura`."""
    orderBy: [AsignaturasOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AsignaturaCondition
  ): AsignaturasConnection!
}

"""A location in a connection that can be used for resuming pagination."""
scalar Cursor

"""Methods to use when ordering `Activity`."""
enum ActivitiesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  NOMBRE_ASC
  NOMBRE_DESC
  FECHA_INICIO_ASC
  FECHA_INICIO_DESC
  FECHA_ENTREGA_ASC
  FECHA_ENTREGA_DESC
  ESPACIO_CURRICULAR_ID_ASC
  ESPACIO_CURRICULAR_ID_DESC
  GRUPO_ID_ASC
  GRUPO_ID_DESC
  DIVISION_ID_ASC
  DIVISION_ID_DESC
  DOCENTE_ID_ASC
  DOCENTE_ID_DESC
  CALIFICABLE_ASC
  CALIFICABLE_DESC
  CALIFICACION_CONCEPTO_ID_ASC
  CALIFICACION_CONCEPTO_ID_DESC
  DESCRIPCION_ASC
  DESCRIPCION_DESC
  BORRADOR_ASC
  BORRADOR_DESC
  APROBADA_ASC
  APROBADA_DESC
  FECHA_APROBACION_ASC
  FECHA_APROBACION_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  DELETED_AT_ASC
  DELETED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Activity` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input ActivityCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `nombre` field."""
  nombre: String

  """Checks for equality with the object’s `fechaInicio` field."""
  fechaInicio: Datetime

  """Checks for equality with the object’s `fechaEntrega` field."""
  fechaEntrega: Datetime

  """Checks for equality with the object’s `espacioCurricularId` field."""
  espacioCurricularId: Int

  """Checks for equality with the object’s `grupoId` field."""
  grupoId: Int

  """Checks for equality with the object’s `divisionId` field."""
  divisionId: Int

  """Checks for equality with the object’s `docenteId` field."""
  docenteId: Int

  """Checks for equality with the object’s `calificable` field."""
  calificable: Boolean

  """Checks for equality with the object’s `calificacionConceptoId` field."""
  calificacionConceptoId: Int

  """Checks for equality with the object’s `descripcion` field."""
  descripcion: String

  """Checks for equality with the object’s `borrador` field."""
  borrador: Boolean

  """Checks for equality with the object’s `aprobada` field."""
  aprobada: Boolean

  """Checks for equality with the object’s `fechaAprobacion` field."""
  fechaAprobacion: Datetime

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `deletedAt` field."""
  deletedAt: Datetime
}

"""A connection to a list of `Asignatura` values."""
type AsignaturasConnection {
  """A list of `Asignatura` objects."""
  nodes: [Asignatura]!

  """
  A list of edges which contains the `Asignatura` and cursor to aid in pagination.
  """
  edges: [AsignaturasEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Asignatura` you could get from the connection."""
  totalCount: Int!
}

type Asignatura implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  grupoId: Int
  docenteId: Int
  espacioCurricularId: Int
  createdAt: Datetime
  updatedAt: Datetime

  """Reads a single `Grupo` that is related to this `Asignatura`."""
  grupo: Grupo

  """Reads a single `User` that is related to this `Asignatura`."""
  docente: User

  """
  Reads a single `EspaciosCurriculare` that is related to this `Asignatura`.
  """
  espacioCurricular: EspaciosCurriculare
}

type Grupo implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  nombre: String!
  descripcion: String
  clienteId: BigInt!
  divisionId: BigInt
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime

  """Reads a single `Cliente` that is related to this `Grupo`."""
  cliente: Cliente

  """Reads a single `Divisione` that is related to this `Grupo`."""
  division: Divisione

  """Reads and enables pagination through a set of `Activity`."""
  activities(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Activity`."""
    orderBy: [ActivitiesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ActivityCondition
  ): ActivitiesConnection!

  """Reads and enables pagination through a set of `Asignatura`."""
  asignaturas(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Asignatura`."""
    orderBy: [AsignaturasOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AsignaturaCondition
  ): AsignaturasConnection!

  """Reads and enables pagination through a set of `CalendarioGrupo`."""
  calendarioGrupos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `CalendarioGrupo`."""
    orderBy: [CalendarioGruposOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: CalendarioGrupoCondition
  ): CalendarioGruposConnection!

  """Reads and enables pagination through a set of `Calendario`."""
  calendarios(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Calendario`."""
    orderBy: [CalendariosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: CalendarioCondition
  ): CalendariosConnection!

  """Reads and enables pagination through a set of `GruposArchivo`."""
  gruposArchivos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `GruposArchivo`."""
    orderBy: [GruposArchivosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GruposArchivoCondition
  ): GruposArchivosConnection!

  """Reads and enables pagination through a set of `UsersGrupo`."""
  usersGrupos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `UsersGrupo`."""
    orderBy: [UsersGruposOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UsersGrupoCondition
  ): UsersGruposConnection!
}

type Cliente implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  name: String!
  alumnosFacturables: BigInt
  logo: String
  email: String!
  direccion: String
  provinciaId: BigInt
  latitud: String
  longitud: String
  tieneApp: Int!
  notes: String
  cuit: String
  iibb: String
  inicioActividades: String
  appBundleAndroid: String
  appBundleIos: String
  demoActiva: Int
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
  telefono: String

  """Reads and enables pagination through a set of `AdmFactura`."""
  admFacturas(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmFactura`."""
    orderBy: [AdmFacturasOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmFacturaCondition
  ): AdmFacturasConnection!

  """Reads and enables pagination through a set of `AdmGruposFamiliare`."""
  admGruposFamiliares(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmGruposFamiliare`."""
    orderBy: [AdmGruposFamiliaresOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmGruposFamiliareCondition
  ): AdmGruposFamiliaresConnection!

  """Reads and enables pagination through a set of `AdmCingresosValore`."""
  admCingresosValores(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmCingresosValore`."""
    orderBy: [AdmCingresosValoresOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmCingresosValoreCondition
  ): AdmCingresosValoresConnection!

  """Reads and enables pagination through a set of `AdmEgreso`."""
  admEgresos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmEgreso`."""
    orderBy: [AdmEgresosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmEgresoCondition
  ): AdmEgresosConnection!

  """Reads and enables pagination through a set of `AdmFacturaPago`."""
  admFacturaPagos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmFacturaPago`."""
    orderBy: [AdmFacturaPagosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmFacturaPagoCondition
  ): AdmFacturaPagosConnection!

  """Reads and enables pagination through a set of `AdmEgresoItem`."""
  admEgresoItems(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmEgresoItem`."""
    orderBy: [AdmEgresoItemsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmEgresoItemCondition
  ): AdmEgresoItemsConnection!

  """Reads and enables pagination through a set of `AdmFacturaItem`."""
  admFacturaItems(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmFacturaItem`."""
    orderBy: [AdmFacturaItemsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmFacturaItemCondition
  ): AdmFacturaItemsConnection!

  """Reads and enables pagination through a set of `AdmCingreso`."""
  admCingresos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmCingreso`."""
    orderBy: [AdmCingresosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmCingresoCondition
  ): AdmCingresosConnection!

  """Reads and enables pagination through a set of `AdmCegreso`."""
  admCegresos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmCegreso`."""
    orderBy: [AdmCegresosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmCegresoCondition
  ): AdmCegresosConnection!

  """Reads and enables pagination through a set of `AdmBancosCuenta`."""
  admBancosCuentas(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmBancosCuenta`."""
    orderBy: [AdmBancosCuentasOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmBancosCuentaCondition
  ): AdmBancosCuentasConnection!

  """Reads and enables pagination through a set of `AdmProveedore`."""
  admProveedores(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmProveedore`."""
    orderBy: [AdmProveedoresOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmProveedoreCondition
  ): AdmProveedoresConnection!

  """Reads and enables pagination through a set of `AdmCaja`."""
  admCajas(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmCaja`."""
    orderBy: [AdmCajasOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmCajaCondition
  ): AdmCajasConnection!

  """Reads and enables pagination through a set of `Dispositivo`."""
  dispositivos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Dispositivo`."""
    orderBy: [DispositivosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: DispositivoCondition
  ): DispositivosConnection!

  """Reads and enables pagination through a set of `Grupo`."""
  grupos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Grupo`."""
    orderBy: [GruposOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GrupoCondition
  ): GruposConnection!

  """Reads and enables pagination through a set of `Galeria`."""
  galerias(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Galeria`."""
    orderBy: [GaleriasOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GaleriaCondition
  ): GaleriasConnection!

  """Reads and enables pagination through a set of `Noticia`."""
  noticias(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Noticia`."""
    orderBy: [NoticiasOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: NoticiaCondition
  ): NoticiasConnection!

  """Reads and enables pagination through a set of `Evento`."""
  eventos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Evento`."""
    orderBy: [EventosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: EventoCondition
  ): EventosConnection!

  """Reads and enables pagination through a set of `Tip`."""
  tips(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Tip`."""
    orderBy: [TipsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TipCondition
  ): TipsConnection!

  """Reads and enables pagination through a set of `UsersRole`."""
  usersRolesByUsersRolesClienteId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `UsersRole`."""
    orderBy: [UsersRolesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UsersRoleCondition
  ): UsersRolesConnection!

  """Reads and enables pagination through a set of `Versione`."""
  versiones(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Versione`."""
    orderBy: [VersionesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: VersioneCondition
  ): VersionesConnection!
}

"""A connection to a list of `AdmFactura` values."""
type AdmFacturasConnection {
  """A list of `AdmFactura` objects."""
  nodes: [AdmFactura]!

  """
  A list of edges which contains the `AdmFactura` and cursor to aid in pagination.
  """
  edges: [AdmFacturasEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `AdmFactura` you could get from the connection."""
  totalCount: Int!
}

type AdmFactura implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  tipo: BigInt!
  puntoDeVenta: BigInt
  numeroFactura: String
  tipoComprobante: BigInt
  numeroComprobante: String
  clienteNombre: String
  clienteCuit: String
  userFacturado: BigInt
  monto: BigFloat!
  cae: String
  caeVencimientoFecha: Date
  vencimiento: Datetime
  descripcion: String
  path: String
  observaciones: String
  clienteId: BigInt!
  userCreator: BigInt!
  envioEmail: Int
  noAplicado: Int
  fechaFacturacion: Datetime
  fechaFacturacionAfip: Datetime
  fechaPago: Datetime
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
  obsAdmin: String

  """Reads a single `Cliente` that is related to this `AdmFactura`."""
  cliente: Cliente

  """Reads a single `User` that is related to this `AdmFactura`."""
  userByUserCreator: User

  """Reads and enables pagination through a set of `AdmFacturaPago`."""
  admFacturaPagosByFacturaId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmFacturaPago`."""
    orderBy: [AdmFacturaPagosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmFacturaPagoCondition
  ): AdmFacturaPagosConnection!

  """Reads and enables pagination through a set of `AdmFacturaItem`."""
  admFacturaItemsByFacturaId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmFacturaItem`."""
    orderBy: [AdmFacturaItemsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmFacturaItemCondition
  ): AdmFacturaItemsConnection!
}

"""
A floating point number that requires more precision than IEEE 754 binary 64
"""
scalar BigFloat

"""The day, does not include a time."""
scalar Date

type User implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  nombre: String!
  apellido: String!
  dni: String
  fechaNacimiento: Date
  sexo: String
  foto: String
  email: String
  telefono: String
  password: String
  domicilio: String
  provinciaId: Int
  ciudadId: Int
  perfil: String
  observaciones: String
  rememberToken: String
  recoveryToken: String
  grupoFamiliarId: BigInt
  permisoAdmin: Int
  recibirEmails: Int!
  lastAction: Datetime
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
  deletedBy: BigInt

  """Reads a single `Provincia` that is related to this `User`."""
  provincia: Provincia

  """Reads a single `City` that is related to this `User`."""
  ciudad: City

  """Reads and enables pagination through a set of `Activity`."""
  activitiesByDocenteId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Activity`."""
    orderBy: [ActivitiesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ActivityCondition
  ): ActivitiesConnection!

  """Reads and enables pagination through a set of `ActividadesAlumno`."""
  actividadesAlumnosByAlumnoId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `ActividadesAlumno`."""
    orderBy: [ActividadesAlumnosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ActividadesAlumnoCondition
  ): ActividadesAlumnosConnection!

  """Reads and enables pagination through a set of `AdmFactura`."""
  admFacturasByUserCreator(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmFactura`."""
    orderBy: [AdmFacturasOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmFacturaCondition
  ): AdmFacturasConnection!

  """Reads and enables pagination through a set of `ActividadesEntregas`."""
  actividadesEntregasesByAlumnoId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `ActividadesEntregas`."""
    orderBy: [ActividadesEntregasesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ActividadesEntregasCondition
  ): ActividadesEntregasesConnection!

  """Reads and enables pagination through a set of `ActividadesArchivo`."""
  actividadesArchivos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `ActividadesArchivo`."""
    orderBy: [ActividadesArchivosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ActividadesArchivoCondition
  ): ActividadesArchivosConnection!

  """
  Reads and enables pagination through a set of `ActividadesEntregasComentario`.
  """
  actividadesEntregasComentarios(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `ActividadesEntregasComentario`."""
    orderBy: [ActividadesEntregasComentariosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ActividadesEntregasComentarioCondition
  ): ActividadesEntregasComentariosConnection!

  """Reads and enables pagination through a set of `Alerta`."""
  alertasByAlumnoId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Alerta`."""
    orderBy: [AlertasOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AlertaCondition
  ): AlertasConnection!

  """Reads and enables pagination through a set of `Asignatura`."""
  asignaturasByDocenteId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Asignatura`."""
    orderBy: [AsignaturasOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AsignaturaCondition
  ): AsignaturasConnection!

  """Reads and enables pagination through a set of `AdmEgreso`."""
  admEgresosByUserCreator(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmEgreso`."""
    orderBy: [AdmEgresosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmEgresoCondition
  ): AdmEgresosConnection!

  """Reads and enables pagination through a set of `AdmFacturaPago`."""
  admFacturaPagosByUserCreatorId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmFacturaPago`."""
    orderBy: [AdmFacturaPagosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmFacturaPagoCondition
  ): AdmFacturaPagosConnection!

  """Reads and enables pagination through a set of `AdmFacturaItem`."""
  admFacturaItems(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmFacturaItem`."""
    orderBy: [AdmFacturaItemsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmFacturaItemCondition
  ): AdmFacturaItemsConnection!

  """Reads and enables pagination through a set of `Calificacione`."""
  calificacionesByAlumnoId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Calificacione`."""
    orderBy: [CalificacionesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: CalificacioneCondition
  ): CalificacionesConnection!

  """Reads and enables pagination through a set of `AdmCaja`."""
  admCajas(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmCaja`."""
    orderBy: [AdmCajasOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmCajaCondition
  ): AdmCajasConnection!

  """Reads and enables pagination through a set of `Calendario`."""
  calendarios(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Calendario`."""
    orderBy: [CalendariosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: CalendarioCondition
  ): CalendariosConnection!

  """Reads and enables pagination through a set of `Dispositivo`."""
  dispositivos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Dispositivo`."""
    orderBy: [DispositivosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: DispositivoCondition
  ): DispositivosConnection!

  """Reads and enables pagination through a set of `Errorsapp`."""
  errorsapps(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Errorsapp`."""
    orderBy: [ErrorsappsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ErrorsappCondition
  ): ErrorsappsConnection!

  """Reads and enables pagination through a set of `Hijo`."""
  hijos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Hijo`."""
    orderBy: [HijosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: HijoCondition
  ): HijosConnection!

  """Reads and enables pagination through a set of `Hijo`."""
  hijosByHijoId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Hijo`."""
    orderBy: [HijosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: HijoCondition
  ): HijosConnection!

  """Reads and enables pagination through a set of `Plantilla`."""
  plantillas(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Plantilla`."""
    orderBy: [PlantillasOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: PlantillaCondition
  ): PlantillasConnection!

  """Reads and enables pagination through a set of `GruposArchivo`."""
  gruposArchivos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `GruposArchivo`."""
    orderBy: [GruposArchivosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GruposArchivoCondition
  ): GruposArchivosConnection!

  """Reads and enables pagination through a set of `UsersConfiguracion`."""
  usersConfiguracions(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `UsersConfiguracion`."""
    orderBy: [UsersConfiguracionsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UsersConfiguracionCondition
  ): UsersConfiguracionsConnection!

  """Reads and enables pagination through a set of `UsersRole`."""
  usersRoles(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `UsersRole`."""
    orderBy: [UsersRolesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UsersRoleCondition
  ): UsersRolesConnection!

  """Reads and enables pagination through a set of `UsersGrupo`."""
  usersGrupos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `UsersGrupo`."""
    orderBy: [UsersGruposOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UsersGrupoCondition
  ): UsersGruposConnection!
}

type Provincia implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  nombre: String

  """Reads and enables pagination through a set of `City`."""
  cities(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `City`."""
    orderBy: [CitiesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: CityCondition
  ): CitiesConnection!

  """Reads and enables pagination through a set of `User`."""
  users(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `User`."""
    orderBy: [UsersOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UserCondition
  ): UsersConnection!
}

"""A connection to a list of `City` values."""
type CitiesConnection {
  """A list of `City` objects."""
  nodes: [City]!

  """
  A list of edges which contains the `City` and cursor to aid in pagination.
  """
  edges: [CitiesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `City` you could get from the connection."""
  totalCount: Int!
}

type City implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  nombre: String!
  provinciaId: BigInt!
  latitud: Float
  longitud: Float
  createdAt: Datetime
  updatedAt: Datetime

  """Reads a single `Provincia` that is related to this `City`."""
  provincia: Provincia

  """Reads and enables pagination through a set of `User`."""
  usersByCiudadId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `User`."""
    orderBy: [UsersOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UserCondition
  ): UsersConnection!
}

"""A connection to a list of `User` values."""
type UsersConnection {
  """A list of `User` objects."""
  nodes: [User]!

  """
  A list of edges which contains the `User` and cursor to aid in pagination.
  """
  edges: [UsersEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `User` you could get from the connection."""
  totalCount: Int!
}

"""A `User` edge in the connection."""
type UsersEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `User` at the end of the edge."""
  node: User
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: Cursor

  """When paginating forwards, the cursor to continue."""
  endCursor: Cursor
}

"""Methods to use when ordering `User`."""
enum UsersOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  NOMBRE_ASC
  NOMBRE_DESC
  APELLIDO_ASC
  APELLIDO_DESC
  DNI_ASC
  DNI_DESC
  FECHA_NACIMIENTO_ASC
  FECHA_NACIMIENTO_DESC
  SEXO_ASC
  SEXO_DESC
  FOTO_ASC
  FOTO_DESC
  EMAIL_ASC
  EMAIL_DESC
  TELEFONO_ASC
  TELEFONO_DESC
  PASSWORD_ASC
  PASSWORD_DESC
  DOMICILIO_ASC
  DOMICILIO_DESC
  PROVINCIA_ID_ASC
  PROVINCIA_ID_DESC
  CIUDAD_ID_ASC
  CIUDAD_ID_DESC
  PERFIL_ASC
  PERFIL_DESC
  OBSERVACIONES_ASC
  OBSERVACIONES_DESC
  REMEMBER_TOKEN_ASC
  REMEMBER_TOKEN_DESC
  RECOVERY_TOKEN_ASC
  RECOVERY_TOKEN_DESC
  GRUPO_FAMILIAR_ID_ASC
  GRUPO_FAMILIAR_ID_DESC
  PERMISO_ADMIN_ASC
  PERMISO_ADMIN_DESC
  RECIBIR_EMAILS_ASC
  RECIBIR_EMAILS_DESC
  LAST_ACTION_ASC
  LAST_ACTION_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  DELETED_AT_ASC
  DELETED_AT_DESC
  DELETED_BY_ASC
  DELETED_BY_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `User` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input UserCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `nombre` field."""
  nombre: String

  """Checks for equality with the object’s `apellido` field."""
  apellido: String

  """Checks for equality with the object’s `dni` field."""
  dni: String

  """Checks for equality with the object’s `fechaNacimiento` field."""
  fechaNacimiento: Date

  """Checks for equality with the object’s `sexo` field."""
  sexo: String

  """Checks for equality with the object’s `foto` field."""
  foto: String

  """Checks for equality with the object’s `email` field."""
  email: String

  """Checks for equality with the object’s `telefono` field."""
  telefono: String

  """Checks for equality with the object’s `password` field."""
  password: String

  """Checks for equality with the object’s `domicilio` field."""
  domicilio: String

  """Checks for equality with the object’s `provinciaId` field."""
  provinciaId: Int

  """Checks for equality with the object’s `ciudadId` field."""
  ciudadId: Int

  """Checks for equality with the object’s `perfil` field."""
  perfil: String

  """Checks for equality with the object’s `observaciones` field."""
  observaciones: String

  """Checks for equality with the object’s `rememberToken` field."""
  rememberToken: String

  """Checks for equality with the object’s `recoveryToken` field."""
  recoveryToken: String

  """Checks for equality with the object’s `grupoFamiliarId` field."""
  grupoFamiliarId: BigInt

  """Checks for equality with the object’s `permisoAdmin` field."""
  permisoAdmin: Int

  """Checks for equality with the object’s `recibirEmails` field."""
  recibirEmails: Int

  """Checks for equality with the object’s `lastAction` field."""
  lastAction: Datetime

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `deletedAt` field."""
  deletedAt: Datetime

  """Checks for equality with the object’s `deletedBy` field."""
  deletedBy: BigInt
}

"""A `City` edge in the connection."""
type CitiesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `City` at the end of the edge."""
  node: City
}

"""Methods to use when ordering `City`."""
enum CitiesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  NOMBRE_ASC
  NOMBRE_DESC
  PROVINCIA_ID_ASC
  PROVINCIA_ID_DESC
  LATITUD_ASC
  LATITUD_DESC
  LONGITUD_ASC
  LONGITUD_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `City` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input CityCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `nombre` field."""
  nombre: String

  """Checks for equality with the object’s `provinciaId` field."""
  provinciaId: BigInt

  """Checks for equality with the object’s `latitud` field."""
  latitud: Float

  """Checks for equality with the object’s `longitud` field."""
  longitud: Float

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A connection to a list of `ActividadesAlumno` values."""
type ActividadesAlumnosConnection {
  """A list of `ActividadesAlumno` objects."""
  nodes: [ActividadesAlumno]!

  """
  A list of edges which contains the `ActividadesAlumno` and cursor to aid in pagination.
  """
  edges: [ActividadesAlumnosEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `ActividadesAlumno` you could get from the connection.
  """
  totalCount: Int!
}

type ActividadesAlumno implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  actividadId: Int
  alumnoId: Int

  """Reads a single `Activity` that is related to this `ActividadesAlumno`."""
  actividad: Activity

  """Reads a single `User` that is related to this `ActividadesAlumno`."""
  alumno: User
}

"""A `ActividadesAlumno` edge in the connection."""
type ActividadesAlumnosEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `ActividadesAlumno` at the end of the edge."""
  node: ActividadesAlumno
}

"""Methods to use when ordering `ActividadesAlumno`."""
enum ActividadesAlumnosOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  ACTIVIDAD_ID_ASC
  ACTIVIDAD_ID_DESC
  ALUMNO_ID_ASC
  ALUMNO_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `ActividadesAlumno` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input ActividadesAlumnoCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `actividadId` field."""
  actividadId: Int

  """Checks for equality with the object’s `alumnoId` field."""
  alumnoId: Int
}

"""Methods to use when ordering `AdmFactura`."""
enum AdmFacturasOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  TIPO_ASC
  TIPO_DESC
  PUNTO_DE_VENTA_ASC
  PUNTO_DE_VENTA_DESC
  NUMERO_FACTURA_ASC
  NUMERO_FACTURA_DESC
  TIPO_COMPROBANTE_ASC
  TIPO_COMPROBANTE_DESC
  NUMERO_COMPROBANTE_ASC
  NUMERO_COMPROBANTE_DESC
  CLIENTE_NOMBRE_ASC
  CLIENTE_NOMBRE_DESC
  CLIENTE_CUIT_ASC
  CLIENTE_CUIT_DESC
  USER_FACTURADO_ASC
  USER_FACTURADO_DESC
  MONTO_ASC
  MONTO_DESC
  CAE_ASC
  CAE_DESC
  CAE_VENCIMIENTO_FECHA_ASC
  CAE_VENCIMIENTO_FECHA_DESC
  VENCIMIENTO_ASC
  VENCIMIENTO_DESC
  DESCRIPCION_ASC
  DESCRIPCION_DESC
  PATH_ASC
  PATH_DESC
  OBSERVACIONES_ASC
  OBSERVACIONES_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  USER_CREATOR_ASC
  USER_CREATOR_DESC
  ENVIO_EMAIL_ASC
  ENVIO_EMAIL_DESC
  NO_APLICADO_ASC
  NO_APLICADO_DESC
  FECHA_FACTURACION_ASC
  FECHA_FACTURACION_DESC
  FECHA_FACTURACION_AFIP_ASC
  FECHA_FACTURACION_AFIP_DESC
  FECHA_PAGO_ASC
  FECHA_PAGO_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  DELETED_AT_ASC
  DELETED_AT_DESC
  OBS_ADMIN_ASC
  OBS_ADMIN_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `AdmFactura` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AdmFacturaCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `tipo` field."""
  tipo: BigInt

  """Checks for equality with the object’s `puntoDeVenta` field."""
  puntoDeVenta: BigInt

  """Checks for equality with the object’s `numeroFactura` field."""
  numeroFactura: String

  """Checks for equality with the object’s `tipoComprobante` field."""
  tipoComprobante: BigInt

  """Checks for equality with the object’s `numeroComprobante` field."""
  numeroComprobante: String

  """Checks for equality with the object’s `clienteNombre` field."""
  clienteNombre: String

  """Checks for equality with the object’s `clienteCuit` field."""
  clienteCuit: String

  """Checks for equality with the object’s `userFacturado` field."""
  userFacturado: BigInt

  """Checks for equality with the object’s `monto` field."""
  monto: BigFloat

  """Checks for equality with the object’s `cae` field."""
  cae: String

  """Checks for equality with the object’s `caeVencimientoFecha` field."""
  caeVencimientoFecha: Date

  """Checks for equality with the object’s `vencimiento` field."""
  vencimiento: Datetime

  """Checks for equality with the object’s `descripcion` field."""
  descripcion: String

  """Checks for equality with the object’s `path` field."""
  path: String

  """Checks for equality with the object’s `observaciones` field."""
  observaciones: String

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: BigInt

  """Checks for equality with the object’s `userCreator` field."""
  userCreator: BigInt

  """Checks for equality with the object’s `envioEmail` field."""
  envioEmail: Int

  """Checks for equality with the object’s `noAplicado` field."""
  noAplicado: Int

  """Checks for equality with the object’s `fechaFacturacion` field."""
  fechaFacturacion: Datetime

  """Checks for equality with the object’s `fechaFacturacionAfip` field."""
  fechaFacturacionAfip: Datetime

  """Checks for equality with the object’s `fechaPago` field."""
  fechaPago: Datetime

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `deletedAt` field."""
  deletedAt: Datetime

  """Checks for equality with the object’s `obsAdmin` field."""
  obsAdmin: String
}

"""A connection to a list of `ActividadesEntregas` values."""
type ActividadesEntregasesConnection {
  """A list of `ActividadesEntregas` objects."""
  nodes: [ActividadesEntregas]!

  """
  A list of edges which contains the `ActividadesEntregas` and cursor to aid in pagination.
  """
  edges: [ActividadesEntregasesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `ActividadesEntregas` you could get from the connection.
  """
  totalCount: Int!
}

type ActividadesEntregas implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  actividadId: Int
  alumnoId: Int
  contenido: String
  createdAt: Datetime
  updatedAt: Datetime

  """
  Reads a single `Activity` that is related to this `ActividadesEntregas`.
  """
  actividad: Activity

  """Reads a single `User` that is related to this `ActividadesEntregas`."""
  alumno: User

  """Reads and enables pagination through a set of `ActividadesArchivo`."""
  actividadesArchivosByEntregaId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `ActividadesArchivo`."""
    orderBy: [ActividadesArchivosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ActividadesArchivoCondition
  ): ActividadesArchivosConnection!

  """
  Reads and enables pagination through a set of `ActividadesEntregasComentario`.
  """
  actividadesEntregasComentariosByEntregaId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `ActividadesEntregasComentario`."""
    orderBy: [ActividadesEntregasComentariosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ActividadesEntregasComentarioCondition
  ): ActividadesEntregasComentariosConnection!

  """Reads and enables pagination through a set of `Alerta`."""
  alertasByEntregaId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Alerta`."""
    orderBy: [AlertasOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AlertaCondition
  ): AlertasConnection!
}

"""A connection to a list of `ActividadesArchivo` values."""
type ActividadesArchivosConnection {
  """A list of `ActividadesArchivo` objects."""
  nodes: [ActividadesArchivo]!

  """
  A list of edges which contains the `ActividadesArchivo` and cursor to aid in pagination.
  """
  edges: [ActividadesArchivosEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `ActividadesArchivo` you could get from the connection.
  """
  totalCount: Int!
}

type ActividadesArchivo implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  actividadId: Int
  entregaId: Int
  userId: Int
  path: String
  tipo: Int
  titulo: String
  nombre: String
  extension: String
  soloDocentes: Boolean
  descripcion: String
  createdAt: Datetime
  updatedAt: Datetime

  """
  Reads a single `Activity` that is related to this `ActividadesArchivo`.
  """
  actividad: Activity

  """
  Reads a single `ActividadesEntregas` that is related to this `ActividadesArchivo`.
  """
  entrega: ActividadesEntregas

  """Reads a single `User` that is related to this `ActividadesArchivo`."""
  user: User
}

"""A `ActividadesArchivo` edge in the connection."""
type ActividadesArchivosEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `ActividadesArchivo` at the end of the edge."""
  node: ActividadesArchivo
}

"""Methods to use when ordering `ActividadesArchivo`."""
enum ActividadesArchivosOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  ACTIVIDAD_ID_ASC
  ACTIVIDAD_ID_DESC
  ENTREGA_ID_ASC
  ENTREGA_ID_DESC
  USER_ID_ASC
  USER_ID_DESC
  PATH_ASC
  PATH_DESC
  TIPO_ASC
  TIPO_DESC
  TITULO_ASC
  TITULO_DESC
  NOMBRE_ASC
  NOMBRE_DESC
  EXTENSION_ASC
  EXTENSION_DESC
  SOLO_DOCENTES_ASC
  SOLO_DOCENTES_DESC
  DESCRIPCION_ASC
  DESCRIPCION_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `ActividadesArchivo` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input ActividadesArchivoCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `actividadId` field."""
  actividadId: Int

  """Checks for equality with the object’s `entregaId` field."""
  entregaId: Int

  """Checks for equality with the object’s `userId` field."""
  userId: Int

  """Checks for equality with the object’s `path` field."""
  path: String

  """Checks for equality with the object’s `tipo` field."""
  tipo: Int

  """Checks for equality with the object’s `titulo` field."""
  titulo: String

  """Checks for equality with the object’s `nombre` field."""
  nombre: String

  """Checks for equality with the object’s `extension` field."""
  extension: String

  """Checks for equality with the object’s `soloDocentes` field."""
  soloDocentes: Boolean

  """Checks for equality with the object’s `descripcion` field."""
  descripcion: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A connection to a list of `ActividadesEntregasComentario` values."""
type ActividadesEntregasComentariosConnection {
  """A list of `ActividadesEntregasComentario` objects."""
  nodes: [ActividadesEntregasComentario]!

  """
  A list of edges which contains the `ActividadesEntregasComentario` and cursor to aid in pagination.
  """
  edges: [ActividadesEntregasComentariosEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `ActividadesEntregasComentario` you could get from the connection.
  """
  totalCount: Int!
}

type ActividadesEntregasComentario implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  entregaId: BigInt
  userId: BigInt
  comentario: String
  createdAt: Datetime
  updatedAt: Datetime

  """
  Reads a single `ActividadesEntregas` that is related to this `ActividadesEntregasComentario`.
  """
  entrega: ActividadesEntregas

  """
  Reads a single `User` that is related to this `ActividadesEntregasComentario`.
  """
  user: User
}

"""A `ActividadesEntregasComentario` edge in the connection."""
type ActividadesEntregasComentariosEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `ActividadesEntregasComentario` at the end of the edge."""
  node: ActividadesEntregasComentario
}

"""Methods to use when ordering `ActividadesEntregasComentario`."""
enum ActividadesEntregasComentariosOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  ENTREGA_ID_ASC
  ENTREGA_ID_DESC
  USER_ID_ASC
  USER_ID_DESC
  COMENTARIO_ASC
  COMENTARIO_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `ActividadesEntregasComentario` object types. All
fields are tested for equality and combined with a logical ‘and.’
"""
input ActividadesEntregasComentarioCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `entregaId` field."""
  entregaId: BigInt

  """Checks for equality with the object’s `userId` field."""
  userId: BigInt

  """Checks for equality with the object’s `comentario` field."""
  comentario: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A connection to a list of `Alerta` values."""
type AlertasConnection {
  """A list of `Alerta` objects."""
  nodes: [Alerta]!

  """
  A list of edges which contains the `Alerta` and cursor to aid in pagination.
  """
  edges: [AlertasEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Alerta` you could get from the connection."""
  totalCount: Int!
}

type Alerta implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  rolId: Int

  """
  si el rol_id vinculado es el de un tutor, en este campo se aclara para que alumno corresponde la alerta
  """
  alumnoId: Int
  leida: Boolean
  entidad: String

  """una alerta puede llevar vinculada una actividad"""
  actividadId: Int

  """una alerta puede llevar vinculada una entrega"""
  entregaId: Int
  createdAt: Datetime
  updatedAt: Datetime

  """Reads a single `User` that is related to this `Alerta`."""
  alumno: User

  """Reads a single `Activity` that is related to this `Alerta`."""
  actividad: Activity

  """Reads a single `ActividadesEntregas` that is related to this `Alerta`."""
  entrega: ActividadesEntregas
}

"""A `Alerta` edge in the connection."""
type AlertasEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Alerta` at the end of the edge."""
  node: Alerta
}

"""Methods to use when ordering `Alerta`."""
enum AlertasOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  ROL_ID_ASC
  ROL_ID_DESC
  ALUMNO_ID_ASC
  ALUMNO_ID_DESC
  LEIDA_ASC
  LEIDA_DESC
  ENTIDAD_ASC
  ENTIDAD_DESC
  ACTIVIDAD_ID_ASC
  ACTIVIDAD_ID_DESC
  ENTREGA_ID_ASC
  ENTREGA_ID_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Alerta` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input AlertaCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `rolId` field."""
  rolId: Int

  """Checks for equality with the object’s `alumnoId` field."""
  alumnoId: Int

  """Checks for equality with the object’s `leida` field."""
  leida: Boolean

  """Checks for equality with the object’s `entidad` field."""
  entidad: String

  """Checks for equality with the object’s `actividadId` field."""
  actividadId: Int

  """Checks for equality with the object’s `entregaId` field."""
  entregaId: Int

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A `ActividadesEntregas` edge in the connection."""
type ActividadesEntregasesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `ActividadesEntregas` at the end of the edge."""
  node: ActividadesEntregas
}

"""Methods to use when ordering `ActividadesEntregas`."""
enum ActividadesEntregasesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  ACTIVIDAD_ID_ASC
  ACTIVIDAD_ID_DESC
  ALUMNO_ID_ASC
  ALUMNO_ID_DESC
  CONTENIDO_ASC
  CONTENIDO_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `ActividadesEntregas` object types. All fields
are tested for equality and combined with a logical ‘and.’
"""
input ActividadesEntregasCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `actividadId` field."""
  actividadId: Int

  """Checks for equality with the object’s `alumnoId` field."""
  alumnoId: Int

  """Checks for equality with the object’s `contenido` field."""
  contenido: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""Methods to use when ordering `Asignatura`."""
enum AsignaturasOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  GRUPO_ID_ASC
  GRUPO_ID_DESC
  DOCENTE_ID_ASC
  DOCENTE_ID_DESC
  ESPACIO_CURRICULAR_ID_ASC
  ESPACIO_CURRICULAR_ID_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Asignatura` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AsignaturaCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `grupoId` field."""
  grupoId: Int

  """Checks for equality with the object’s `docenteId` field."""
  docenteId: Int

  """Checks for equality with the object’s `espacioCurricularId` field."""
  espacioCurricularId: Int

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A connection to a list of `AdmEgreso` values."""
type AdmEgresosConnection {
  """A list of `AdmEgreso` objects."""
  nodes: [AdmEgreso]!

  """
  A list of edges which contains the `AdmEgreso` and cursor to aid in pagination.
  """
  edges: [AdmEgresosEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `AdmEgreso` you could get from the connection."""
  totalCount: Int!
}

type AdmEgreso implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  proveedorId: BigInt!
  tipoComprobante: BigInt!
  numeroComprobante: String
  fechaComprobante: Datetime
  fechaPago: Datetime
  monto: BigFloat!
  path: String
  observaciones: String
  clienteId: BigInt!
  divisionId: BigInt!
  userCreator: BigInt!
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime

  """Reads a single `AdmProveedore` that is related to this `AdmEgreso`."""
  proveedor: AdmProveedore

  """Reads a single `Cliente` that is related to this `AdmEgreso`."""
  cliente: Cliente

  """Reads a single `Divisione` that is related to this `AdmEgreso`."""
  division: Divisione

  """Reads a single `User` that is related to this `AdmEgreso`."""
  userByUserCreator: User

  """Reads and enables pagination through a set of `AdmEgresoItem`."""
  admEgresoItemsByEgresoId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmEgresoItem`."""
    orderBy: [AdmEgresoItemsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmEgresoItemCondition
  ): AdmEgresoItemsConnection!
}

type AdmProveedore implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  clienteId: BigInt!
  razonSocial: String!
  cuit: String
  email: String
  telefono: String
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime

  """Reads a single `Cliente` that is related to this `AdmProveedore`."""
  cliente: Cliente

  """Reads and enables pagination through a set of `AdmEgreso`."""
  admEgresosByProveedorId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmEgreso`."""
    orderBy: [AdmEgresosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmEgresoCondition
  ): AdmEgresosConnection!
}

"""Methods to use when ordering `AdmEgreso`."""
enum AdmEgresosOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  PROVEEDOR_ID_ASC
  PROVEEDOR_ID_DESC
  TIPO_COMPROBANTE_ASC
  TIPO_COMPROBANTE_DESC
  NUMERO_COMPROBANTE_ASC
  NUMERO_COMPROBANTE_DESC
  FECHA_COMPROBANTE_ASC
  FECHA_COMPROBANTE_DESC
  FECHA_PAGO_ASC
  FECHA_PAGO_DESC
  MONTO_ASC
  MONTO_DESC
  PATH_ASC
  PATH_DESC
  OBSERVACIONES_ASC
  OBSERVACIONES_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  DIVISION_ID_ASC
  DIVISION_ID_DESC
  USER_CREATOR_ASC
  USER_CREATOR_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  DELETED_AT_ASC
  DELETED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `AdmEgreso` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AdmEgresoCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `proveedorId` field."""
  proveedorId: BigInt

  """Checks for equality with the object’s `tipoComprobante` field."""
  tipoComprobante: BigInt

  """Checks for equality with the object’s `numeroComprobante` field."""
  numeroComprobante: String

  """Checks for equality with the object’s `fechaComprobante` field."""
  fechaComprobante: Datetime

  """Checks for equality with the object’s `fechaPago` field."""
  fechaPago: Datetime

  """Checks for equality with the object’s `monto` field."""
  monto: BigFloat

  """Checks for equality with the object’s `path` field."""
  path: String

  """Checks for equality with the object’s `observaciones` field."""
  observaciones: String

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: BigInt

  """Checks for equality with the object’s `divisionId` field."""
  divisionId: BigInt

  """Checks for equality with the object’s `userCreator` field."""
  userCreator: BigInt

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `deletedAt` field."""
  deletedAt: Datetime
}

type Divisione implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  nombre: String
  clienteId: BigInt!
  color: String
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime

  """Reads and enables pagination through a set of `Activity`."""
  activitiesByDivisionId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Activity`."""
    orderBy: [ActivitiesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ActivityCondition
  ): ActivitiesConnection!

  """Reads and enables pagination through a set of `AdmCingresosValore`."""
  admCingresosValoresByDivisionId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmCingresosValore`."""
    orderBy: [AdmCingresosValoresOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmCingresosValoreCondition
  ): AdmCingresosValoresConnection!

  """Reads and enables pagination through a set of `AdmEgreso`."""
  admEgresosByDivisionId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmEgreso`."""
    orderBy: [AdmEgresosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmEgresoCondition
  ): AdmEgresosConnection!

  """Reads and enables pagination through a set of `Calificacione`."""
  calificacionesByDivisionId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Calificacione`."""
    orderBy: [CalificacionesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: CalificacioneCondition
  ): CalificacionesConnection!

  """Reads and enables pagination through a set of `Grupo`."""
  gruposByDivisionId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Grupo`."""
    orderBy: [GruposOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GrupoCondition
  ): GruposConnection!

  """Reads and enables pagination through a set of `Galeria`."""
  galeriasByDivisionId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Galeria`."""
    orderBy: [GaleriasOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: GaleriaCondition
  ): GaleriasConnection!

  """Reads and enables pagination through a set of `OpcionesDivision`."""
  opcionesDivisionsByDivisionId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `OpcionesDivision`."""
    orderBy: [OpcionesDivisionsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: OpcionesDivisionCondition
  ): OpcionesDivisionsConnection!

  """Reads and enables pagination through a set of `Noticia`."""
  noticiasByDivisionId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Noticia`."""
    orderBy: [NoticiasOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: NoticiaCondition
  ): NoticiasConnection!

  """Reads and enables pagination through a set of `Evento`."""
  eventosByDivisionId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Evento`."""
    orderBy: [EventosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: EventoCondition
  ): EventosConnection!

  """Reads and enables pagination through a set of `UsersConfiguracion`."""
  usersConfiguracionsByDivisionId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `UsersConfiguracion`."""
    orderBy: [UsersConfiguracionsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UsersConfiguracionCondition
  ): UsersConfiguracionsConnection!

  """Reads and enables pagination through a set of `Tip`."""
  tipsByDivisionId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Tip`."""
    orderBy: [TipsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TipCondition
  ): TipsConnection!

  """Reads and enables pagination through a set of `UsersRole`."""
  usersRolesByUsersRolesDivisionId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `UsersRole`."""
    orderBy: [UsersRolesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: UsersRoleCondition
  ): UsersRolesConnection!
}

"""A connection to a list of `AdmCingresosValore` values."""
type AdmCingresosValoresConnection {
  """A list of `AdmCingresosValore` objects."""
  nodes: [AdmCingresosValore]!

  """
  A list of edges which contains the `AdmCingresosValore` and cursor to aid in pagination.
  """
  edges: [AdmCingresosValoresEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `AdmCingresosValore` you could get from the connection.
  """
  totalCount: Int!
}

type AdmCingresosValore implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  cingresoId: BigInt!
  clienteId: BigInt!
  grupoId: BigInt
  diferido: Int!
  cuota: Int!
  cuotafloat: Float
  valor: Float
  diaV1: BigInt
  valorV1: Float
  diaV2: BigInt
  valorV2: Float
  divisionId: BigInt!
  estado: Int!
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime

  """
  Reads a single `AdmCingreso` that is related to this `AdmCingresosValore`.
  """
  cingreso: AdmCingreso

  """Reads a single `Cliente` that is related to this `AdmCingresosValore`."""
  cliente: Cliente

  """
  Reads a single `Divisione` that is related to this `AdmCingresosValore`.
  """
  division: Divisione
}

type AdmCingreso implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  nombre: String!
  cicloLectivo: BigInt!
  valorDefecto: BigFloat!
  clienteId: BigInt!
  cuentaId: BigInt!
  tipoCobro: Int!
  emitirComprobante: Boolean
  estado: Boolean!
  permitirPagoAdelantado: Boolean!
  interesMensualDefecto: Float
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime

  """Reads a single `Cliente` that is related to this `AdmCingreso`."""
  cliente: Cliente

  """Reads a single `AdmCuenta` that is related to this `AdmCingreso`."""
  cuenta: AdmCuenta

  """Reads and enables pagination through a set of `AdmCingresosValore`."""
  admCingresosValoresByCingresoId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmCingresosValore`."""
    orderBy: [AdmCingresosValoresOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmCingresosValoreCondition
  ): AdmCingresosValoresConnection!

  """Reads and enables pagination through a set of `AdmFacturaItem`."""
  admFacturaItemsByConceptoIngresoId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmFacturaItem`."""
    orderBy: [AdmFacturaItemsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmFacturaItemCondition
  ): AdmFacturaItemsConnection!
}

type AdmCuenta implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  numero: String
  nombre: String
  descripcion: String
  balance: BigFloat
  tipo: String
  clienteId: Int
  parentId: BigInt
  habilitadaEgresos: Int
  createdAt: Datetime
  editable: Int
  updatedAt: Datetime
  deletedAt: Datetime

  """Reads and enables pagination through a set of `AdmCingreso`."""
  admCingresosByCuentaId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmCingreso`."""
    orderBy: [AdmCingresosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmCingresoCondition
  ): AdmCingresosConnection!

  """Reads and enables pagination through a set of `AdmCegreso`."""
  admCegresosByCuentaId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmCegreso`."""
    orderBy: [AdmCegresosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmCegresoCondition
  ): AdmCegresosConnection!
}

"""A connection to a list of `AdmCingreso` values."""
type AdmCingresosConnection {
  """A list of `AdmCingreso` objects."""
  nodes: [AdmCingreso]!

  """
  A list of edges which contains the `AdmCingreso` and cursor to aid in pagination.
  """
  edges: [AdmCingresosEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `AdmCingreso` you could get from the connection."""
  totalCount: Int!
}

"""A `AdmCingreso` edge in the connection."""
type AdmCingresosEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `AdmCingreso` at the end of the edge."""
  node: AdmCingreso
}

"""Methods to use when ordering `AdmCingreso`."""
enum AdmCingresosOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  NOMBRE_ASC
  NOMBRE_DESC
  CICLO_LECTIVO_ASC
  CICLO_LECTIVO_DESC
  VALOR_DEFECTO_ASC
  VALOR_DEFECTO_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  CUENTA_ID_ASC
  CUENTA_ID_DESC
  TIPO_COBRO_ASC
  TIPO_COBRO_DESC
  EMITIR_COMPROBANTE_ASC
  EMITIR_COMPROBANTE_DESC
  ESTADO_ASC
  ESTADO_DESC
  PERMITIR_PAGO_ADELANTADO_ASC
  PERMITIR_PAGO_ADELANTADO_DESC
  INTERES_MENSUAL_DEFECTO_ASC
  INTERES_MENSUAL_DEFECTO_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  DELETED_AT_ASC
  DELETED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `AdmCingreso` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AdmCingresoCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `nombre` field."""
  nombre: String

  """Checks for equality with the object’s `cicloLectivo` field."""
  cicloLectivo: BigInt

  """Checks for equality with the object’s `valorDefecto` field."""
  valorDefecto: BigFloat

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: BigInt

  """Checks for equality with the object’s `cuentaId` field."""
  cuentaId: BigInt

  """Checks for equality with the object’s `tipoCobro` field."""
  tipoCobro: Int

  """Checks for equality with the object’s `emitirComprobante` field."""
  emitirComprobante: Boolean

  """Checks for equality with the object’s `estado` field."""
  estado: Boolean

  """Checks for equality with the object’s `permitirPagoAdelantado` field."""
  permitirPagoAdelantado: Boolean

  """Checks for equality with the object’s `interesMensualDefecto` field."""
  interesMensualDefecto: Float

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `deletedAt` field."""
  deletedAt: Datetime
}

"""A connection to a list of `AdmCegreso` values."""
type AdmCegresosConnection {
  """A list of `AdmCegreso` objects."""
  nodes: [AdmCegreso]!

  """
  A list of edges which contains the `AdmCegreso` and cursor to aid in pagination.
  """
  edges: [AdmCegresosEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `AdmCegreso` you could get from the connection."""
  totalCount: Int!
}

type AdmCegreso implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  nombre: String!
  valorDefecto: BigFloat
  clienteId: BigInt!
  cuentaId: BigInt!
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime

  """Reads a single `Cliente` that is related to this `AdmCegreso`."""
  cliente: Cliente

  """Reads a single `AdmCuenta` that is related to this `AdmCegreso`."""
  cuenta: AdmCuenta

  """Reads and enables pagination through a set of `AdmEgresoItem`."""
  admEgresoItemsByConceptoEgresoId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmEgresoItem`."""
    orderBy: [AdmEgresoItemsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmEgresoItemCondition
  ): AdmEgresoItemsConnection!
}

"""A connection to a list of `AdmEgresoItem` values."""
type AdmEgresoItemsConnection {
  """A list of `AdmEgresoItem` objects."""
  nodes: [AdmEgresoItem]!

  """
  A list of edges which contains the `AdmEgresoItem` and cursor to aid in pagination.
  """
  edges: [AdmEgresoItemsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `AdmEgresoItem` you could get from the connection."""
  totalCount: Int!
}

type AdmEgresoItem implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  egresoId: BigInt!
  conceptoEgresoId: BigInt!
  precio: BigFloat
  cantidad: BigInt
  importe: BigFloat!
  observaciones: String
  clienteId: Int!
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime

  """Reads a single `AdmEgreso` that is related to this `AdmEgresoItem`."""
  egreso: AdmEgreso

  """Reads a single `AdmCegreso` that is related to this `AdmEgresoItem`."""
  conceptoEgreso: AdmCegreso

  """Reads a single `Cliente` that is related to this `AdmEgresoItem`."""
  cliente: Cliente
}

"""A `AdmEgresoItem` edge in the connection."""
type AdmEgresoItemsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `AdmEgresoItem` at the end of the edge."""
  node: AdmEgresoItem
}

"""Methods to use when ordering `AdmEgresoItem`."""
enum AdmEgresoItemsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  EGRESO_ID_ASC
  EGRESO_ID_DESC
  CONCEPTO_EGRESO_ID_ASC
  CONCEPTO_EGRESO_ID_DESC
  PRECIO_ASC
  PRECIO_DESC
  CANTIDAD_ASC
  CANTIDAD_DESC
  IMPORTE_ASC
  IMPORTE_DESC
  OBSERVACIONES_ASC
  OBSERVACIONES_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  DELETED_AT_ASC
  DELETED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `AdmEgresoItem` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AdmEgresoItemCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `egresoId` field."""
  egresoId: BigInt

  """Checks for equality with the object’s `conceptoEgresoId` field."""
  conceptoEgresoId: BigInt

  """Checks for equality with the object’s `precio` field."""
  precio: BigFloat

  """Checks for equality with the object’s `cantidad` field."""
  cantidad: BigInt

  """Checks for equality with the object’s `importe` field."""
  importe: BigFloat

  """Checks for equality with the object’s `observaciones` field."""
  observaciones: String

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: Int

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `deletedAt` field."""
  deletedAt: Datetime
}

"""A `AdmCegreso` edge in the connection."""
type AdmCegresosEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `AdmCegreso` at the end of the edge."""
  node: AdmCegreso
}

"""Methods to use when ordering `AdmCegreso`."""
enum AdmCegresosOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  NOMBRE_ASC
  NOMBRE_DESC
  VALOR_DEFECTO_ASC
  VALOR_DEFECTO_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  CUENTA_ID_ASC
  CUENTA_ID_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  DELETED_AT_ASC
  DELETED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `AdmCegreso` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AdmCegresoCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `nombre` field."""
  nombre: String

  """Checks for equality with the object’s `valorDefecto` field."""
  valorDefecto: BigFloat

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: BigInt

  """Checks for equality with the object’s `cuentaId` field."""
  cuentaId: BigInt

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `deletedAt` field."""
  deletedAt: Datetime
}

"""Methods to use when ordering `AdmCingresosValore`."""
enum AdmCingresosValoresOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CINGRESO_ID_ASC
  CINGRESO_ID_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  GRUPO_ID_ASC
  GRUPO_ID_DESC
  DIFERIDO_ASC
  DIFERIDO_DESC
  CUOTA_ASC
  CUOTA_DESC
  CUOTAFLOAT_ASC
  CUOTAFLOAT_DESC
  VALOR_ASC
  VALOR_DESC
  DIA_V1_ASC
  DIA_V1_DESC
  VALOR_V1_ASC
  VALOR_V1_DESC
  DIA_V2_ASC
  DIA_V2_DESC
  VALOR_V2_ASC
  VALOR_V2_DESC
  DIVISION_ID_ASC
  DIVISION_ID_DESC
  ESTADO_ASC
  ESTADO_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  DELETED_AT_ASC
  DELETED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `AdmCingresosValore` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AdmCingresosValoreCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `cingresoId` field."""
  cingresoId: BigInt

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: BigInt

  """Checks for equality with the object’s `grupoId` field."""
  grupoId: BigInt

  """Checks for equality with the object’s `diferido` field."""
  diferido: Int

  """Checks for equality with the object’s `cuota` field."""
  cuota: Int

  """Checks for equality with the object’s `cuotafloat` field."""
  cuotafloat: Float

  """Checks for equality with the object’s `valor` field."""
  valor: Float

  """Checks for equality with the object’s `diaV1` field."""
  diaV1: BigInt

  """Checks for equality with the object’s `valorV1` field."""
  valorV1: Float

  """Checks for equality with the object’s `diaV2` field."""
  diaV2: BigInt

  """Checks for equality with the object’s `valorV2` field."""
  valorV2: Float

  """Checks for equality with the object’s `divisionId` field."""
  divisionId: BigInt

  """Checks for equality with the object’s `estado` field."""
  estado: Int

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `deletedAt` field."""
  deletedAt: Datetime
}

"""A connection to a list of `AdmFacturaItem` values."""
type AdmFacturaItemsConnection {
  """A list of `AdmFacturaItem` objects."""
  nodes: [AdmFacturaItem]!

  """
  A list of edges which contains the `AdmFacturaItem` and cursor to aid in pagination.
  """
  edges: [AdmFacturaItemsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `AdmFacturaItem` you could get from the connection."""
  totalCount: Int!
}

type AdmFacturaItem implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  facturaId: BigInt!
  conceptoIngresoId: BigInt!
  clienteId: Int!
  userId: Int!
  divisionId: Int
  precio: BigFloat!
  interes: BigFloat!
  descuento: BigFloat!
  cantidad: BigInt
  total: BigFloat!
  pagado: BigFloat!
  interesPagado: BigFloat!
  cuota: Boolean!
  pagoCompleto: Int!
  observaciones: String
  fechaPago: Datetime
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime

  """Reads a single `AdmFactura` that is related to this `AdmFacturaItem`."""
  factura: AdmFactura

  """Reads a single `AdmCingreso` that is related to this `AdmFacturaItem`."""
  conceptoIngreso: AdmCingreso

  """Reads a single `Cliente` that is related to this `AdmFacturaItem`."""
  cliente: Cliente

  """Reads a single `User` that is related to this `AdmFacturaItem`."""
  user: User
}

"""A `AdmFacturaItem` edge in the connection."""
type AdmFacturaItemsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `AdmFacturaItem` at the end of the edge."""
  node: AdmFacturaItem
}

"""Methods to use when ordering `AdmFacturaItem`."""
enum AdmFacturaItemsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  FACTURA_ID_ASC
  FACTURA_ID_DESC
  CONCEPTO_INGRESO_ID_ASC
  CONCEPTO_INGRESO_ID_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  USER_ID_ASC
  USER_ID_DESC
  DIVISION_ID_ASC
  DIVISION_ID_DESC
  PRECIO_ASC
  PRECIO_DESC
  INTERES_ASC
  INTERES_DESC
  DESCUENTO_ASC
  DESCUENTO_DESC
  CANTIDAD_ASC
  CANTIDAD_DESC
  TOTAL_ASC
  TOTAL_DESC
  PAGADO_ASC
  PAGADO_DESC
  INTERES_PAGADO_ASC
  INTERES_PAGADO_DESC
  CUOTA_ASC
  CUOTA_DESC
  PAGO_COMPLETO_ASC
  PAGO_COMPLETO_DESC
  OBSERVACIONES_ASC
  OBSERVACIONES_DESC
  FECHA_PAGO_ASC
  FECHA_PAGO_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  DELETED_AT_ASC
  DELETED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `AdmFacturaItem` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AdmFacturaItemCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `facturaId` field."""
  facturaId: BigInt

  """Checks for equality with the object’s `conceptoIngresoId` field."""
  conceptoIngresoId: BigInt

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: Int

  """Checks for equality with the object’s `userId` field."""
  userId: Int

  """Checks for equality with the object’s `divisionId` field."""
  divisionId: Int

  """Checks for equality with the object’s `precio` field."""
  precio: BigFloat

  """Checks for equality with the object’s `interes` field."""
  interes: BigFloat

  """Checks for equality with the object’s `descuento` field."""
  descuento: BigFloat

  """Checks for equality with the object’s `cantidad` field."""
  cantidad: BigInt

  """Checks for equality with the object’s `total` field."""
  total: BigFloat

  """Checks for equality with the object’s `pagado` field."""
  pagado: BigFloat

  """Checks for equality with the object’s `interesPagado` field."""
  interesPagado: BigFloat

  """Checks for equality with the object’s `cuota` field."""
  cuota: Boolean

  """Checks for equality with the object’s `pagoCompleto` field."""
  pagoCompleto: Int

  """Checks for equality with the object’s `observaciones` field."""
  observaciones: String

  """Checks for equality with the object’s `fechaPago` field."""
  fechaPago: Datetime

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `deletedAt` field."""
  deletedAt: Datetime
}

"""A `AdmCingresosValore` edge in the connection."""
type AdmCingresosValoresEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `AdmCingresosValore` at the end of the edge."""
  node: AdmCingresosValore
}

"""A connection to a list of `Calificacione` values."""
type CalificacionesConnection {
  """A list of `Calificacione` objects."""
  nodes: [Calificacione]!

  """
  A list of edges which contains the `Calificacione` and cursor to aid in pagination.
  """
  edges: [CalificacionesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Calificacione` you could get from the connection."""
  totalCount: Int!
}

type Calificacione implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  conceptoId: Int
  alumnoId: Int
  divisionId: Int
  calificacionEscalaValorId: Int
  observaciones: String
  archivada: Boolean!
  createdAt: Datetime
  updatedAt: Datetime

  """
  Reads a single `CalificacionesConcepto` that is related to this `Calificacione`.
  """
  concepto: CalificacionesConcepto

  """Reads a single `User` that is related to this `Calificacione`."""
  alumno: User

  """Reads a single `Divisione` that is related to this `Calificacione`."""
  division: Divisione

  """
  Reads a single `CalificacionesEscalasValore` that is related to this `Calificacione`.
  """
  calificacionEscalaValor: CalificacionesEscalasValore
}

type CalificacionesConcepto implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  nombre: String
  docenteId: Int
  calificacionEscalaId: Int
  espacioCurricularId: Int
  grupoId: Int
  divisionId: Int
  impactaNotaFinal: Boolean
  calificacionCerrada: Boolean!
  actividadId: Int
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime

  """Reads and enables pagination through a set of `Activity`."""
  activitiesByCalificacionConceptoId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Activity`."""
    orderBy: [ActivitiesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: ActivityCondition
  ): ActivitiesConnection!

  """Reads and enables pagination through a set of `Calificacione`."""
  calificacionesByConceptoId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Calificacione`."""
    orderBy: [CalificacionesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: CalificacioneCondition
  ): CalificacionesConnection!
}

"""Methods to use when ordering `Calificacione`."""
enum CalificacionesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CONCEPTO_ID_ASC
  CONCEPTO_ID_DESC
  ALUMNO_ID_ASC
  ALUMNO_ID_DESC
  DIVISION_ID_ASC
  DIVISION_ID_DESC
  CALIFICACION_ESCALA_VALOR_ID_ASC
  CALIFICACION_ESCALA_VALOR_ID_DESC
  OBSERVACIONES_ASC
  OBSERVACIONES_DESC
  ARCHIVADA_ASC
  ARCHIVADA_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Calificacione` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input CalificacioneCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `conceptoId` field."""
  conceptoId: Int

  """Checks for equality with the object’s `alumnoId` field."""
  alumnoId: Int

  """Checks for equality with the object’s `divisionId` field."""
  divisionId: Int

  """
  Checks for equality with the object’s `calificacionEscalaValorId` field.
  """
  calificacionEscalaValorId: Int

  """Checks for equality with the object’s `observaciones` field."""
  observaciones: String

  """Checks for equality with the object’s `archivada` field."""
  archivada: Boolean

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

type CalificacionesEscalasValore implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  nombre: String
  exitoso: Boolean
  peso: Int
  calificacionEscalaId: Int
  createdAt: Datetime
  updatedAt: Datetime

  """Reads and enables pagination through a set of `Calificacione`."""
  calificacionesByCalificacionEscalaValorId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Calificacione`."""
    orderBy: [CalificacionesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: CalificacioneCondition
  ): CalificacionesConnection!
}

"""A `Calificacione` edge in the connection."""
type CalificacionesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Calificacione` at the end of the edge."""
  node: Calificacione
}

"""A connection to a list of `Grupo` values."""
type GruposConnection {
  """A list of `Grupo` objects."""
  nodes: [Grupo]!

  """
  A list of edges which contains the `Grupo` and cursor to aid in pagination.
  """
  edges: [GruposEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Grupo` you could get from the connection."""
  totalCount: Int!
}

"""A `Grupo` edge in the connection."""
type GruposEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Grupo` at the end of the edge."""
  node: Grupo
}

"""Methods to use when ordering `Grupo`."""
enum GruposOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  NOMBRE_ASC
  NOMBRE_DESC
  DESCRIPCION_ASC
  DESCRIPCION_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  DIVISION_ID_ASC
  DIVISION_ID_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  DELETED_AT_ASC
  DELETED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Grupo` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input GrupoCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `nombre` field."""
  nombre: String

  """Checks for equality with the object’s `descripcion` field."""
  descripcion: String

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: BigInt

  """Checks for equality with the object’s `divisionId` field."""
  divisionId: BigInt

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `deletedAt` field."""
  deletedAt: Datetime
}

"""A connection to a list of `Galeria` values."""
type GaleriasConnection {
  """A list of `Galeria` objects."""
  nodes: [Galeria]!

  """
  A list of edges which contains the `Galeria` and cursor to aid in pagination.
  """
  edges: [GaleriasEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Galeria` you could get from the connection."""
  totalCount: Int!
}

type Galeria implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  clienteId: BigInt!
  divisionId: BigInt
  nombre: String
  fecha: Date
  lugar: String
  imagen: String
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime

  """Reads a single `Cliente` that is related to this `Galeria`."""
  cliente: Cliente

  """Reads a single `Divisione` that is related to this `Galeria`."""
  division: Divisione

  """Reads and enables pagination through a set of `Foto`."""
  fotos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `Foto`."""
    orderBy: [FotosOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: FotoCondition
  ): FotosConnection!
}

"""A connection to a list of `Foto` values."""
type FotosConnection {
  """A list of `Foto` objects."""
  nodes: [Foto]!

  """
  A list of edges which contains the `Foto` and cursor to aid in pagination.
  """
  edges: [FotosEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Foto` you could get from the connection."""
  totalCount: Int!
}

type Foto implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  galeriaId: BigInt!
  imagen: String
  orden: BigInt
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime

  """Reads a single `Galeria` that is related to this `Foto`."""
  galeria: Galeria
}

"""A `Foto` edge in the connection."""
type FotosEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Foto` at the end of the edge."""
  node: Foto
}

"""Methods to use when ordering `Foto`."""
enum FotosOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  GALERIA_ID_ASC
  GALERIA_ID_DESC
  IMAGEN_ASC
  IMAGEN_DESC
  ORDEN_ASC
  ORDEN_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  DELETED_AT_ASC
  DELETED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Foto` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input FotoCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `galeriaId` field."""
  galeriaId: BigInt

  """Checks for equality with the object’s `imagen` field."""
  imagen: String

  """Checks for equality with the object’s `orden` field."""
  orden: BigInt

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `deletedAt` field."""
  deletedAt: Datetime
}

"""A `Galeria` edge in the connection."""
type GaleriasEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Galeria` at the end of the edge."""
  node: Galeria
}

"""Methods to use when ordering `Galeria`."""
enum GaleriasOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  DIVISION_ID_ASC
  DIVISION_ID_DESC
  NOMBRE_ASC
  NOMBRE_DESC
  FECHA_ASC
  FECHA_DESC
  LUGAR_ASC
  LUGAR_DESC
  IMAGEN_ASC
  IMAGEN_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  DELETED_AT_ASC
  DELETED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Galeria` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input GaleriaCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: BigInt

  """Checks for equality with the object’s `divisionId` field."""
  divisionId: BigInt

  """Checks for equality with the object’s `nombre` field."""
  nombre: String

  """Checks for equality with the object’s `fecha` field."""
  fecha: Date

  """Checks for equality with the object’s `lugar` field."""
  lugar: String

  """Checks for equality with the object’s `imagen` field."""
  imagen: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `deletedAt` field."""
  deletedAt: Datetime
}

"""A connection to a list of `OpcionesDivision` values."""
type OpcionesDivisionsConnection {
  """A list of `OpcionesDivision` objects."""
  nodes: [OpcionesDivision]!

  """
  A list of edges which contains the `OpcionesDivision` and cursor to aid in pagination.
  """
  edges: [OpcionesDivisionsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `OpcionesDivision` you could get from the connection.
  """
  totalCount: Int!
}

type OpcionesDivision implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  rotulo: String
  nombre: String
  valor: String
  divisionId: Int
  tipo: String
  modulo: String
  createdAt: Datetime
  updatedAt: Datetime

  """Reads a single `Divisione` that is related to this `OpcionesDivision`."""
  division: Divisione
}

"""A `OpcionesDivision` edge in the connection."""
type OpcionesDivisionsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `OpcionesDivision` at the end of the edge."""
  node: OpcionesDivision
}

"""Methods to use when ordering `OpcionesDivision`."""
enum OpcionesDivisionsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  ROTULO_ASC
  ROTULO_DESC
  NOMBRE_ASC
  NOMBRE_DESC
  VALOR_ASC
  VALOR_DESC
  DIVISION_ID_ASC
  DIVISION_ID_DESC
  TIPO_ASC
  TIPO_DESC
  MODULO_ASC
  MODULO_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `OpcionesDivision` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input OpcionesDivisionCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `rotulo` field."""
  rotulo: String

  """Checks for equality with the object’s `nombre` field."""
  nombre: String

  """Checks for equality with the object’s `valor` field."""
  valor: String

  """Checks for equality with the object’s `divisionId` field."""
  divisionId: Int

  """Checks for equality with the object’s `tipo` field."""
  tipo: String

  """Checks for equality with the object’s `modulo` field."""
  modulo: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A connection to a list of `Noticia` values."""
type NoticiasConnection {
  """A list of `Noticia` objects."""
  nodes: [Noticia]!

  """
  A list of edges which contains the `Noticia` and cursor to aid in pagination.
  """
  edges: [NoticiasEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Noticia` you could get from the connection."""
  totalCount: Int!
}

type Noticia implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  clienteId: BigInt!
  divisionId: BigInt
  titulo: String
  contenido: String
  imagen: String
  createdAt: Datetime
  updatedAt: Datetime

  """Reads a single `Cliente` that is related to this `Noticia`."""
  cliente: Cliente

  """Reads a single `Divisione` that is related to this `Noticia`."""
  division: Divisione
}

"""A `Noticia` edge in the connection."""
type NoticiasEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Noticia` at the end of the edge."""
  node: Noticia
}

"""Methods to use when ordering `Noticia`."""
enum NoticiasOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  DIVISION_ID_ASC
  DIVISION_ID_DESC
  TITULO_ASC
  TITULO_DESC
  CONTENIDO_ASC
  CONTENIDO_DESC
  IMAGEN_ASC
  IMAGEN_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Noticia` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input NoticiaCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: BigInt

  """Checks for equality with the object’s `divisionId` field."""
  divisionId: BigInt

  """Checks for equality with the object’s `titulo` field."""
  titulo: String

  """Checks for equality with the object’s `contenido` field."""
  contenido: String

  """Checks for equality with the object’s `imagen` field."""
  imagen: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A connection to a list of `Evento` values."""
type EventosConnection {
  """A list of `Evento` objects."""
  nodes: [Evento]!

  """
  A list of edges which contains the `Evento` and cursor to aid in pagination.
  """
  edges: [EventosEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Evento` you could get from the connection."""
  totalCount: Int!
}

type Evento implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  clienteId: BigInt!
  ownerId: BigInt
  divisionId: BigInt!
  nombre: String
  descripcion: String
  imagen: String
  fechaInicio: Datetime
  horaInicio: Time
  horaFin: Time
  fechaFin: Datetime
  lugar: String
  latitud: String
  longitud: String
  createdAt: Datetime
  updatedAt: Datetime

  """Reads a single `Cliente` that is related to this `Evento`."""
  cliente: Cliente

  """Reads a single `Divisione` that is related to this `Evento`."""
  division: Divisione
}

"""
The exact time of day, does not include the date. May or may not have a timezone offset.
"""
scalar Time

"""A `Evento` edge in the connection."""
type EventosEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Evento` at the end of the edge."""
  node: Evento
}

"""Methods to use when ordering `Evento`."""
enum EventosOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  OWNER_ID_ASC
  OWNER_ID_DESC
  DIVISION_ID_ASC
  DIVISION_ID_DESC
  NOMBRE_ASC
  NOMBRE_DESC
  DESCRIPCION_ASC
  DESCRIPCION_DESC
  IMAGEN_ASC
  IMAGEN_DESC
  FECHA_INICIO_ASC
  FECHA_INICIO_DESC
  HORA_INICIO_ASC
  HORA_INICIO_DESC
  HORA_FIN_ASC
  HORA_FIN_DESC
  FECHA_FIN_ASC
  FECHA_FIN_DESC
  LUGAR_ASC
  LUGAR_DESC
  LATITUD_ASC
  LATITUD_DESC
  LONGITUD_ASC
  LONGITUD_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Evento` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input EventoCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: BigInt

  """Checks for equality with the object’s `ownerId` field."""
  ownerId: BigInt

  """Checks for equality with the object’s `divisionId` field."""
  divisionId: BigInt

  """Checks for equality with the object’s `nombre` field."""
  nombre: String

  """Checks for equality with the object’s `descripcion` field."""
  descripcion: String

  """Checks for equality with the object’s `imagen` field."""
  imagen: String

  """Checks for equality with the object’s `fechaInicio` field."""
  fechaInicio: Datetime

  """Checks for equality with the object’s `horaInicio` field."""
  horaInicio: Time

  """Checks for equality with the object’s `horaFin` field."""
  horaFin: Time

  """Checks for equality with the object’s `fechaFin` field."""
  fechaFin: Datetime

  """Checks for equality with the object’s `lugar` field."""
  lugar: String

  """Checks for equality with the object’s `latitud` field."""
  latitud: String

  """Checks for equality with the object’s `longitud` field."""
  longitud: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A connection to a list of `UsersConfiguracion` values."""
type UsersConfiguracionsConnection {
  """A list of `UsersConfiguracion` objects."""
  nodes: [UsersConfiguracion]!

  """
  A list of edges which contains the `UsersConfiguracion` and cursor to aid in pagination.
  """
  edges: [UsersConfiguracionsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `UsersConfiguracion` you could get from the connection.
  """
  totalCount: Int!
}

type UsersConfiguracion implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  userId: Int
  divisionId: Int
  mensajesGlobales: Boolean
  mensajesAutoaprobables: Boolean
  actividadesAutoaprobables: Boolean
  createdAt: Datetime
  updatedAt: Datetime

  """Reads a single `User` that is related to this `UsersConfiguracion`."""
  user: User

  """
  Reads a single `Divisione` that is related to this `UsersConfiguracion`.
  """
  division: Divisione
}

"""A `UsersConfiguracion` edge in the connection."""
type UsersConfiguracionsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `UsersConfiguracion` at the end of the edge."""
  node: UsersConfiguracion
}

"""Methods to use when ordering `UsersConfiguracion`."""
enum UsersConfiguracionsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  USER_ID_ASC
  USER_ID_DESC
  DIVISION_ID_ASC
  DIVISION_ID_DESC
  MENSAJES_GLOBALES_ASC
  MENSAJES_GLOBALES_DESC
  MENSAJES_AUTOAPROBABLES_ASC
  MENSAJES_AUTOAPROBABLES_DESC
  ACTIVIDADES_AUTOAPROBABLES_ASC
  ACTIVIDADES_AUTOAPROBABLES_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `UsersConfiguracion` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input UsersConfiguracionCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `userId` field."""
  userId: Int

  """Checks for equality with the object’s `divisionId` field."""
  divisionId: Int

  """Checks for equality with the object’s `mensajesGlobales` field."""
  mensajesGlobales: Boolean

  """Checks for equality with the object’s `mensajesAutoaprobables` field."""
  mensajesAutoaprobables: Boolean

  """
  Checks for equality with the object’s `actividadesAutoaprobables` field.
  """
  actividadesAutoaprobables: Boolean

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A connection to a list of `Tip` values."""
type TipsConnection {
  """A list of `Tip` objects."""
  nodes: [Tip]!

  """
  A list of edges which contains the `Tip` and cursor to aid in pagination.
  """
  edges: [TipsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Tip` you could get from the connection."""
  totalCount: Int!
}

type Tip implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  clienteId: BigInt!
  divisionId: BigInt
  titulo: String
  contenido: String
  imagen: String
  tags: String
  orden: BigInt
  createdAt: Datetime
  updatedAt: Datetime

  """Reads a single `Cliente` that is related to this `Tip`."""
  cliente: Cliente

  """Reads a single `Divisione` that is related to this `Tip`."""
  division: Divisione
}

"""A `Tip` edge in the connection."""
type TipsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Tip` at the end of the edge."""
  node: Tip
}

"""Methods to use when ordering `Tip`."""
enum TipsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  DIVISION_ID_ASC
  DIVISION_ID_DESC
  TITULO_ASC
  TITULO_DESC
  CONTENIDO_ASC
  CONTENIDO_DESC
  IMAGEN_ASC
  IMAGEN_DESC
  TAGS_ASC
  TAGS_DESC
  ORDEN_ASC
  ORDEN_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Tip` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input TipCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: BigInt

  """Checks for equality with the object’s `divisionId` field."""
  divisionId: BigInt

  """Checks for equality with the object’s `titulo` field."""
  titulo: String

  """Checks for equality with the object’s `contenido` field."""
  contenido: String

  """Checks for equality with the object’s `imagen` field."""
  imagen: String

  """Checks for equality with the object’s `tags` field."""
  tags: String

  """Checks for equality with the object’s `orden` field."""
  orden: BigInt

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A connection to a list of `UsersRole` values."""
type UsersRolesConnection {
  """A list of `UsersRole` objects."""
  nodes: [UsersRole]!

  """
  A list of edges which contains the `UsersRole` and cursor to aid in pagination.
  """
  edges: [UsersRolesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `UsersRole` you could get from the connection."""
  totalCount: Int!
}

type UsersRole implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  usersRolesId: BigInt!
  userId: BigInt!
  rol: String!
  alumnoIndependiente: Boolean
  usersRolesClienteId: Int!
  usersRolesDivisionId: Int
  fechaInicioActividades: Datetime
  createdAt: Datetime
  updatedAt: Datetime

  """Reads a single `User` that is related to this `UsersRole`."""
  user: User

  """Reads a single `Cliente` that is related to this `UsersRole`."""
  usersRolesCliente: Cliente

  """Reads a single `Divisione` that is related to this `UsersRole`."""
  usersRolesDivision: Divisione
}

"""A `UsersRole` edge in the connection."""
type UsersRolesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `UsersRole` at the end of the edge."""
  node: UsersRole
}

"""Methods to use when ordering `UsersRole`."""
enum UsersRolesOrderBy {
  NATURAL
  USERS_ROLES_ID_ASC
  USERS_ROLES_ID_DESC
  USER_ID_ASC
  USER_ID_DESC
  ROL_ASC
  ROL_DESC
  ALUMNO_INDEPENDIENTE_ASC
  ALUMNO_INDEPENDIENTE_DESC
  USERS_ROLES_CLIENTE_ID_ASC
  USERS_ROLES_CLIENTE_ID_DESC
  USERS_ROLES_DIVISION_ID_ASC
  USERS_ROLES_DIVISION_ID_DESC
  FECHA_INICIO_ACTIVIDADES_ASC
  FECHA_INICIO_ACTIVIDADES_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `UsersRole` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input UsersRoleCondition {
  """Checks for equality with the object’s `usersRolesId` field."""
  usersRolesId: BigInt

  """Checks for equality with the object’s `userId` field."""
  userId: BigInt

  """Checks for equality with the object’s `rol` field."""
  rol: String

  """Checks for equality with the object’s `alumnoIndependiente` field."""
  alumnoIndependiente: Boolean

  """Checks for equality with the object’s `usersRolesClienteId` field."""
  usersRolesClienteId: Int

  """Checks for equality with the object’s `usersRolesDivisionId` field."""
  usersRolesDivisionId: Int

  """Checks for equality with the object’s `fechaInicioActividades` field."""
  fechaInicioActividades: Datetime

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A `AdmEgreso` edge in the connection."""
type AdmEgresosEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `AdmEgreso` at the end of the edge."""
  node: AdmEgreso
}

"""A connection to a list of `AdmFacturaPago` values."""
type AdmFacturaPagosConnection {
  """A list of `AdmFacturaPago` objects."""
  nodes: [AdmFacturaPago]!

  """
  A list of edges which contains the `AdmFacturaPago` and cursor to aid in pagination.
  """
  edges: [AdmFacturaPagosEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `AdmFacturaPago` you could get from the connection."""
  totalCount: Int!
}

type AdmFacturaPago implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  clienteId: Int!
  userCreatorId: Int!
  facturaId: BigInt!
  formaPagoId: BigInt!
  monto: BigFloat!
  nroChque: String!
  bancoEmisorCheque: String!
  cuentaBancariaId: BigInt!
  nroTransferencia: String!
  codigoPagomiscuentas: String!
  codigoMercadopago: String!
  descripcion: String
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime

  """Reads a single `Cliente` that is related to this `AdmFacturaPago`."""
  cliente: Cliente

  """Reads a single `User` that is related to this `AdmFacturaPago`."""
  userCreator: User

  """Reads a single `AdmFactura` that is related to this `AdmFacturaPago`."""
  factura: AdmFactura
}

"""A `AdmFacturaPago` edge in the connection."""
type AdmFacturaPagosEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `AdmFacturaPago` at the end of the edge."""
  node: AdmFacturaPago
}

"""Methods to use when ordering `AdmFacturaPago`."""
enum AdmFacturaPagosOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  USER_CREATOR_ID_ASC
  USER_CREATOR_ID_DESC
  FACTURA_ID_ASC
  FACTURA_ID_DESC
  FORMA_PAGO_ID_ASC
  FORMA_PAGO_ID_DESC
  MONTO_ASC
  MONTO_DESC
  NRO_CHQUE_ASC
  NRO_CHQUE_DESC
  BANCO_EMISOR_CHEQUE_ASC
  BANCO_EMISOR_CHEQUE_DESC
  CUENTA_BANCARIA_ID_ASC
  CUENTA_BANCARIA_ID_DESC
  NRO_TRANSFERENCIA_ASC
  NRO_TRANSFERENCIA_DESC
  CODIGO_PAGOMISCUENTAS_ASC
  CODIGO_PAGOMISCUENTAS_DESC
  CODIGO_MERCADOPAGO_ASC
  CODIGO_MERCADOPAGO_DESC
  DESCRIPCION_ASC
  DESCRIPCION_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  DELETED_AT_ASC
  DELETED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `AdmFacturaPago` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AdmFacturaPagoCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: Int

  """Checks for equality with the object’s `userCreatorId` field."""
  userCreatorId: Int

  """Checks for equality with the object’s `facturaId` field."""
  facturaId: BigInt

  """Checks for equality with the object’s `formaPagoId` field."""
  formaPagoId: BigInt

  """Checks for equality with the object’s `monto` field."""
  monto: BigFloat

  """Checks for equality with the object’s `nroChque` field."""
  nroChque: String

  """Checks for equality with the object’s `bancoEmisorCheque` field."""
  bancoEmisorCheque: String

  """Checks for equality with the object’s `cuentaBancariaId` field."""
  cuentaBancariaId: BigInt

  """Checks for equality with the object’s `nroTransferencia` field."""
  nroTransferencia: String

  """Checks for equality with the object’s `codigoPagomiscuentas` field."""
  codigoPagomiscuentas: String

  """Checks for equality with the object’s `codigoMercadopago` field."""
  codigoMercadopago: String

  """Checks for equality with the object’s `descripcion` field."""
  descripcion: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `deletedAt` field."""
  deletedAt: Datetime
}

"""A connection to a list of `AdmCaja` values."""
type AdmCajasConnection {
  """A list of `AdmCaja` objects."""
  nodes: [AdmCaja]!

  """
  A list of edges which contains the `AdmCaja` and cursor to aid in pagination.
  """
  edges: [AdmCajasEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `AdmCaja` you could get from the connection."""
  totalCount: Int!
}

type AdmCaja implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  userId: BigInt!
  clienteId: BigInt!
  saldoInicial: Float
  cerradaAt: Datetime
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime

  """Reads a single `User` that is related to this `AdmCaja`."""
  user: User

  """Reads a single `Cliente` that is related to this `AdmCaja`."""
  cliente: Cliente
}

"""A `AdmCaja` edge in the connection."""
type AdmCajasEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `AdmCaja` at the end of the edge."""
  node: AdmCaja
}

"""Methods to use when ordering `AdmCaja`."""
enum AdmCajasOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  USER_ID_ASC
  USER_ID_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  SALDO_INICIAL_ASC
  SALDO_INICIAL_DESC
  CERRADA_AT_ASC
  CERRADA_AT_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  DELETED_AT_ASC
  DELETED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `AdmCaja` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input AdmCajaCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `userId` field."""
  userId: BigInt

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: BigInt

  """Checks for equality with the object’s `saldoInicial` field."""
  saldoInicial: Float

  """Checks for equality with the object’s `cerradaAt` field."""
  cerradaAt: Datetime

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `deletedAt` field."""
  deletedAt: Datetime
}

"""A connection to a list of `Calendario` values."""
type CalendariosConnection {
  """A list of `Calendario` objects."""
  nodes: [Calendario]!

  """
  A list of edges which contains the `Calendario` and cursor to aid in pagination.
  """
  edges: [CalendariosEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Calendario` you could get from the connection."""
  totalCount: Int!
}

type Calendario implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  titulo: String
  descripcion: String
  tipoEvento: String
  fecha: Datetime
  grupoId: Int
  actividadId: Int
  userId: Int
  soloDocentes: Boolean
  createdAt: Datetime
  updatedAt: Datetime

  """Reads a single `Grupo` that is related to this `Calendario`."""
  grupo: Grupo

  """Reads a single `Activity` that is related to this `Calendario`."""
  actividad: Activity

  """Reads a single `User` that is related to this `Calendario`."""
  user: User

  """Reads and enables pagination through a set of `CalendarioGrupo`."""
  calendarioGrupos(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `CalendarioGrupo`."""
    orderBy: [CalendarioGruposOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: CalendarioGrupoCondition
  ): CalendarioGruposConnection!
}

"""A connection to a list of `CalendarioGrupo` values."""
type CalendarioGruposConnection {
  """A list of `CalendarioGrupo` objects."""
  nodes: [CalendarioGrupo]!

  """
  A list of edges which contains the `CalendarioGrupo` and cursor to aid in pagination.
  """
  edges: [CalendarioGruposEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `CalendarioGrupo` you could get from the connection.
  """
  totalCount: Int!
}

type CalendarioGrupo implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  calendarioId: Int
  grupoId: Int

  """Reads a single `Calendario` that is related to this `CalendarioGrupo`."""
  calendario: Calendario

  """Reads a single `Grupo` that is related to this `CalendarioGrupo`."""
  grupo: Grupo
}

"""A `CalendarioGrupo` edge in the connection."""
type CalendarioGruposEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `CalendarioGrupo` at the end of the edge."""
  node: CalendarioGrupo
}

"""Methods to use when ordering `CalendarioGrupo`."""
enum CalendarioGruposOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CALENDARIO_ID_ASC
  CALENDARIO_ID_DESC
  GRUPO_ID_ASC
  GRUPO_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `CalendarioGrupo` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input CalendarioGrupoCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `calendarioId` field."""
  calendarioId: Int

  """Checks for equality with the object’s `grupoId` field."""
  grupoId: Int
}

"""A `Calendario` edge in the connection."""
type CalendariosEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Calendario` at the end of the edge."""
  node: Calendario
}

"""Methods to use when ordering `Calendario`."""
enum CalendariosOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  TITULO_ASC
  TITULO_DESC
  DESCRIPCION_ASC
  DESCRIPCION_DESC
  TIPO_EVENTO_ASC
  TIPO_EVENTO_DESC
  FECHA_ASC
  FECHA_DESC
  GRUPO_ID_ASC
  GRUPO_ID_DESC
  ACTIVIDAD_ID_ASC
  ACTIVIDAD_ID_DESC
  USER_ID_ASC
  USER_ID_DESC
  SOLO_DOCENTES_ASC
  SOLO_DOCENTES_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Calendario` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input CalendarioCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `titulo` field."""
  titulo: String

  """Checks for equality with the object’s `descripcion` field."""
  descripcion: String

  """Checks for equality with the object’s `tipoEvento` field."""
  tipoEvento: String

  """Checks for equality with the object’s `fecha` field."""
  fecha: Datetime

  """Checks for equality with the object’s `grupoId` field."""
  grupoId: Int

  """Checks for equality with the object’s `actividadId` field."""
  actividadId: Int

  """Checks for equality with the object’s `userId` field."""
  userId: Int

  """Checks for equality with the object’s `soloDocentes` field."""
  soloDocentes: Boolean

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A connection to a list of `Dispositivo` values."""
type DispositivosConnection {
  """A list of `Dispositivo` objects."""
  nodes: [Dispositivo]!

  """
  A list of edges which contains the `Dispositivo` and cursor to aid in pagination.
  """
  edges: [DispositivosEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Dispositivo` you could get from the connection."""
  totalCount: Int!
}

type Dispositivo implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  userId: Int
  clienteId: Int
  app: String
  pushToken: String
  pushTokenReal: String
  deviceId: String
  deviceName: String
  os: String
  versionApp: String
  versionExpo: String
  versionOs: String
  createdAt: Datetime
  updatedAt: Datetime

  """Reads a single `User` that is related to this `Dispositivo`."""
  user: User

  """Reads a single `Cliente` that is related to this `Dispositivo`."""
  cliente: Cliente
}

"""A `Dispositivo` edge in the connection."""
type DispositivosEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Dispositivo` at the end of the edge."""
  node: Dispositivo
}

"""Methods to use when ordering `Dispositivo`."""
enum DispositivosOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  USER_ID_ASC
  USER_ID_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  APP_ASC
  APP_DESC
  PUSH_TOKEN_ASC
  PUSH_TOKEN_DESC
  PUSH_TOKEN_REAL_ASC
  PUSH_TOKEN_REAL_DESC
  DEVICE_ID_ASC
  DEVICE_ID_DESC
  DEVICE_NAME_ASC
  DEVICE_NAME_DESC
  OS_ASC
  OS_DESC
  VERSION_APP_ASC
  VERSION_APP_DESC
  VERSION_EXPO_ASC
  VERSION_EXPO_DESC
  VERSION_OS_ASC
  VERSION_OS_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Dispositivo` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input DispositivoCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `userId` field."""
  userId: Int

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: Int

  """Checks for equality with the object’s `app` field."""
  app: String

  """Checks for equality with the object’s `pushToken` field."""
  pushToken: String

  """Checks for equality with the object’s `pushTokenReal` field."""
  pushTokenReal: String

  """Checks for equality with the object’s `deviceId` field."""
  deviceId: String

  """Checks for equality with the object’s `deviceName` field."""
  deviceName: String

  """Checks for equality with the object’s `os` field."""
  os: String

  """Checks for equality with the object’s `versionApp` field."""
  versionApp: String

  """Checks for equality with the object’s `versionExpo` field."""
  versionExpo: String

  """Checks for equality with the object’s `versionOs` field."""
  versionOs: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A connection to a list of `Errorsapp` values."""
type ErrorsappsConnection {
  """A list of `Errorsapp` objects."""
  nodes: [Errorsapp]!

  """
  A list of edges which contains the `Errorsapp` and cursor to aid in pagination.
  """
  edges: [ErrorsappsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Errorsapp` you could get from the connection."""
  totalCount: Int!
}

type Errorsapp implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  userId: BigInt!
  case: String
  deviceName: String
  os: String
  deviceId: String
  versionApp: String
  versionExpo: String
  versionOs: String
  createdAt: Datetime
  updatedAt: Datetime

  """Reads a single `User` that is related to this `Errorsapp`."""
  user: User
}

"""A `Errorsapp` edge in the connection."""
type ErrorsappsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Errorsapp` at the end of the edge."""
  node: Errorsapp
}

"""Methods to use when ordering `Errorsapp`."""
enum ErrorsappsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  USER_ID_ASC
  USER_ID_DESC
  CASE_ASC
  CASE_DESC
  DEVICE_NAME_ASC
  DEVICE_NAME_DESC
  OS_ASC
  OS_DESC
  DEVICE_ID_ASC
  DEVICE_ID_DESC
  VERSION_APP_ASC
  VERSION_APP_DESC
  VERSION_EXPO_ASC
  VERSION_EXPO_DESC
  VERSION_OS_ASC
  VERSION_OS_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Errorsapp` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input ErrorsappCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `userId` field."""
  userId: BigInt

  """Checks for equality with the object’s `case` field."""
  case: String

  """Checks for equality with the object’s `deviceName` field."""
  deviceName: String

  """Checks for equality with the object’s `os` field."""
  os: String

  """Checks for equality with the object’s `deviceId` field."""
  deviceId: String

  """Checks for equality with the object’s `versionApp` field."""
  versionApp: String

  """Checks for equality with the object’s `versionExpo` field."""
  versionExpo: String

  """Checks for equality with the object’s `versionOs` field."""
  versionOs: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A connection to a list of `Hijo` values."""
type HijosConnection {
  """A list of `Hijo` objects."""
  nodes: [Hijo]!

  """
  A list of edges which contains the `Hijo` and cursor to aid in pagination.
  """
  edges: [HijosEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Hijo` you could get from the connection."""
  totalCount: Int!
}

type Hijo implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  userId: BigInt
  hijoId: Int
  createdAt: Datetime
  updatedAt: Datetime
  userIdOrig: BigInt

  """Reads a single `User` that is related to this `Hijo`."""
  user: User

  """Reads a single `User` that is related to this `Hijo`."""
  uhijos: User
}

"""A `Hijo` edge in the connection."""
type HijosEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Hijo` at the end of the edge."""
  node: Hijo
}

"""Methods to use when ordering `Hijo`."""
enum HijosOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  USER_ID_ASC
  USER_ID_DESC
  HIJO_ID_ASC
  HIJO_ID_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  USER_ID_ORIG_ASC
  USER_ID_ORIG_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Hijo` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input HijoCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `userId` field."""
  userId: BigInt

  """Checks for equality with the object’s `hijoId` field."""
  hijoId: Int

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `userIdOrig` field."""
  userIdOrig: BigInt
}

"""A connection to a list of `Plantilla` values."""
type PlantillasConnection {
  """A list of `Plantilla` objects."""
  nodes: [Plantilla]!

  """
  A list of edges which contains the `Plantilla` and cursor to aid in pagination.
  """
  edges: [PlantillasEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Plantilla` you could get from the connection."""
  totalCount: Int!
}

type Plantilla implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  userId: Int
  nombre: String
  contenido: String
  categoria: String
  createdAt: Datetime
  updatedAt: Datetime

  """Reads a single `User` that is related to this `Plantilla`."""
  user: User
}

"""A `Plantilla` edge in the connection."""
type PlantillasEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Plantilla` at the end of the edge."""
  node: Plantilla
}

"""Methods to use when ordering `Plantilla`."""
enum PlantillasOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  USER_ID_ASC
  USER_ID_DESC
  NOMBRE_ASC
  NOMBRE_DESC
  CONTENIDO_ASC
  CONTENIDO_DESC
  CATEGORIA_ASC
  CATEGORIA_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Plantilla` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input PlantillaCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `userId` field."""
  userId: Int

  """Checks for equality with the object’s `nombre` field."""
  nombre: String

  """Checks for equality with the object’s `contenido` field."""
  contenido: String

  """Checks for equality with the object’s `categoria` field."""
  categoria: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A connection to a list of `GruposArchivo` values."""
type GruposArchivosConnection {
  """A list of `GruposArchivo` objects."""
  nodes: [GruposArchivo]!

  """
  A list of edges which contains the `GruposArchivo` and cursor to aid in pagination.
  """
  edges: [GruposArchivosEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `GruposArchivo` you could get from the connection."""
  totalCount: Int!
}

type GruposArchivo implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  grupoId: Int
  userId: Int
  path: String
  tipo: Int
  titulo: String
  nombre: String
  extension: String
  soloDocentes: Boolean
  descripcion: String
  createdAt: Datetime
  updatedAt: Datetime

  """Reads a single `Grupo` that is related to this `GruposArchivo`."""
  grupo: Grupo

  """Reads a single `User` that is related to this `GruposArchivo`."""
  user: User
}

"""A `GruposArchivo` edge in the connection."""
type GruposArchivosEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `GruposArchivo` at the end of the edge."""
  node: GruposArchivo
}

"""Methods to use when ordering `GruposArchivo`."""
enum GruposArchivosOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  GRUPO_ID_ASC
  GRUPO_ID_DESC
  USER_ID_ASC
  USER_ID_DESC
  PATH_ASC
  PATH_DESC
  TIPO_ASC
  TIPO_DESC
  TITULO_ASC
  TITULO_DESC
  NOMBRE_ASC
  NOMBRE_DESC
  EXTENSION_ASC
  EXTENSION_DESC
  SOLO_DOCENTES_ASC
  SOLO_DOCENTES_DESC
  DESCRIPCION_ASC
  DESCRIPCION_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `GruposArchivo` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input GruposArchivoCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `grupoId` field."""
  grupoId: Int

  """Checks for equality with the object’s `userId` field."""
  userId: Int

  """Checks for equality with the object’s `path` field."""
  path: String

  """Checks for equality with the object’s `tipo` field."""
  tipo: Int

  """Checks for equality with the object’s `titulo` field."""
  titulo: String

  """Checks for equality with the object’s `nombre` field."""
  nombre: String

  """Checks for equality with the object’s `extension` field."""
  extension: String

  """Checks for equality with the object’s `soloDocentes` field."""
  soloDocentes: Boolean

  """Checks for equality with the object’s `descripcion` field."""
  descripcion: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A connection to a list of `UsersGrupo` values."""
type UsersGruposConnection {
  """A list of `UsersGrupo` objects."""
  nodes: [UsersGrupo]!

  """
  A list of edges which contains the `UsersGrupo` and cursor to aid in pagination.
  """
  edges: [UsersGruposEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `UsersGrupo` you could get from the connection."""
  totalCount: Int!
}

type UsersGrupo implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  userId: BigInt!
  grupoId: BigInt!
  autoaprueba: Int
  visibleGrupal: Int
  createdAt: Datetime
  updatedAt: Datetime
  userIdOrig: BigInt

  """Reads a single `User` that is related to this `UsersGrupo`."""
  user: User

  """Reads a single `Grupo` that is related to this `UsersGrupo`."""
  grupo: Grupo
}

"""A `UsersGrupo` edge in the connection."""
type UsersGruposEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `UsersGrupo` at the end of the edge."""
  node: UsersGrupo
}

"""Methods to use when ordering `UsersGrupo`."""
enum UsersGruposOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  USER_ID_ASC
  USER_ID_DESC
  GRUPO_ID_ASC
  GRUPO_ID_DESC
  AUTOAPRUEBA_ASC
  AUTOAPRUEBA_DESC
  VISIBLE_GRUPAL_ASC
  VISIBLE_GRUPAL_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  USER_ID_ORIG_ASC
  USER_ID_ORIG_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `UsersGrupo` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input UsersGrupoCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `userId` field."""
  userId: BigInt

  """Checks for equality with the object’s `grupoId` field."""
  grupoId: BigInt

  """Checks for equality with the object’s `autoaprueba` field."""
  autoaprueba: Int

  """Checks for equality with the object’s `visibleGrupal` field."""
  visibleGrupal: Int

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `userIdOrig` field."""
  userIdOrig: BigInt
}

"""A `AdmFactura` edge in the connection."""
type AdmFacturasEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `AdmFactura` at the end of the edge."""
  node: AdmFactura
}

"""A connection to a list of `AdmGruposFamiliare` values."""
type AdmGruposFamiliaresConnection {
  """A list of `AdmGruposFamiliare` objects."""
  nodes: [AdmGruposFamiliare]!

  """
  A list of edges which contains the `AdmGruposFamiliare` and cursor to aid in pagination.
  """
  edges: [AdmGruposFamiliaresEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `AdmGruposFamiliare` you could get from the connection.
  """
  totalCount: Int!
}

type AdmGruposFamiliare implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  clienteId: BigInt
  nombre: String!
  estado: Int!
  descuentoId: BigInt
  formaAplicacion: Int
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime

  """Reads a single `Cliente` that is related to this `AdmGruposFamiliare`."""
  cliente: Cliente

  """
  Reads a single `AdmDescuento` that is related to this `AdmGruposFamiliare`.
  """
  descuento: AdmDescuento

  """
  Reads and enables pagination through a set of `AdmDescuentosGruposFamiliare`.
  """
  admDescuentosGruposFamiliaresByGrupoFamiliarId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmDescuentosGruposFamiliare`."""
    orderBy: [AdmDescuentosGruposFamiliaresOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmDescuentosGruposFamiliareCondition
  ): AdmDescuentosGruposFamiliaresConnection!
}

type AdmDescuento implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  clienteId: BigInt!
  nombre: String!
  estado: Int
  agotado: Int
  tipo: Int!
  formato: Int!
  monto: Float
  porcentaje: Float
  descuentoAplicable: Int!
  fechaHastaIndefinido: Int
  fechaHastaValidez: Datetime
  fechaDesdeValidez: Datetime
  conceptoIngreso: BigInt!
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime

  """Reads and enables pagination through a set of `AdmGruposFamiliare`."""
  admGruposFamiliaresByDescuentoId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmGruposFamiliare`."""
    orderBy: [AdmGruposFamiliaresOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmGruposFamiliareCondition
  ): AdmGruposFamiliaresConnection!

  """
  Reads and enables pagination through a set of `AdmDescuentosGruposFamiliare`.
  """
  admDescuentosGruposFamiliaresByDescuentoId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmDescuentosGruposFamiliare`."""
    orderBy: [AdmDescuentosGruposFamiliaresOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmDescuentosGruposFamiliareCondition
  ): AdmDescuentosGruposFamiliaresConnection!
}

"""Methods to use when ordering `AdmGruposFamiliare`."""
enum AdmGruposFamiliaresOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  NOMBRE_ASC
  NOMBRE_DESC
  ESTADO_ASC
  ESTADO_DESC
  DESCUENTO_ID_ASC
  DESCUENTO_ID_DESC
  FORMA_APLICACION_ASC
  FORMA_APLICACION_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  DELETED_AT_ASC
  DELETED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `AdmGruposFamiliare` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AdmGruposFamiliareCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: BigInt

  """Checks for equality with the object’s `nombre` field."""
  nombre: String

  """Checks for equality with the object’s `estado` field."""
  estado: Int

  """Checks for equality with the object’s `descuentoId` field."""
  descuentoId: BigInt

  """Checks for equality with the object’s `formaAplicacion` field."""
  formaAplicacion: Int

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `deletedAt` field."""
  deletedAt: Datetime
}

"""A connection to a list of `AdmDescuentosGruposFamiliare` values."""
type AdmDescuentosGruposFamiliaresConnection {
  """A list of `AdmDescuentosGruposFamiliare` objects."""
  nodes: [AdmDescuentosGruposFamiliare]!

  """
  A list of edges which contains the `AdmDescuentosGruposFamiliare` and cursor to aid in pagination.
  """
  edges: [AdmDescuentosGruposFamiliaresEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `AdmDescuentosGruposFamiliare` you could get from the connection.
  """
  totalCount: Int!
}

type AdmDescuentosGruposFamiliare implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  descuentoId: BigInt!
  grupoFamiliarId: BigInt!
  tipoGrupo: Boolean
  createdAt: Datetime
  updatedAt: Datetime

  """
  Reads a single `AdmDescuento` that is related to this `AdmDescuentosGruposFamiliare`.
  """
  descuento: AdmDescuento

  """
  Reads a single `AdmGruposFamiliare` that is related to this `AdmDescuentosGruposFamiliare`.
  """
  grupoFamiliar: AdmGruposFamiliare
}

"""A `AdmDescuentosGruposFamiliare` edge in the connection."""
type AdmDescuentosGruposFamiliaresEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `AdmDescuentosGruposFamiliare` at the end of the edge."""
  node: AdmDescuentosGruposFamiliare
}

"""Methods to use when ordering `AdmDescuentosGruposFamiliare`."""
enum AdmDescuentosGruposFamiliaresOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  DESCUENTO_ID_ASC
  DESCUENTO_ID_DESC
  GRUPO_FAMILIAR_ID_ASC
  GRUPO_FAMILIAR_ID_DESC
  TIPO_GRUPO_ASC
  TIPO_GRUPO_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `AdmDescuentosGruposFamiliare` object types. All
fields are tested for equality and combined with a logical ‘and.’
"""
input AdmDescuentosGruposFamiliareCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `descuentoId` field."""
  descuentoId: BigInt

  """Checks for equality with the object’s `grupoFamiliarId` field."""
  grupoFamiliarId: BigInt

  """Checks for equality with the object’s `tipoGrupo` field."""
  tipoGrupo: Boolean

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A `AdmGruposFamiliare` edge in the connection."""
type AdmGruposFamiliaresEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `AdmGruposFamiliare` at the end of the edge."""
  node: AdmGruposFamiliare
}

"""A connection to a list of `AdmBancosCuenta` values."""
type AdmBancosCuentasConnection {
  """A list of `AdmBancosCuenta` objects."""
  nodes: [AdmBancosCuenta]!

  """
  A list of edges which contains the `AdmBancosCuenta` and cursor to aid in pagination.
  """
  edges: [AdmBancosCuentasEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `AdmBancosCuenta` you could get from the connection.
  """
  totalCount: Int!
}

type AdmBancosCuenta implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  nombre: String!
  cbu: String!
  aliasCbu: String!
  bancoId: BigInt!
  clienteId: BigInt!
  descripcionLarga: String
  saldo: BigFloat
  cuentaId: Int
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime

  """Reads a single `AdmBanco` that is related to this `AdmBancosCuenta`."""
  banco: AdmBanco

  """Reads a single `Cliente` that is related to this `AdmBancosCuenta`."""
  cliente: Cliente
}

type AdmBanco implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  nombre: String!
  telefono: String
  contactoComercial: String
  clienteId: BigInt!
  estado: Int
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime

  """Reads and enables pagination through a set of `AdmBancosCuenta`."""
  admBancosCuentasByBancoId(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `AdmBancosCuenta`."""
    orderBy: [AdmBancosCuentasOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: AdmBancosCuentaCondition
  ): AdmBancosCuentasConnection!
}

"""Methods to use when ordering `AdmBancosCuenta`."""
enum AdmBancosCuentasOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  NOMBRE_ASC
  NOMBRE_DESC
  CBU_ASC
  CBU_DESC
  ALIAS_CBU_ASC
  ALIAS_CBU_DESC
  BANCO_ID_ASC
  BANCO_ID_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  DESCRIPCION_LARGA_ASC
  DESCRIPCION_LARGA_DESC
  SALDO_ASC
  SALDO_DESC
  CUENTA_ID_ASC
  CUENTA_ID_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  DELETED_AT_ASC
  DELETED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `AdmBancosCuenta` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AdmBancosCuentaCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `nombre` field."""
  nombre: String

  """Checks for equality with the object’s `cbu` field."""
  cbu: String

  """Checks for equality with the object’s `aliasCbu` field."""
  aliasCbu: String

  """Checks for equality with the object’s `bancoId` field."""
  bancoId: BigInt

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: BigInt

  """Checks for equality with the object’s `descripcionLarga` field."""
  descripcionLarga: String

  """Checks for equality with the object’s `saldo` field."""
  saldo: BigFloat

  """Checks for equality with the object’s `cuentaId` field."""
  cuentaId: Int

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `deletedAt` field."""
  deletedAt: Datetime
}

"""A `AdmBancosCuenta` edge in the connection."""
type AdmBancosCuentasEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `AdmBancosCuenta` at the end of the edge."""
  node: AdmBancosCuenta
}

"""A connection to a list of `AdmProveedore` values."""
type AdmProveedoresConnection {
  """A list of `AdmProveedore` objects."""
  nodes: [AdmProveedore]!

  """
  A list of edges which contains the `AdmProveedore` and cursor to aid in pagination.
  """
  edges: [AdmProveedoresEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `AdmProveedore` you could get from the connection."""
  totalCount: Int!
}

"""A `AdmProveedore` edge in the connection."""
type AdmProveedoresEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `AdmProveedore` at the end of the edge."""
  node: AdmProveedore
}

"""Methods to use when ordering `AdmProveedore`."""
enum AdmProveedoresOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  RAZON_SOCIAL_ASC
  RAZON_SOCIAL_DESC
  CUIT_ASC
  CUIT_DESC
  EMAIL_ASC
  EMAIL_DESC
  TELEFONO_ASC
  TELEFONO_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  DELETED_AT_ASC
  DELETED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `AdmProveedore` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AdmProveedoreCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: BigInt

  """Checks for equality with the object’s `razonSocial` field."""
  razonSocial: String

  """Checks for equality with the object’s `cuit` field."""
  cuit: String

  """Checks for equality with the object’s `email` field."""
  email: String

  """Checks for equality with the object’s `telefono` field."""
  telefono: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `deletedAt` field."""
  deletedAt: Datetime
}

"""A connection to a list of `Versione` values."""
type VersionesConnection {
  """A list of `Versione` objects."""
  nodes: [Versione]!

  """
  A list of edges which contains the `Versione` and cursor to aid in pagination.
  """
  edges: [VersionesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Versione` you could get from the connection."""
  totalCount: Int!
}

type Versione implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  nombre: String
  version: String
  otaVersion: String
  clienteId: Int
  appleStoreUrl: String
  playStoreUrl: String
  createdAt: Datetime
  updatedAt: Datetime

  """Reads a single `Cliente` that is related to this `Versione`."""
  cliente: Cliente
}

"""A `Versione` edge in the connection."""
type VersionesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Versione` at the end of the edge."""
  node: Versione
}

"""Methods to use when ordering `Versione`."""
enum VersionesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  NOMBRE_ASC
  NOMBRE_DESC
  VERSION_ASC
  VERSION_DESC
  OTA_VERSION_ASC
  OTA_VERSION_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  APPLE_STORE_URL_ASC
  APPLE_STORE_URL_DESC
  PLAY_STORE_URL_ASC
  PLAY_STORE_URL_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Versione` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input VersioneCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `nombre` field."""
  nombre: String

  """Checks for equality with the object’s `version` field."""
  version: String

  """Checks for equality with the object’s `otaVersion` field."""
  otaVersion: String

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: Int

  """Checks for equality with the object’s `appleStoreUrl` field."""
  appleStoreUrl: String

  """Checks for equality with the object’s `playStoreUrl` field."""
  playStoreUrl: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A `Asignatura` edge in the connection."""
type AsignaturasEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Asignatura` at the end of the edge."""
  node: Asignatura
}

"""A `Activity` edge in the connection."""
type ActivitiesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Activity` at the end of the edge."""
  node: Activity
}

"""A connection to a list of `ActivityLog` values."""
type ActivityLogsConnection {
  """A list of `ActivityLog` objects."""
  nodes: [ActivityLog]!

  """
  A list of edges which contains the `ActivityLog` and cursor to aid in pagination.
  """
  edges: [ActivityLogsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `ActivityLog` you could get from the connection."""
  totalCount: Int!
}

type ActivityLog implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  logName: String
  description: String!
  subjectId: Int
  subjectType: String
  causerId: Int
  causerType: String
  properties: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""A `ActivityLog` edge in the connection."""
type ActivityLogsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `ActivityLog` at the end of the edge."""
  node: ActivityLog
}

"""Methods to use when ordering `ActivityLog`."""
enum ActivityLogsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  LOG_NAME_ASC
  LOG_NAME_DESC
  DESCRIPTION_ASC
  DESCRIPTION_DESC
  SUBJECT_ID_ASC
  SUBJECT_ID_DESC
  SUBJECT_TYPE_ASC
  SUBJECT_TYPE_DESC
  CAUSER_ID_ASC
  CAUSER_ID_DESC
  CAUSER_TYPE_ASC
  CAUSER_TYPE_DESC
  PROPERTIES_ASC
  PROPERTIES_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `ActivityLog` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input ActivityLogCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `logName` field."""
  logName: String

  """Checks for equality with the object’s `description` field."""
  description: String

  """Checks for equality with the object’s `subjectId` field."""
  subjectId: Int

  """Checks for equality with the object’s `subjectType` field."""
  subjectType: String

  """Checks for equality with the object’s `causerId` field."""
  causerId: Int

  """Checks for equality with the object’s `causerType` field."""
  causerType: String

  """Checks for equality with the object’s `properties` field."""
  properties: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A connection to a list of `AdmAporte` values."""
type AdmAportesConnection {
  """A list of `AdmAporte` objects."""
  nodes: [AdmAporte]!

  """
  A list of edges which contains the `AdmAporte` and cursor to aid in pagination.
  """
  edges: [AdmAportesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `AdmAporte` you could get from the connection."""
  totalCount: Int!
}

type AdmAporte implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  aportante: String
  monto: BigFloat!
  path: String
  observaciones: String
  clienteId: BigInt!
  userCreator: BigInt!
  fechaAporte: Datetime
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""A `AdmAporte` edge in the connection."""
type AdmAportesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `AdmAporte` at the end of the edge."""
  node: AdmAporte
}

"""Methods to use when ordering `AdmAporte`."""
enum AdmAportesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  APORTANTE_ASC
  APORTANTE_DESC
  MONTO_ASC
  MONTO_DESC
  PATH_ASC
  PATH_DESC
  OBSERVACIONES_ASC
  OBSERVACIONES_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  USER_CREATOR_ASC
  USER_CREATOR_DESC
  FECHA_APORTE_ASC
  FECHA_APORTE_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  DELETED_AT_ASC
  DELETED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `AdmAporte` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AdmAporteCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `aportante` field."""
  aportante: String

  """Checks for equality with the object’s `monto` field."""
  monto: BigFloat

  """Checks for equality with the object’s `path` field."""
  path: String

  """Checks for equality with the object’s `observaciones` field."""
  observaciones: String

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: BigInt

  """Checks for equality with the object’s `userCreator` field."""
  userCreator: BigInt

  """Checks for equality with the object’s `fechaAporte` field."""
  fechaAporte: Datetime

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `deletedAt` field."""
  deletedAt: Datetime
}

"""A connection to a list of `AdmBanco` values."""
type AdmBancosConnection {
  """A list of `AdmBanco` objects."""
  nodes: [AdmBanco]!

  """
  A list of edges which contains the `AdmBanco` and cursor to aid in pagination.
  """
  edges: [AdmBancosEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `AdmBanco` you could get from the connection."""
  totalCount: Int!
}

"""A `AdmBanco` edge in the connection."""
type AdmBancosEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `AdmBanco` at the end of the edge."""
  node: AdmBanco
}

"""Methods to use when ordering `AdmBanco`."""
enum AdmBancosOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  NOMBRE_ASC
  NOMBRE_DESC
  TELEFONO_ASC
  TELEFONO_DESC
  CONTACTO_COMERCIAL_ASC
  CONTACTO_COMERCIAL_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  ESTADO_ASC
  ESTADO_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  DELETED_AT_ASC
  DELETED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `AdmBanco` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AdmBancoCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `nombre` field."""
  nombre: String

  """Checks for equality with the object’s `telefono` field."""
  telefono: String

  """Checks for equality with the object’s `contactoComercial` field."""
  contactoComercial: String

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: BigInt

  """Checks for equality with the object’s `estado` field."""
  estado: Int

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `deletedAt` field."""
  deletedAt: Datetime
}

"""A connection to a list of `AdmCuenta` values."""
type AdmCuentasConnection {
  """A list of `AdmCuenta` objects."""
  nodes: [AdmCuenta]!

  """
  A list of edges which contains the `AdmCuenta` and cursor to aid in pagination.
  """
  edges: [AdmCuentasEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `AdmCuenta` you could get from the connection."""
  totalCount: Int!
}

"""A `AdmCuenta` edge in the connection."""
type AdmCuentasEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `AdmCuenta` at the end of the edge."""
  node: AdmCuenta
}

"""Methods to use when ordering `AdmCuenta`."""
enum AdmCuentasOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  NUMERO_ASC
  NUMERO_DESC
  NOMBRE_ASC
  NOMBRE_DESC
  DESCRIPCION_ASC
  DESCRIPCION_DESC
  BALANCE_ASC
  BALANCE_DESC
  TIPO_ASC
  TIPO_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  PARENT_ID_ASC
  PARENT_ID_DESC
  HABILITADA_EGRESOS_ASC
  HABILITADA_EGRESOS_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  EDITABLE_ASC
  EDITABLE_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  DELETED_AT_ASC
  DELETED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `AdmCuenta` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input AdmCuentaCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `numero` field."""
  numero: String

  """Checks for equality with the object’s `nombre` field."""
  nombre: String

  """Checks for equality with the object’s `descripcion` field."""
  descripcion: String

  """Checks for equality with the object’s `balance` field."""
  balance: BigFloat

  """Checks for equality with the object’s `tipo` field."""
  tipo: String

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: Int

  """Checks for equality with the object’s `parentId` field."""
  parentId: BigInt

  """Checks for equality with the object’s `habilitadaEgresos` field."""
  habilitadaEgresos: Int

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `editable` field."""
  editable: Int

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `deletedAt` field."""
  deletedAt: Datetime
}

"""A connection to a list of `AdmDescuento` values."""
type AdmDescuentosConnection {
  """A list of `AdmDescuento` objects."""
  nodes: [AdmDescuento]!

  """
  A list of edges which contains the `AdmDescuento` and cursor to aid in pagination.
  """
  edges: [AdmDescuentosEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `AdmDescuento` you could get from the connection."""
  totalCount: Int!
}

"""A `AdmDescuento` edge in the connection."""
type AdmDescuentosEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `AdmDescuento` at the end of the edge."""
  node: AdmDescuento
}

"""Methods to use when ordering `AdmDescuento`."""
enum AdmDescuentosOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  NOMBRE_ASC
  NOMBRE_DESC
  ESTADO_ASC
  ESTADO_DESC
  AGOTADO_ASC
  AGOTADO_DESC
  TIPO_ASC
  TIPO_DESC
  FORMATO_ASC
  FORMATO_DESC
  MONTO_ASC
  MONTO_DESC
  PORCENTAJE_ASC
  PORCENTAJE_DESC
  DESCUENTO_APLICABLE_ASC
  DESCUENTO_APLICABLE_DESC
  FECHA_HASTA_INDEFINIDO_ASC
  FECHA_HASTA_INDEFINIDO_DESC
  FECHA_HASTA_VALIDEZ_ASC
  FECHA_HASTA_VALIDEZ_DESC
  FECHA_DESDE_VALIDEZ_ASC
  FECHA_DESDE_VALIDEZ_DESC
  CONCEPTO_INGRESO_ASC
  CONCEPTO_INGRESO_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  DELETED_AT_ASC
  DELETED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `AdmDescuento` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AdmDescuentoCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: BigInt

  """Checks for equality with the object’s `nombre` field."""
  nombre: String

  """Checks for equality with the object’s `estado` field."""
  estado: Int

  """Checks for equality with the object’s `agotado` field."""
  agotado: Int

  """Checks for equality with the object’s `tipo` field."""
  tipo: Int

  """Checks for equality with the object’s `formato` field."""
  formato: Int

  """Checks for equality with the object’s `monto` field."""
  monto: Float

  """Checks for equality with the object’s `porcentaje` field."""
  porcentaje: Float

  """Checks for equality with the object’s `descuentoAplicable` field."""
  descuentoAplicable: Int

  """Checks for equality with the object’s `fechaHastaIndefinido` field."""
  fechaHastaIndefinido: Int

  """Checks for equality with the object’s `fechaHastaValidez` field."""
  fechaHastaValidez: Datetime

  """Checks for equality with the object’s `fechaDesdeValidez` field."""
  fechaDesdeValidez: Datetime

  """Checks for equality with the object’s `conceptoIngreso` field."""
  conceptoIngreso: BigInt

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `deletedAt` field."""
  deletedAt: Datetime
}

"""A connection to a list of `AdmDescuentosGrupo` values."""
type AdmDescuentosGruposConnection {
  """A list of `AdmDescuentosGrupo` objects."""
  nodes: [AdmDescuentosGrupo]!

  """
  A list of edges which contains the `AdmDescuentosGrupo` and cursor to aid in pagination.
  """
  edges: [AdmDescuentosGruposEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `AdmDescuentosGrupo` you could get from the connection.
  """
  totalCount: Int!
}

type AdmDescuentosGrupo implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  descuentoId: BigInt!
  grupoId: BigInt!
  tipoGrupo: Boolean
  createdAt: Datetime
  updatedAt: Datetime
}

"""A `AdmDescuentosGrupo` edge in the connection."""
type AdmDescuentosGruposEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `AdmDescuentosGrupo` at the end of the edge."""
  node: AdmDescuentosGrupo
}

"""Methods to use when ordering `AdmDescuentosGrupo`."""
enum AdmDescuentosGruposOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  DESCUENTO_ID_ASC
  DESCUENTO_ID_DESC
  GRUPO_ID_ASC
  GRUPO_ID_DESC
  TIPO_GRUPO_ASC
  TIPO_GRUPO_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `AdmDescuentosGrupo` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AdmDescuentosGrupoCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `descuentoId` field."""
  descuentoId: BigInt

  """Checks for equality with the object’s `grupoId` field."""
  grupoId: BigInt

  """Checks for equality with the object’s `tipoGrupo` field."""
  tipoGrupo: Boolean

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A connection to a list of `AwsSesHistorial` values."""
type AwsSesHistorialsConnection {
  """A list of `AwsSesHistorial` objects."""
  nodes: [AwsSesHistorial]!

  """
  A list of edges which contains the `AwsSesHistorial` and cursor to aid in pagination.
  """
  edges: [AwsSesHistorialsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `AwsSesHistorial` you could get from the connection.
  """
  totalCount: Int!
}

type AwsSesHistorial implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  messageid: String
  tipo: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""A `AwsSesHistorial` edge in the connection."""
type AwsSesHistorialsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `AwsSesHistorial` at the end of the edge."""
  node: AwsSesHistorial
}

"""Methods to use when ordering `AwsSesHistorial`."""
enum AwsSesHistorialsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  MESSAGEID_ASC
  MESSAGEID_DESC
  TIPO_ASC
  TIPO_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `AwsSesHistorial` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input AwsSesHistorialCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `messageid` field."""
  messageid: String

  """Checks for equality with the object’s `tipo` field."""
  tipo: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A connection to a list of `CalendarioUser` values."""
type CalendarioUsersConnection {
  """A list of `CalendarioUser` objects."""
  nodes: [CalendarioUser]!

  """
  A list of edges which contains the `CalendarioUser` and cursor to aid in pagination.
  """
  edges: [CalendarioUsersEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `CalendarioUser` you could get from the connection."""
  totalCount: Int!
}

type CalendarioUser implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  calendarioEventoId: Int
  userId: Int
}

"""A `CalendarioUser` edge in the connection."""
type CalendarioUsersEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `CalendarioUser` at the end of the edge."""
  node: CalendarioUser
}

"""Methods to use when ordering `CalendarioUser`."""
enum CalendarioUsersOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CALENDARIO_EVENTO_ID_ASC
  CALENDARIO_EVENTO_ID_DESC
  USER_ID_ASC
  USER_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `CalendarioUser` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input CalendarioUserCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `calendarioEventoId` field."""
  calendarioEventoId: Int

  """Checks for equality with the object’s `userId` field."""
  userId: Int
}

"""A connection to a list of `CalificacionesConcepto` values."""
type CalificacionesConceptosConnection {
  """A list of `CalificacionesConcepto` objects."""
  nodes: [CalificacionesConcepto]!

  """
  A list of edges which contains the `CalificacionesConcepto` and cursor to aid in pagination.
  """
  edges: [CalificacionesConceptosEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `CalificacionesConcepto` you could get from the connection.
  """
  totalCount: Int!
}

"""A `CalificacionesConcepto` edge in the connection."""
type CalificacionesConceptosEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `CalificacionesConcepto` at the end of the edge."""
  node: CalificacionesConcepto
}

"""Methods to use when ordering `CalificacionesConcepto`."""
enum CalificacionesConceptosOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  NOMBRE_ASC
  NOMBRE_DESC
  DOCENTE_ID_ASC
  DOCENTE_ID_DESC
  CALIFICACION_ESCALA_ID_ASC
  CALIFICACION_ESCALA_ID_DESC
  ESPACIO_CURRICULAR_ID_ASC
  ESPACIO_CURRICULAR_ID_DESC
  GRUPO_ID_ASC
  GRUPO_ID_DESC
  DIVISION_ID_ASC
  DIVISION_ID_DESC
  IMPACTA_NOTA_FINAL_ASC
  IMPACTA_NOTA_FINAL_DESC
  CALIFICACION_CERRADA_ASC
  CALIFICACION_CERRADA_DESC
  ACTIVIDAD_ID_ASC
  ACTIVIDAD_ID_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  DELETED_AT_ASC
  DELETED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `CalificacionesConcepto` object types. All fields
are tested for equality and combined with a logical ‘and.’
"""
input CalificacionesConceptoCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `nombre` field."""
  nombre: String

  """Checks for equality with the object’s `docenteId` field."""
  docenteId: Int

  """Checks for equality with the object’s `calificacionEscalaId` field."""
  calificacionEscalaId: Int

  """Checks for equality with the object’s `espacioCurricularId` field."""
  espacioCurricularId: Int

  """Checks for equality with the object’s `grupoId` field."""
  grupoId: Int

  """Checks for equality with the object’s `divisionId` field."""
  divisionId: Int

  """Checks for equality with the object’s `impactaNotaFinal` field."""
  impactaNotaFinal: Boolean

  """Checks for equality with the object’s `calificacionCerrada` field."""
  calificacionCerrada: Boolean

  """Checks for equality with the object’s `actividadId` field."""
  actividadId: Int

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `deletedAt` field."""
  deletedAt: Datetime
}

"""A connection to a list of `CalificacionesConceptosAlumno` values."""
type CalificacionesConceptosAlumnosConnection {
  """A list of `CalificacionesConceptosAlumno` objects."""
  nodes: [CalificacionesConceptosAlumno]!

  """
  A list of edges which contains the `CalificacionesConceptosAlumno` and cursor to aid in pagination.
  """
  edges: [CalificacionesConceptosAlumnosEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `CalificacionesConceptosAlumno` you could get from the connection.
  """
  totalCount: Int!
}

type CalificacionesConceptosAlumno implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  conceptoId: Int
  alumnoId: Int
}

"""A `CalificacionesConceptosAlumno` edge in the connection."""
type CalificacionesConceptosAlumnosEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `CalificacionesConceptosAlumno` at the end of the edge."""
  node: CalificacionesConceptosAlumno
}

"""Methods to use when ordering `CalificacionesConceptosAlumno`."""
enum CalificacionesConceptosAlumnosOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CONCEPTO_ID_ASC
  CONCEPTO_ID_DESC
  ALUMNO_ID_ASC
  ALUMNO_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `CalificacionesConceptosAlumno` object types. All
fields are tested for equality and combined with a logical ‘and.’
"""
input CalificacionesConceptosAlumnoCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `conceptoId` field."""
  conceptoId: Int

  """Checks for equality with the object’s `alumnoId` field."""
  alumnoId: Int
}

"""A connection to a list of `CalificacionesEscala` values."""
type CalificacionesEscalasConnection {
  """A list of `CalificacionesEscala` objects."""
  nodes: [CalificacionesEscala]!

  """
  A list of edges which contains the `CalificacionesEscala` and cursor to aid in pagination.
  """
  edges: [CalificacionesEscalasEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `CalificacionesEscala` you could get from the connection.
  """
  totalCount: Int!
}

type CalificacionesEscala implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  nombre: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""A `CalificacionesEscala` edge in the connection."""
type CalificacionesEscalasEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `CalificacionesEscala` at the end of the edge."""
  node: CalificacionesEscala
}

"""Methods to use when ordering `CalificacionesEscala`."""
enum CalificacionesEscalasOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  NOMBRE_ASC
  NOMBRE_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `CalificacionesEscala` object types. All fields
are tested for equality and combined with a logical ‘and.’
"""
input CalificacionesEscalaCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `nombre` field."""
  nombre: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A connection to a list of `CalificacionesEscalasValore` values."""
type CalificacionesEscalasValoresConnection {
  """A list of `CalificacionesEscalasValore` objects."""
  nodes: [CalificacionesEscalasValore]!

  """
  A list of edges which contains the `CalificacionesEscalasValore` and cursor to aid in pagination.
  """
  edges: [CalificacionesEscalasValoresEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `CalificacionesEscalasValore` you could get from the connection.
  """
  totalCount: Int!
}

"""A `CalificacionesEscalasValore` edge in the connection."""
type CalificacionesEscalasValoresEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `CalificacionesEscalasValore` at the end of the edge."""
  node: CalificacionesEscalasValore
}

"""Methods to use when ordering `CalificacionesEscalasValore`."""
enum CalificacionesEscalasValoresOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  NOMBRE_ASC
  NOMBRE_DESC
  EXITOSO_ASC
  EXITOSO_DESC
  PESO_ASC
  PESO_DESC
  CALIFICACION_ESCALA_ID_ASC
  CALIFICACION_ESCALA_ID_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `CalificacionesEscalasValore` object types. All
fields are tested for equality and combined with a logical ‘and.’
"""
input CalificacionesEscalasValoreCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `nombre` field."""
  nombre: String

  """Checks for equality with the object’s `exitoso` field."""
  exitoso: Boolean

  """Checks for equality with the object’s `peso` field."""
  peso: Int

  """Checks for equality with the object’s `calificacionEscalaId` field."""
  calificacionEscalaId: Int

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A connection to a list of `Changelog` values."""
type ChangelogsConnection {
  """A list of `Changelog` objects."""
  nodes: [Changelog]!

  """
  A list of edges which contains the `Changelog` and cursor to aid in pagination.
  """
  edges: [ChangelogsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Changelog` you could get from the connection."""
  totalCount: Int!
}

type Changelog implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  descripcion: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""A `Changelog` edge in the connection."""
type ChangelogsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Changelog` at the end of the edge."""
  node: Changelog
}

"""Methods to use when ordering `Changelog`."""
enum ChangelogsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  DESCRIPCION_ASC
  DESCRIPCION_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Changelog` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input ChangelogCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `descripcion` field."""
  descripcion: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A connection to a list of `ClienteModule` values."""
type ClienteModulesConnection {
  """A list of `ClienteModule` objects."""
  nodes: [ClienteModule]!

  """
  A list of edges which contains the `ClienteModule` and cursor to aid in pagination.
  """
  edges: [ClienteModulesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `ClienteModule` you could get from the connection."""
  totalCount: Int!
}

type ClienteModule implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  moduleId: BigInt!
  clienteId: BigInt!
}

"""A `ClienteModule` edge in the connection."""
type ClienteModulesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `ClienteModule` at the end of the edge."""
  node: ClienteModule
}

"""Methods to use when ordering `ClienteModule`."""
enum ClienteModulesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  MODULE_ID_ASC
  MODULE_ID_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `ClienteModule` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input ClienteModuleCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `moduleId` field."""
  moduleId: BigInt

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: BigInt
}

"""A connection to a list of `Cliente` values."""
type ClientesConnection {
  """A list of `Cliente` objects."""
  nodes: [Cliente]!

  """
  A list of edges which contains the `Cliente` and cursor to aid in pagination.
  """
  edges: [ClientesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Cliente` you could get from the connection."""
  totalCount: Int!
}

"""A `Cliente` edge in the connection."""
type ClientesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Cliente` at the end of the edge."""
  node: Cliente
}

"""Methods to use when ordering `Cliente`."""
enum ClientesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  NAME_ASC
  NAME_DESC
  ALUMNOS_FACTURABLES_ASC
  ALUMNOS_FACTURABLES_DESC
  LOGO_ASC
  LOGO_DESC
  EMAIL_ASC
  EMAIL_DESC
  DIRECCION_ASC
  DIRECCION_DESC
  PROVINCIA_ID_ASC
  PROVINCIA_ID_DESC
  LATITUD_ASC
  LATITUD_DESC
  LONGITUD_ASC
  LONGITUD_DESC
  TIENE_APP_ASC
  TIENE_APP_DESC
  NOTES_ASC
  NOTES_DESC
  CUIT_ASC
  CUIT_DESC
  IIBB_ASC
  IIBB_DESC
  INICIO_ACTIVIDADES_ASC
  INICIO_ACTIVIDADES_DESC
  APP_BUNDLE_ANDROID_ASC
  APP_BUNDLE_ANDROID_DESC
  APP_BUNDLE_IOS_ASC
  APP_BUNDLE_IOS_DESC
  DEMO_ACTIVA_ASC
  DEMO_ACTIVA_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  DELETED_AT_ASC
  DELETED_AT_DESC
  TELEFONO_ASC
  TELEFONO_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Cliente` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input ClienteCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `name` field."""
  name: String

  """Checks for equality with the object’s `alumnosFacturables` field."""
  alumnosFacturables: BigInt

  """Checks for equality with the object’s `logo` field."""
  logo: String

  """Checks for equality with the object’s `email` field."""
  email: String

  """Checks for equality with the object’s `direccion` field."""
  direccion: String

  """Checks for equality with the object’s `provinciaId` field."""
  provinciaId: BigInt

  """Checks for equality with the object’s `latitud` field."""
  latitud: String

  """Checks for equality with the object’s `longitud` field."""
  longitud: String

  """Checks for equality with the object’s `tieneApp` field."""
  tieneApp: Int

  """Checks for equality with the object’s `notes` field."""
  notes: String

  """Checks for equality with the object’s `cuit` field."""
  cuit: String

  """Checks for equality with the object’s `iibb` field."""
  iibb: String

  """Checks for equality with the object’s `inicioActividades` field."""
  inicioActividades: String

  """Checks for equality with the object’s `appBundleAndroid` field."""
  appBundleAndroid: String

  """Checks for equality with the object’s `appBundleIos` field."""
  appBundleIos: String

  """Checks for equality with the object’s `demoActiva` field."""
  demoActiva: Int

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `deletedAt` field."""
  deletedAt: Datetime

  """Checks for equality with the object’s `telefono` field."""
  telefono: String
}

"""A connection to a list of `Divisione` values."""
type DivisionesConnection {
  """A list of `Divisione` objects."""
  nodes: [Divisione]!

  """
  A list of edges which contains the `Divisione` and cursor to aid in pagination.
  """
  edges: [DivisionesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Divisione` you could get from the connection."""
  totalCount: Int!
}

"""A `Divisione` edge in the connection."""
type DivisionesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Divisione` at the end of the edge."""
  node: Divisione
}

"""Methods to use when ordering `Divisione`."""
enum DivisionesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  NOMBRE_ASC
  NOMBRE_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  COLOR_ASC
  COLOR_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  DELETED_AT_ASC
  DELETED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Divisione` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input DivisioneCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `nombre` field."""
  nombre: String

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: BigInt

  """Checks for equality with the object’s `color` field."""
  color: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `deletedAt` field."""
  deletedAt: Datetime
}

"""A connection to a list of `EspaciosCurriculare` values."""
type EspaciosCurricularesConnection {
  """A list of `EspaciosCurriculare` objects."""
  nodes: [EspaciosCurriculare]!

  """
  A list of edges which contains the `EspaciosCurriculare` and cursor to aid in pagination.
  """
  edges: [EspaciosCurricularesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `EspaciosCurriculare` you could get from the connection.
  """
  totalCount: Int!
}

"""A `EspaciosCurriculare` edge in the connection."""
type EspaciosCurricularesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `EspaciosCurriculare` at the end of the edge."""
  node: EspaciosCurriculare
}

"""Methods to use when ordering `EspaciosCurriculare`."""
enum EspaciosCurricularesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  NOMBRE_ASC
  NOMBRE_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  DELETED_AT_ASC
  DELETED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `EspaciosCurriculare` object types. All fields
are tested for equality and combined with a logical ‘and.’
"""
input EspaciosCurriculareCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `nombre` field."""
  nombre: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `deletedAt` field."""
  deletedAt: Datetime
}

"""A connection to a list of `FailedJob` values."""
type FailedJobsConnection {
  """A list of `FailedJob` objects."""
  nodes: [FailedJob]!

  """
  A list of edges which contains the `FailedJob` and cursor to aid in pagination.
  """
  edges: [FailedJobsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `FailedJob` you could get from the connection."""
  totalCount: Int!
}

type FailedJob implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  connection: String
  queue: String
  payload: String
  exception: String
  failedAt: Datetime
}

"""A `FailedJob` edge in the connection."""
type FailedJobsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `FailedJob` at the end of the edge."""
  node: FailedJob
}

"""Methods to use when ordering `FailedJob`."""
enum FailedJobsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CONNECTION_ASC
  CONNECTION_DESC
  QUEUE_ASC
  QUEUE_DESC
  PAYLOAD_ASC
  PAYLOAD_DESC
  EXCEPTION_ASC
  EXCEPTION_DESC
  FAILED_AT_ASC
  FAILED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `FailedJob` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input FailedJobCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `connection` field."""
  connection: String

  """Checks for equality with the object’s `queue` field."""
  queue: String

  """Checks for equality with the object’s `payload` field."""
  payload: String

  """Checks for equality with the object’s `exception` field."""
  exception: String

  """Checks for equality with the object’s `failedAt` field."""
  failedAt: Datetime
}

"""A connection to a list of `HistorialNotificacione` values."""
type HistorialNotificacionesConnection {
  """A list of `HistorialNotificacione` objects."""
  nodes: [HistorialNotificacione]!

  """
  A list of edges which contains the `HistorialNotificacione` and cursor to aid in pagination.
  """
  edges: [HistorialNotificacionesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `HistorialNotificacione` you could get from the connection.
  """
  totalCount: Int!
}

type HistorialNotificacione implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  mensajeItemId: Int
  tipo: String
  token: String
  exitoso: Boolean
  resultado: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""A `HistorialNotificacione` edge in the connection."""
type HistorialNotificacionesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `HistorialNotificacione` at the end of the edge."""
  node: HistorialNotificacione
}

"""Methods to use when ordering `HistorialNotificacione`."""
enum HistorialNotificacionesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  MENSAJE_ITEM_ID_ASC
  MENSAJE_ITEM_ID_DESC
  TIPO_ASC
  TIPO_DESC
  TOKEN_ASC
  TOKEN_DESC
  EXITOSO_ASC
  EXITOSO_DESC
  RESULTADO_ASC
  RESULTADO_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `HistorialNotificacione` object types. All fields
are tested for equality and combined with a logical ‘and.’
"""
input HistorialNotificacioneCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `mensajeItemId` field."""
  mensajeItemId: Int

  """Checks for equality with the object’s `tipo` field."""
  tipo: String

  """Checks for equality with the object’s `token` field."""
  token: String

  """Checks for equality with the object’s `exitoso` field."""
  exitoso: Boolean

  """Checks for equality with the object’s `resultado` field."""
  resultado: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A connection to a list of `Log` values."""
type LogsConnection {
  """A list of `Log` objects."""
  nodes: [Log]!

  """
  A list of edges which contains the `Log` and cursor to aid in pagination.
  """
  edges: [LogsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Log` you could get from the connection."""
  totalCount: Int!
}

type Log implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  url: String
  token: String
  rolId: Int
  rol: String
  userId: Int
  email: String
  nombre: String
  clienteId: Int
  divisionId: Int
  params: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""A `Log` edge in the connection."""
type LogsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Log` at the end of the edge."""
  node: Log
}

"""Methods to use when ordering `Log`."""
enum LogsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  URL_ASC
  URL_DESC
  TOKEN_ASC
  TOKEN_DESC
  ROL_ID_ASC
  ROL_ID_DESC
  ROL_ASC
  ROL_DESC
  USER_ID_ASC
  USER_ID_DESC
  EMAIL_ASC
  EMAIL_DESC
  NOMBRE_ASC
  NOMBRE_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  DIVISION_ID_ASC
  DIVISION_ID_DESC
  PARAMS_ASC
  PARAMS_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Log` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input LogCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `url` field."""
  url: String

  """Checks for equality with the object’s `token` field."""
  token: String

  """Checks for equality with the object’s `rolId` field."""
  rolId: Int

  """Checks for equality with the object’s `rol` field."""
  rol: String

  """Checks for equality with the object’s `userId` field."""
  userId: Int

  """Checks for equality with the object’s `email` field."""
  email: String

  """Checks for equality with the object’s `nombre` field."""
  nombre: String

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: Int

  """Checks for equality with the object’s `divisionId` field."""
  divisionId: Int

  """Checks for equality with the object’s `params` field."""
  params: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A connection to a list of `MensajeItem` values."""
type MensajeItemsConnection {
  """A list of `MensajeItem` objects."""
  nodes: [MensajeItem]!

  """
  A list of edges which contains the `MensajeItem` and cursor to aid in pagination.
  """
  edges: [MensajeItemsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `MensajeItem` you could get from the connection."""
  totalCount: Int!
}

type MensajeItem implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  mensajeId: BigInt!
  alumnoId: BigInt!
  tutorId: BigInt
  docenteId: BigInt
  estado: Int!
  grupoId: BigInt
  fechaNotificacion: Datetime
  fechaRecepcion: Datetime
  fechaLectura: Datetime
  fechaConfirmacion: Datetime
  pushStatus: Int
  pushDetail: String
  awsEmailMessageid: String
  createdAt: Datetime
  updatedAt: Datetime
  docenteIdOrig: BigInt
  tutorIdOrig: BigInt
  alumnoIdOrig: BigInt

  """Reads a single `Mensaje` that is related to this `MensajeItem`."""
  mensaje: Mensaje
}

type Mensaje implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  titulo: String
  mensaje: String
  userEmisor: BigInt!
  rolEmisor: BigInt
  clienteId: BigInt!
  divisionId: BigInt!
  grupoId: BigInt
  estado: Int
  foto: String
  adjunto: String
  requiereConfirmacion: Int
  tipoMensaje: BigInt
  padreId: BigInt
  padreHilo: BigInt
  adminSenderId: BigInt
  aprobadoAt: Datetime
  aproboUser: Int
  request: String
  userEmisorOrig: BigInt
  cantHilos: Int!
  destinatarios: String
  busqueda: String
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime

  """Reads and enables pagination through a set of `MensajeItem`."""
  mensajeItems(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `MensajeItem`."""
    orderBy: [MensajeItemsOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: MensajeItemCondition
  ): MensajeItemsConnection!
}

"""Methods to use when ordering `MensajeItem`."""
enum MensajeItemsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  MENSAJE_ID_ASC
  MENSAJE_ID_DESC
  ALUMNO_ID_ASC
  ALUMNO_ID_DESC
  TUTOR_ID_ASC
  TUTOR_ID_DESC
  DOCENTE_ID_ASC
  DOCENTE_ID_DESC
  ESTADO_ASC
  ESTADO_DESC
  GRUPO_ID_ASC
  GRUPO_ID_DESC
  FECHA_NOTIFICACION_ASC
  FECHA_NOTIFICACION_DESC
  FECHA_RECEPCION_ASC
  FECHA_RECEPCION_DESC
  FECHA_LECTURA_ASC
  FECHA_LECTURA_DESC
  FECHA_CONFIRMACION_ASC
  FECHA_CONFIRMACION_DESC
  PUSH_STATUS_ASC
  PUSH_STATUS_DESC
  PUSH_DETAIL_ASC
  PUSH_DETAIL_DESC
  AWS_EMAIL_MESSAGEID_ASC
  AWS_EMAIL_MESSAGEID_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  DOCENTE_ID_ORIG_ASC
  DOCENTE_ID_ORIG_DESC
  TUTOR_ID_ORIG_ASC
  TUTOR_ID_ORIG_DESC
  ALUMNO_ID_ORIG_ASC
  ALUMNO_ID_ORIG_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `MensajeItem` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input MensajeItemCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `mensajeId` field."""
  mensajeId: BigInt

  """Checks for equality with the object’s `alumnoId` field."""
  alumnoId: BigInt

  """Checks for equality with the object’s `tutorId` field."""
  tutorId: BigInt

  """Checks for equality with the object’s `docenteId` field."""
  docenteId: BigInt

  """Checks for equality with the object’s `estado` field."""
  estado: Int

  """Checks for equality with the object’s `grupoId` field."""
  grupoId: BigInt

  """Checks for equality with the object’s `fechaNotificacion` field."""
  fechaNotificacion: Datetime

  """Checks for equality with the object’s `fechaRecepcion` field."""
  fechaRecepcion: Datetime

  """Checks for equality with the object’s `fechaLectura` field."""
  fechaLectura: Datetime

  """Checks for equality with the object’s `fechaConfirmacion` field."""
  fechaConfirmacion: Datetime

  """Checks for equality with the object’s `pushStatus` field."""
  pushStatus: Int

  """Checks for equality with the object’s `pushDetail` field."""
  pushDetail: String

  """Checks for equality with the object’s `awsEmailMessageid` field."""
  awsEmailMessageid: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `docenteIdOrig` field."""
  docenteIdOrig: BigInt

  """Checks for equality with the object’s `tutorIdOrig` field."""
  tutorIdOrig: BigInt

  """Checks for equality with the object’s `alumnoIdOrig` field."""
  alumnoIdOrig: BigInt
}

"""A `MensajeItem` edge in the connection."""
type MensajeItemsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `MensajeItem` at the end of the edge."""
  node: MensajeItem
}

"""A connection to a list of `Mensaje` values."""
type MensajesConnection {
  """A list of `Mensaje` objects."""
  nodes: [Mensaje]!

  """
  A list of edges which contains the `Mensaje` and cursor to aid in pagination.
  """
  edges: [MensajesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Mensaje` you could get from the connection."""
  totalCount: Int!
}

"""A `Mensaje` edge in the connection."""
type MensajesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Mensaje` at the end of the edge."""
  node: Mensaje
}

"""Methods to use when ordering `Mensaje`."""
enum MensajesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  TITULO_ASC
  TITULO_DESC
  MENSAJE_ASC
  MENSAJE_DESC
  USER_EMISOR_ASC
  USER_EMISOR_DESC
  ROL_EMISOR_ASC
  ROL_EMISOR_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  DIVISION_ID_ASC
  DIVISION_ID_DESC
  GRUPO_ID_ASC
  GRUPO_ID_DESC
  ESTADO_ASC
  ESTADO_DESC
  FOTO_ASC
  FOTO_DESC
  ADJUNTO_ASC
  ADJUNTO_DESC
  REQUIERE_CONFIRMACION_ASC
  REQUIERE_CONFIRMACION_DESC
  TIPO_MENSAJE_ASC
  TIPO_MENSAJE_DESC
  PADRE_ID_ASC
  PADRE_ID_DESC
  PADRE_HILO_ASC
  PADRE_HILO_DESC
  ADMIN_SENDER_ID_ASC
  ADMIN_SENDER_ID_DESC
  APROBADO_AT_ASC
  APROBADO_AT_DESC
  APROBO_USER_ASC
  APROBO_USER_DESC
  REQUEST_ASC
  REQUEST_DESC
  USER_EMISOR_ORIG_ASC
  USER_EMISOR_ORIG_DESC
  CANT_HILOS_ASC
  CANT_HILOS_DESC
  DESTINATARIOS_ASC
  DESTINATARIOS_DESC
  BUSQUEDA_ASC
  BUSQUEDA_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  DELETED_AT_ASC
  DELETED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Mensaje` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input MensajeCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `titulo` field."""
  titulo: String

  """Checks for equality with the object’s `mensaje` field."""
  mensaje: String

  """Checks for equality with the object’s `userEmisor` field."""
  userEmisor: BigInt

  """Checks for equality with the object’s `rolEmisor` field."""
  rolEmisor: BigInt

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: BigInt

  """Checks for equality with the object’s `divisionId` field."""
  divisionId: BigInt

  """Checks for equality with the object’s `grupoId` field."""
  grupoId: BigInt

  """Checks for equality with the object’s `estado` field."""
  estado: Int

  """Checks for equality with the object’s `foto` field."""
  foto: String

  """Checks for equality with the object’s `adjunto` field."""
  adjunto: String

  """Checks for equality with the object’s `requiereConfirmacion` field."""
  requiereConfirmacion: Int

  """Checks for equality with the object’s `tipoMensaje` field."""
  tipoMensaje: BigInt

  """Checks for equality with the object’s `padreId` field."""
  padreId: BigInt

  """Checks for equality with the object’s `padreHilo` field."""
  padreHilo: BigInt

  """Checks for equality with the object’s `adminSenderId` field."""
  adminSenderId: BigInt

  """Checks for equality with the object’s `aprobadoAt` field."""
  aprobadoAt: Datetime

  """Checks for equality with the object’s `aproboUser` field."""
  aproboUser: Int

  """Checks for equality with the object’s `request` field."""
  request: String

  """Checks for equality with the object’s `userEmisorOrig` field."""
  userEmisorOrig: BigInt

  """Checks for equality with the object’s `cantHilos` field."""
  cantHilos: Int

  """Checks for equality with the object’s `destinatarios` field."""
  destinatarios: String

  """Checks for equality with the object’s `busqueda` field."""
  busqueda: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `deletedAt` field."""
  deletedAt: Datetime
}

"""A connection to a list of `MensajesAdmin` values."""
type MensajesAdminsConnection {
  """A list of `MensajesAdmin` objects."""
  nodes: [MensajesAdmin]!

  """
  A list of edges which contains the `MensajesAdmin` and cursor to aid in pagination.
  """
  edges: [MensajesAdminsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `MensajesAdmin` you could get from the connection."""
  totalCount: Int!
}

type MensajesAdmin implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  asunto: String
  contenido: String
  destinatarios: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""A `MensajesAdmin` edge in the connection."""
type MensajesAdminsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `MensajesAdmin` at the end of the edge."""
  node: MensajesAdmin
}

"""Methods to use when ordering `MensajesAdmin`."""
enum MensajesAdminsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  ASUNTO_ASC
  ASUNTO_DESC
  CONTENIDO_ASC
  CONTENIDO_DESC
  DESTINATARIOS_ASC
  DESTINATARIOS_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `MensajesAdmin` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input MensajesAdminCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `asunto` field."""
  asunto: String

  """Checks for equality with the object’s `contenido` field."""
  contenido: String

  """Checks for equality with the object’s `destinatarios` field."""
  destinatarios: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A connection to a list of `MensajesArchivo` values."""
type MensajesArchivosConnection {
  """A list of `MensajesArchivo` objects."""
  nodes: [MensajesArchivo]!

  """
  A list of edges which contains the `MensajesArchivo` and cursor to aid in pagination.
  """
  edges: [MensajesArchivosEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `MensajesArchivo` you could get from the connection.
  """
  totalCount: Int!
}

type MensajesArchivo implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  nombre: String
  extension: String
  mensajeId: BigInt
  path: String
  tipo: Boolean
  clienteId: BigInt!
  eliminado: Boolean
  createdAt: Datetime
  updatedAt: Datetime
}

"""A `MensajesArchivo` edge in the connection."""
type MensajesArchivosEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `MensajesArchivo` at the end of the edge."""
  node: MensajesArchivo
}

"""Methods to use when ordering `MensajesArchivo`."""
enum MensajesArchivosOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  NOMBRE_ASC
  NOMBRE_DESC
  EXTENSION_ASC
  EXTENSION_DESC
  MENSAJE_ID_ASC
  MENSAJE_ID_DESC
  PATH_ASC
  PATH_DESC
  TIPO_ASC
  TIPO_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  ELIMINADO_ASC
  ELIMINADO_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `MensajesArchivo` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input MensajesArchivoCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `nombre` field."""
  nombre: String

  """Checks for equality with the object’s `extension` field."""
  extension: String

  """Checks for equality with the object’s `mensajeId` field."""
  mensajeId: BigInt

  """Checks for equality with the object’s `path` field."""
  path: String

  """Checks for equality with the object’s `tipo` field."""
  tipo: Boolean

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: BigInt

  """Checks for equality with the object’s `eliminado` field."""
  eliminado: Boolean

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A connection to a list of `MenuApp` values."""
type MenuAppsConnection {
  """A list of `MenuApp` objects."""
  nodes: [MenuApp]!

  """
  A list of edges which contains the `MenuApp` and cursor to aid in pagination.
  """
  edges: [MenuAppsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `MenuApp` you could get from the connection."""
  totalCount: Int!
}

type MenuApp implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  clienteId: Int
  divisionId: Int
  rotulo: String
  funcion: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""A `MenuApp` edge in the connection."""
type MenuAppsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `MenuApp` at the end of the edge."""
  node: MenuApp
}

"""Methods to use when ordering `MenuApp`."""
enum MenuAppsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  DIVISION_ID_ASC
  DIVISION_ID_DESC
  ROTULO_ASC
  ROTULO_DESC
  FUNCION_ASC
  FUNCION_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `MenuApp` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input MenuAppCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: Int

  """Checks for equality with the object’s `divisionId` field."""
  divisionId: Int

  """Checks for equality with the object’s `rotulo` field."""
  rotulo: String

  """Checks for equality with the object’s `funcion` field."""
  funcion: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A connection to a list of `Migration` values."""
type MigrationsConnection {
  """A list of `Migration` objects."""
  nodes: [Migration]!

  """
  A list of edges which contains the `Migration` and cursor to aid in pagination.
  """
  edges: [MigrationsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Migration` you could get from the connection."""
  totalCount: Int!
}

type Migration implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  migration: String!
  batch: Int!
}

"""A `Migration` edge in the connection."""
type MigrationsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Migration` at the end of the edge."""
  node: Migration
}

"""Methods to use when ordering `Migration`."""
enum MigrationsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  MIGRATION_ASC
  MIGRATION_DESC
  BATCH_ASC
  BATCH_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Migration` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input MigrationCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `migration` field."""
  migration: String

  """Checks for equality with the object’s `batch` field."""
  batch: Int
}

"""A connection to a list of `Module` values."""
type ModulesConnection {
  """A list of `Module` objects."""
  nodes: [Module]!

  """
  A list of edges which contains the `Module` and cursor to aid in pagination.
  """
  edges: [ModulesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Module` you could get from the connection."""
  totalCount: Int!
}

type Module implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  slug: String
  nombre: String
}

"""A `Module` edge in the connection."""
type ModulesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Module` at the end of the edge."""
  node: Module
}

"""Methods to use when ordering `Module`."""
enum ModulesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  SLUG_ASC
  SLUG_DESC
  NOMBRE_ASC
  NOMBRE_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Module` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input ModuleCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `slug` field."""
  slug: String

  """Checks for equality with the object’s `nombre` field."""
  nombre: String
}

"""A connection to a list of `ModulesBack` values."""
type ModulesBacksConnection {
  """A list of `ModulesBack` objects."""
  nodes: [ModulesBack]!

  """
  A list of edges which contains the `ModulesBack` and cursor to aid in pagination.
  """
  edges: [ModulesBacksEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `ModulesBack` you could get from the connection."""
  totalCount: Int!
}

type ModulesBack implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  slug: String
  nombre: String
}

"""A `ModulesBack` edge in the connection."""
type ModulesBacksEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `ModulesBack` at the end of the edge."""
  node: ModulesBack
}

"""Methods to use when ordering `ModulesBack`."""
enum ModulesBacksOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  SLUG_ASC
  SLUG_DESC
  NOMBRE_ASC
  NOMBRE_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `ModulesBack` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input ModulesBackCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `slug` field."""
  slug: String

  """Checks for equality with the object’s `nombre` field."""
  nombre: String
}

"""A connection to a list of `MtCorregir` values."""
type MtCorregirsConnection {
  """A list of `MtCorregir` objects."""
  nodes: [MtCorregir]!

  """
  A list of edges which contains the `MtCorregir` and cursor to aid in pagination.
  """
  edges: [MtCorregirsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `MtCorregir` you could get from the connection."""
  totalCount: Int!
}

type MtCorregir implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  userId: String
  email: String
}

"""A `MtCorregir` edge in the connection."""
type MtCorregirsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `MtCorregir` at the end of the edge."""
  node: MtCorregir
}

"""Methods to use when ordering `MtCorregir`."""
enum MtCorregirsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  USER_ID_ASC
  USER_ID_DESC
  EMAIL_ASC
  EMAIL_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `MtCorregir` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input MtCorregirCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `userId` field."""
  userId: String

  """Checks for equality with the object’s `email` field."""
  email: String
}

"""A connection to a list of `MultimediaMapping` values."""
type MultimediaMappingsConnection {
  """A list of `MultimediaMapping` objects."""
  nodes: [MultimediaMapping]!

  """
  A list of edges which contains the `MultimediaMapping` and cursor to aid in pagination.
  """
  edges: [MultimediaMappingsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `MultimediaMapping` you could get from the connection.
  """
  totalCount: Int!
}

type MultimediaMapping implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  cloudinary: String
  s3: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""A `MultimediaMapping` edge in the connection."""
type MultimediaMappingsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `MultimediaMapping` at the end of the edge."""
  node: MultimediaMapping
}

"""Methods to use when ordering `MultimediaMapping`."""
enum MultimediaMappingsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CLOUDINARY_ASC
  CLOUDINARY_DESC
  S3_ASC
  S3_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `MultimediaMapping` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input MultimediaMappingCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `cloudinary` field."""
  cloudinary: String

  """Checks for equality with the object’s `s3` field."""
  s3: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A connection to a list of `Opcione` values."""
type OpcionesConnection {
  """A list of `Opcione` objects."""
  nodes: [Opcione]!

  """
  A list of edges which contains the `Opcione` and cursor to aid in pagination.
  """
  edges: [OpcionesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Opcione` you could get from the connection."""
  totalCount: Int!
}

type Opcione implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  rotulo: String
  valor: String
  visible: Boolean
  createdAt: Datetime
  updatedAt: Datetime
}

"""A `Opcione` edge in the connection."""
type OpcionesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Opcione` at the end of the edge."""
  node: Opcione
}

"""Methods to use when ordering `Opcione`."""
enum OpcionesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  ROTULO_ASC
  ROTULO_DESC
  VALOR_ASC
  VALOR_DESC
  VISIBLE_ASC
  VISIBLE_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Opcione` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input OpcioneCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `rotulo` field."""
  rotulo: String

  """Checks for equality with the object’s `valor` field."""
  valor: String

  """Checks for equality with the object’s `visible` field."""
  visible: Boolean

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A connection to a list of `PasswordReset` values."""
type PasswordResetsConnection {
  """A list of `PasswordReset` objects."""
  nodes: [PasswordReset]!

  """
  A list of edges which contains the `PasswordReset` and cursor to aid in pagination.
  """
  edges: [PasswordResetsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `PasswordReset` you could get from the connection."""
  totalCount: Int!
}

type PasswordReset {
  email: String!
  token: String!
  createdAt: Datetime
}

"""A `PasswordReset` edge in the connection."""
type PasswordResetsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `PasswordReset` at the end of the edge."""
  node: PasswordReset
}

"""Methods to use when ordering `PasswordReset`."""
enum PasswordResetsOrderBy {
  NATURAL
  EMAIL_ASC
  EMAIL_DESC
  TOKEN_ASC
  TOKEN_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
}

"""
A condition to be used against `PasswordReset` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input PasswordResetCondition {
  """Checks for equality with the object’s `email` field."""
  email: String

  """Checks for equality with the object’s `token` field."""
  token: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime
}

"""A connection to a list of `Provincia` values."""
type ProvinciasConnection {
  """A list of `Provincia` objects."""
  nodes: [Provincia]!

  """
  A list of edges which contains the `Provincia` and cursor to aid in pagination.
  """
  edges: [ProvinciasEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Provincia` you could get from the connection."""
  totalCount: Int!
}

"""A `Provincia` edge in the connection."""
type ProvinciasEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Provincia` at the end of the edge."""
  node: Provincia
}

"""Methods to use when ordering `Provincia`."""
enum ProvinciasOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  NOMBRE_ASC
  NOMBRE_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Provincia` object types. All fields are tested
for equality and combined with a logical ‘and.’
"""
input ProvinciaCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `nombre` field."""
  nombre: String
}

"""A connection to a list of `Setting` values."""
type SettingsConnection {
  """A list of `Setting` objects."""
  nodes: [Setting]!

  """
  A list of edges which contains the `Setting` and cursor to aid in pagination.
  """
  edges: [SettingsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Setting` you could get from the connection."""
  totalCount: Int!
}

type Setting implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  clienteId: BigInt!
  acercaTitulo: String
  acercaImagen: String
  acercaContenido: String
  acercaMarkerTitulo: String
  acercaLat: String
  acercaLon: String
  tituloEmail: String
  urlGooglePlay: String
  urlAppleStore: String
  urlCampus: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""A `Setting` edge in the connection."""
type SettingsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Setting` at the end of the edge."""
  node: Setting
}

"""Methods to use when ordering `Setting`."""
enum SettingsOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  ACERCA_TITULO_ASC
  ACERCA_TITULO_DESC
  ACERCA_IMAGEN_ASC
  ACERCA_IMAGEN_DESC
  ACERCA_CONTENIDO_ASC
  ACERCA_CONTENIDO_DESC
  ACERCA_MARKER_TITULO_ASC
  ACERCA_MARKER_TITULO_DESC
  ACERCA_LAT_ASC
  ACERCA_LAT_DESC
  ACERCA_LON_ASC
  ACERCA_LON_DESC
  TITULO_EMAIL_ASC
  TITULO_EMAIL_DESC
  URL_GOOGLE_PLAY_ASC
  URL_GOOGLE_PLAY_DESC
  URL_APPLE_STORE_ASC
  URL_APPLE_STORE_DESC
  URL_CAMPUS_ASC
  URL_CAMPUS_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `Setting` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input SettingCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: BigInt

  """Checks for equality with the object’s `acercaTitulo` field."""
  acercaTitulo: String

  """Checks for equality with the object’s `acercaImagen` field."""
  acercaImagen: String

  """Checks for equality with the object’s `acercaContenido` field."""
  acercaContenido: String

  """Checks for equality with the object’s `acercaMarkerTitulo` field."""
  acercaMarkerTitulo: String

  """Checks for equality with the object’s `acercaLat` field."""
  acercaLat: String

  """Checks for equality with the object’s `acercaLon` field."""
  acercaLon: String

  """Checks for equality with the object’s `tituloEmail` field."""
  tituloEmail: String

  """Checks for equality with the object’s `urlGooglePlay` field."""
  urlGooglePlay: String

  """Checks for equality with the object’s `urlAppleStore` field."""
  urlAppleStore: String

  """Checks for equality with the object’s `urlCampus` field."""
  urlCampus: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A connection to a list of `TelescopeEntry` values."""
type TelescopeEntriesConnection {
  """A list of `TelescopeEntry` objects."""
  nodes: [TelescopeEntry]!

  """
  A list of edges which contains the `TelescopeEntry` and cursor to aid in pagination.
  """
  edges: [TelescopeEntriesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `TelescopeEntry` you could get from the connection."""
  totalCount: Int!
}

type TelescopeEntry implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  sequence: BigInt!
  uuid: String!
  batchId: String!
  familyHash: String
  shouldDisplayOnIndex: Boolean!
  type: String!
  content: String!
  createdAt: Datetime

  """Reads and enables pagination through a set of `TelescopeEntriesTag`."""
  telescopeEntriesTagsByEntryUuid(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `TelescopeEntriesTag`."""
    orderBy: [TelescopeEntriesTagsOrderBy!] = [NATURAL]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TelescopeEntriesTagCondition
  ): TelescopeEntriesTagsConnection!
}

"""A connection to a list of `TelescopeEntriesTag` values."""
type TelescopeEntriesTagsConnection {
  """A list of `TelescopeEntriesTag` objects."""
  nodes: [TelescopeEntriesTag]!

  """
  A list of edges which contains the `TelescopeEntriesTag` and cursor to aid in pagination.
  """
  edges: [TelescopeEntriesTagsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `TelescopeEntriesTag` you could get from the connection.
  """
  totalCount: Int!
}

type TelescopeEntriesTag {
  entryUuid: String!
  tag: String!

  """
  Reads a single `TelescopeEntry` that is related to this `TelescopeEntriesTag`.
  """
  entry: TelescopeEntry
}

"""A `TelescopeEntriesTag` edge in the connection."""
type TelescopeEntriesTagsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `TelescopeEntriesTag` at the end of the edge."""
  node: TelescopeEntriesTag
}

"""Methods to use when ordering `TelescopeEntriesTag`."""
enum TelescopeEntriesTagsOrderBy {
  NATURAL
  ENTRY_UUID_ASC
  ENTRY_UUID_DESC
  TAG_ASC
  TAG_DESC
}

"""
A condition to be used against `TelescopeEntriesTag` object types. All fields
are tested for equality and combined with a logical ‘and.’
"""
input TelescopeEntriesTagCondition {
  """Checks for equality with the object’s `entryUuid` field."""
  entryUuid: String

  """Checks for equality with the object’s `tag` field."""
  tag: String
}

"""A `TelescopeEntry` edge in the connection."""
type TelescopeEntriesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `TelescopeEntry` at the end of the edge."""
  node: TelescopeEntry
}

"""Methods to use when ordering `TelescopeEntry`."""
enum TelescopeEntriesOrderBy {
  NATURAL
  SEQUENCE_ASC
  SEQUENCE_DESC
  UUID_ASC
  UUID_DESC
  BATCH_ID_ASC
  BATCH_ID_DESC
  FAMILY_HASH_ASC
  FAMILY_HASH_DESC
  SHOULD_DISPLAY_ON_INDEX_ASC
  SHOULD_DISPLAY_ON_INDEX_DESC
  TYPE_ASC
  TYPE_DESC
  CONTENT_ASC
  CONTENT_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `TelescopeEntry` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input TelescopeEntryCondition {
  """Checks for equality with the object’s `sequence` field."""
  sequence: BigInt

  """Checks for equality with the object’s `uuid` field."""
  uuid: String

  """Checks for equality with the object’s `batchId` field."""
  batchId: String

  """Checks for equality with the object’s `familyHash` field."""
  familyHash: String

  """Checks for equality with the object’s `shouldDisplayOnIndex` field."""
  shouldDisplayOnIndex: Boolean

  """Checks for equality with the object’s `type` field."""
  type: String

  """Checks for equality with the object’s `content` field."""
  content: String

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime
}

"""A connection to a list of `TelescopeMonitoring` values."""
type TelescopeMonitoringsConnection {
  """A list of `TelescopeMonitoring` objects."""
  nodes: [TelescopeMonitoring]!

  """
  A list of edges which contains the `TelescopeMonitoring` and cursor to aid in pagination.
  """
  edges: [TelescopeMonitoringsEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `TelescopeMonitoring` you could get from the connection.
  """
  totalCount: Int!
}

type TelescopeMonitoring {
  tag: String!
}

"""A `TelescopeMonitoring` edge in the connection."""
type TelescopeMonitoringsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `TelescopeMonitoring` at the end of the edge."""
  node: TelescopeMonitoring
}

"""Methods to use when ordering `TelescopeMonitoring`."""
enum TelescopeMonitoringsOrderBy {
  NATURAL
  TAG_ASC
  TAG_DESC
}

"""
A condition to be used against `TelescopeMonitoring` object types. All fields
are tested for equality and combined with a logical ‘and.’
"""
input TelescopeMonitoringCondition {
  """Checks for equality with the object’s `tag` field."""
  tag: String
}

"""A connection to a list of `UsersInactivo` values."""
type UsersInactivosConnection {
  """A list of `UsersInactivo` objects."""
  nodes: [UsersInactivo]!

  """
  A list of edges which contains the `UsersInactivo` and cursor to aid in pagination.
  """
  edges: [UsersInactivosEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `UsersInactivo` you could get from the connection."""
  totalCount: Int!
}

type UsersInactivo implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  id: BigInt!
  userId: Int
  clienteId: Int
  password: String
  messageId: String
  statusMessage: String
  fechaEntrega: Datetime
  fechaLectura: Datetime
  fechaLogin: Datetime
  createdAt: Datetime
  updatedAt: Datetime
}

"""A `UsersInactivo` edge in the connection."""
type UsersInactivosEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `UsersInactivo` at the end of the edge."""
  node: UsersInactivo
}

"""Methods to use when ordering `UsersInactivo`."""
enum UsersInactivosOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  USER_ID_ASC
  USER_ID_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  PASSWORD_ASC
  PASSWORD_DESC
  MESSAGE_ID_ASC
  MESSAGE_ID_DESC
  STATUS_MESSAGE_ASC
  STATUS_MESSAGE_DESC
  FECHA_ENTREGA_ASC
  FECHA_ENTREGA_DESC
  FECHA_LECTURA_ASC
  FECHA_LECTURA_DESC
  FECHA_LOGIN_ASC
  FECHA_LOGIN_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A condition to be used against `UsersInactivo` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input UsersInactivoCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `userId` field."""
  userId: Int

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: Int

  """Checks for equality with the object’s `password` field."""
  password: String

  """Checks for equality with the object’s `messageId` field."""
  messageId: String

  """Checks for equality with the object’s `statusMessage` field."""
  statusMessage: String

  """Checks for equality with the object’s `fechaEntrega` field."""
  fechaEntrega: Datetime

  """Checks for equality with the object’s `fechaLectura` field."""
  fechaLectura: Datetime

  """Checks for equality with the object’s `fechaLogin` field."""
  fechaLogin: Datetime

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime
}

"""A connection to a list of `Usuario` values."""
type UsuariosConnection {
  """A list of `Usuario` objects."""
  nodes: [Usuario]!

  """
  A list of edges which contains the `Usuario` and cursor to aid in pagination.
  """
  edges: [UsuariosEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """The count of *all* `Usuario` you could get from the connection."""
  totalCount: Int!
}

type Usuario {
  id: BigInt
  nombre: String
  apellido: String
  dni: String
  fechaNacimiento: Date
  sexo: String
  foto: String
  email: String
  telefono: String
  passwordHash: String
  domicilio: String
  provinciaId: Int
  ciudadId: Int
  perfil: String
  observaciones: String
  rememberToken: String
  recoveryToken: String
  grupoFamiliarId: BigInt
  permisoAdmin: Int
  recibirEmails: Int
  lastAction: Datetime
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
  deletedBy: BigInt
  rol: String
  clienteId: Int
  divisionId: Int
}

"""A `Usuario` edge in the connection."""
type UsuariosEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Usuario` at the end of the edge."""
  node: Usuario
}

"""Methods to use when ordering `Usuario`."""
enum UsuariosOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  NOMBRE_ASC
  NOMBRE_DESC
  APELLIDO_ASC
  APELLIDO_DESC
  DNI_ASC
  DNI_DESC
  FECHA_NACIMIENTO_ASC
  FECHA_NACIMIENTO_DESC
  SEXO_ASC
  SEXO_DESC
  FOTO_ASC
  FOTO_DESC
  EMAIL_ASC
  EMAIL_DESC
  TELEFONO_ASC
  TELEFONO_DESC
  PASSWORD_HASH_ASC
  PASSWORD_HASH_DESC
  DOMICILIO_ASC
  DOMICILIO_DESC
  PROVINCIA_ID_ASC
  PROVINCIA_ID_DESC
  CIUDAD_ID_ASC
  CIUDAD_ID_DESC
  PERFIL_ASC
  PERFIL_DESC
  OBSERVACIONES_ASC
  OBSERVACIONES_DESC
  REMEMBER_TOKEN_ASC
  REMEMBER_TOKEN_DESC
  RECOVERY_TOKEN_ASC
  RECOVERY_TOKEN_DESC
  GRUPO_FAMILIAR_ID_ASC
  GRUPO_FAMILIAR_ID_DESC
  PERMISO_ADMIN_ASC
  PERMISO_ADMIN_DESC
  RECIBIR_EMAILS_ASC
  RECIBIR_EMAILS_DESC
  LAST_ACTION_ASC
  LAST_ACTION_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
  DELETED_AT_ASC
  DELETED_AT_DESC
  DELETED_BY_ASC
  DELETED_BY_DESC
  ROL_ASC
  ROL_DESC
  CLIENTE_ID_ASC
  CLIENTE_ID_DESC
  DIVISION_ID_ASC
  DIVISION_ID_DESC
}

"""
A condition to be used against `Usuario` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input UsuarioCondition {
  """Checks for equality with the object’s `id` field."""
  id: BigInt

  """Checks for equality with the object’s `nombre` field."""
  nombre: String

  """Checks for equality with the object’s `apellido` field."""
  apellido: String

  """Checks for equality with the object’s `dni` field."""
  dni: String

  """Checks for equality with the object’s `fechaNacimiento` field."""
  fechaNacimiento: Date

  """Checks for equality with the object’s `sexo` field."""
  sexo: String

  """Checks for equality with the object’s `foto` field."""
  foto: String

  """Checks for equality with the object’s `email` field."""
  email: String

  """Checks for equality with the object’s `telefono` field."""
  telefono: String

  """Checks for equality with the object’s `passwordHash` field."""
  passwordHash: String

  """Checks for equality with the object’s `domicilio` field."""
  domicilio: String

  """Checks for equality with the object’s `provinciaId` field."""
  provinciaId: Int

  """Checks for equality with the object’s `ciudadId` field."""
  ciudadId: Int

  """Checks for equality with the object’s `perfil` field."""
  perfil: String

  """Checks for equality with the object’s `observaciones` field."""
  observaciones: String

  """Checks for equality with the object’s `rememberToken` field."""
  rememberToken: String

  """Checks for equality with the object’s `recoveryToken` field."""
  recoveryToken: String

  """Checks for equality with the object’s `grupoFamiliarId` field."""
  grupoFamiliarId: BigInt

  """Checks for equality with the object’s `permisoAdmin` field."""
  permisoAdmin: Int

  """Checks for equality with the object’s `recibirEmails` field."""
  recibirEmails: Int

  """Checks for equality with the object’s `lastAction` field."""
  lastAction: Datetime

  """Checks for equality with the object’s `createdAt` field."""
  createdAt: Datetime

  """Checks for equality with the object’s `updatedAt` field."""
  updatedAt: Datetime

  """Checks for equality with the object’s `deletedAt` field."""
  deletedAt: Datetime

  """Checks for equality with the object’s `deletedBy` field."""
  deletedBy: BigInt

  """Checks for equality with the object’s `rol` field."""
  rol: String

  """Checks for equality with the object’s `clienteId` field."""
  clienteId: Int

  """Checks for equality with the object’s `divisionId` field."""
  divisionId: Int
}

"""
The root mutation type which contains root level fields which mutate data.
"""
type Mutation {
  """Creates a single `Activity`."""
  createActivity(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateActivityInput!
  ): CreateActivityPayload

  """Creates a single `ActividadesAlumno`."""
  createActividadesAlumno(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateActividadesAlumnoInput!
  ): CreateActividadesAlumnoPayload

  """Creates a single `ActividadesArchivo`."""
  createActividadesArchivo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateActividadesArchivoInput!
  ): CreateActividadesArchivoPayload

  """Creates a single `ActividadesEntregas`."""
  createActividadesEntregas(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateActividadesEntregasInput!
  ): CreateActividadesEntregasPayload

  """Creates a single `ActividadesEntregasComentario`."""
  createActividadesEntregasComentario(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateActividadesEntregasComentarioInput!
  ): CreateActividadesEntregasComentarioPayload

  """Creates a single `ActivityLog`."""
  createActivityLog(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateActivityLogInput!
  ): CreateActivityLogPayload

  """Creates a single `AdmAporte`."""
  createAdmAporte(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAdmAporteInput!
  ): CreateAdmAportePayload

  """Creates a single `AdmBanco`."""
  createAdmBanco(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAdmBancoInput!
  ): CreateAdmBancoPayload

  """Creates a single `AdmBancosCuenta`."""
  createAdmBancosCuenta(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAdmBancosCuentaInput!
  ): CreateAdmBancosCuentaPayload

  """Creates a single `AdmCaja`."""
  createAdmCaja(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAdmCajaInput!
  ): CreateAdmCajaPayload

  """Creates a single `AdmCegreso`."""
  createAdmCegreso(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAdmCegresoInput!
  ): CreateAdmCegresoPayload

  """Creates a single `AdmCingreso`."""
  createAdmCingreso(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAdmCingresoInput!
  ): CreateAdmCingresoPayload

  """Creates a single `AdmCingresosValore`."""
  createAdmCingresosValore(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAdmCingresosValoreInput!
  ): CreateAdmCingresosValorePayload

  """Creates a single `AdmCuenta`."""
  createAdmCuenta(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAdmCuentaInput!
  ): CreateAdmCuentaPayload

  """Creates a single `AdmDescuento`."""
  createAdmDescuento(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAdmDescuentoInput!
  ): CreateAdmDescuentoPayload

  """Creates a single `AdmDescuentosGrupo`."""
  createAdmDescuentosGrupo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAdmDescuentosGrupoInput!
  ): CreateAdmDescuentosGrupoPayload

  """Creates a single `AdmDescuentosGruposFamiliare`."""
  createAdmDescuentosGruposFamiliare(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAdmDescuentosGruposFamiliareInput!
  ): CreateAdmDescuentosGruposFamiliarePayload

  """Creates a single `AdmEgresoItem`."""
  createAdmEgresoItem(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAdmEgresoItemInput!
  ): CreateAdmEgresoItemPayload

  """Creates a single `AdmEgreso`."""
  createAdmEgreso(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAdmEgresoInput!
  ): CreateAdmEgresoPayload

  """Creates a single `AdmFacturaItem`."""
  createAdmFacturaItem(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAdmFacturaItemInput!
  ): CreateAdmFacturaItemPayload

  """Creates a single `AdmFacturaPago`."""
  createAdmFacturaPago(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAdmFacturaPagoInput!
  ): CreateAdmFacturaPagoPayload

  """Creates a single `AdmFactura`."""
  createAdmFactura(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAdmFacturaInput!
  ): CreateAdmFacturaPayload

  """Creates a single `AdmGruposFamiliare`."""
  createAdmGruposFamiliare(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAdmGruposFamiliareInput!
  ): CreateAdmGruposFamiliarePayload

  """Creates a single `AdmProveedore`."""
  createAdmProveedore(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAdmProveedoreInput!
  ): CreateAdmProveedorePayload

  """Creates a single `Alerta`."""
  createAlerta(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAlertaInput!
  ): CreateAlertaPayload

  """Creates a single `Asignatura`."""
  createAsignatura(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAsignaturaInput!
  ): CreateAsignaturaPayload

  """Creates a single `AwsSesHistorial`."""
  createAwsSesHistorial(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateAwsSesHistorialInput!
  ): CreateAwsSesHistorialPayload

  """Creates a single `Calendario`."""
  createCalendario(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateCalendarioInput!
  ): CreateCalendarioPayload

  """Creates a single `CalendarioGrupo`."""
  createCalendarioGrupo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateCalendarioGrupoInput!
  ): CreateCalendarioGrupoPayload

  """Creates a single `CalendarioUser`."""
  createCalendarioUser(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateCalendarioUserInput!
  ): CreateCalendarioUserPayload

  """Creates a single `Calificacione`."""
  createCalificacione(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateCalificacioneInput!
  ): CreateCalificacionePayload

  """Creates a single `CalificacionesConcepto`."""
  createCalificacionesConcepto(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateCalificacionesConceptoInput!
  ): CreateCalificacionesConceptoPayload

  """Creates a single `CalificacionesConceptosAlumno`."""
  createCalificacionesConceptosAlumno(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateCalificacionesConceptosAlumnoInput!
  ): CreateCalificacionesConceptosAlumnoPayload

  """Creates a single `CalificacionesEscala`."""
  createCalificacionesEscala(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateCalificacionesEscalaInput!
  ): CreateCalificacionesEscalaPayload

  """Creates a single `CalificacionesEscalasValore`."""
  createCalificacionesEscalasValore(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateCalificacionesEscalasValoreInput!
  ): CreateCalificacionesEscalasValorePayload

  """Creates a single `Changelog`."""
  createChangelog(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateChangelogInput!
  ): CreateChangelogPayload

  """Creates a single `City`."""
  createCity(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateCityInput!
  ): CreateCityPayload

  """Creates a single `ClienteModule`."""
  createClienteModule(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateClienteModuleInput!
  ): CreateClienteModulePayload

  """Creates a single `Cliente`."""
  createCliente(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateClienteInput!
  ): CreateClientePayload

  """Creates a single `Dispositivo`."""
  createDispositivo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateDispositivoInput!
  ): CreateDispositivoPayload

  """Creates a single `Divisione`."""
  createDivisione(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateDivisioneInput!
  ): CreateDivisionePayload

  """Creates a single `Errorsapp`."""
  createErrorsapp(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateErrorsappInput!
  ): CreateErrorsappPayload

  """Creates a single `EspaciosCurriculare`."""
  createEspaciosCurriculare(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateEspaciosCurriculareInput!
  ): CreateEspaciosCurricularePayload

  """Creates a single `Evento`."""
  createEvento(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateEventoInput!
  ): CreateEventoPayload

  """Creates a single `FailedJob`."""
  createFailedJob(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateFailedJobInput!
  ): CreateFailedJobPayload

  """Creates a single `Foto`."""
  createFoto(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateFotoInput!
  ): CreateFotoPayload

  """Creates a single `Galeria`."""
  createGaleria(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateGaleriaInput!
  ): CreateGaleriaPayload

  """Creates a single `Grupo`."""
  createGrupo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateGrupoInput!
  ): CreateGrupoPayload

  """Creates a single `GruposArchivo`."""
  createGruposArchivo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateGruposArchivoInput!
  ): CreateGruposArchivoPayload

  """Creates a single `Hijo`."""
  createHijo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateHijoInput!
  ): CreateHijoPayload

  """Creates a single `HistorialNotificacione`."""
  createHistorialNotificacione(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateHistorialNotificacioneInput!
  ): CreateHistorialNotificacionePayload

  """Creates a single `Log`."""
  createLog(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateLogInput!
  ): CreateLogPayload

  """Creates a single `MensajeItem`."""
  createMensajeItem(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateMensajeItemInput!
  ): CreateMensajeItemPayload

  """Creates a single `Mensaje`."""
  createMensaje(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateMensajeInput!
  ): CreateMensajePayload

  """Creates a single `MensajesAdmin`."""
  createMensajesAdmin(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateMensajesAdminInput!
  ): CreateMensajesAdminPayload

  """Creates a single `MensajesArchivo`."""
  createMensajesArchivo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateMensajesArchivoInput!
  ): CreateMensajesArchivoPayload

  """Creates a single `MenuApp`."""
  createMenuApp(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateMenuAppInput!
  ): CreateMenuAppPayload

  """Creates a single `Migration`."""
  createMigration(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateMigrationInput!
  ): CreateMigrationPayload

  """Creates a single `Module`."""
  createModule(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateModuleInput!
  ): CreateModulePayload

  """Creates a single `ModulesBack`."""
  createModulesBack(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateModulesBackInput!
  ): CreateModulesBackPayload

  """Creates a single `MtCorregir`."""
  createMtCorregir(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateMtCorregirInput!
  ): CreateMtCorregirPayload

  """Creates a single `MultimediaMapping`."""
  createMultimediaMapping(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateMultimediaMappingInput!
  ): CreateMultimediaMappingPayload

  """Creates a single `Noticia`."""
  createNoticia(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateNoticiaInput!
  ): CreateNoticiaPayload

  """Creates a single `Opcione`."""
  createOpcione(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateOpcioneInput!
  ): CreateOpcionePayload

  """Creates a single `OpcionesDivision`."""
  createOpcionesDivision(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateOpcionesDivisionInput!
  ): CreateOpcionesDivisionPayload

  """Creates a single `PasswordReset`."""
  createPasswordReset(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreatePasswordResetInput!
  ): CreatePasswordResetPayload

  """Creates a single `Plantilla`."""
  createPlantilla(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreatePlantillaInput!
  ): CreatePlantillaPayload

  """Creates a single `Provincia`."""
  createProvincia(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateProvinciaInput!
  ): CreateProvinciaPayload

  """Creates a single `Setting`."""
  createSetting(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateSettingInput!
  ): CreateSettingPayload

  """Creates a single `TelescopeEntry`."""
  createTelescopeEntry(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTelescopeEntryInput!
  ): CreateTelescopeEntryPayload

  """Creates a single `TelescopeEntriesTag`."""
  createTelescopeEntriesTag(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTelescopeEntriesTagInput!
  ): CreateTelescopeEntriesTagPayload

  """Creates a single `TelescopeMonitoring`."""
  createTelescopeMonitoring(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTelescopeMonitoringInput!
  ): CreateTelescopeMonitoringPayload

  """Creates a single `Tip`."""
  createTip(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTipInput!
  ): CreateTipPayload

  """Creates a single `User`."""
  createUser(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateUserInput!
  ): CreateUserPayload

  """Creates a single `UsersConfiguracion`."""
  createUsersConfiguracion(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateUsersConfiguracionInput!
  ): CreateUsersConfiguracionPayload

  """Creates a single `UsersGrupo`."""
  createUsersGrupo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateUsersGrupoInput!
  ): CreateUsersGrupoPayload

  """Creates a single `UsersInactivo`."""
  createUsersInactivo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateUsersInactivoInput!
  ): CreateUsersInactivoPayload

  """Creates a single `UsersRole`."""
  createUsersRole(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateUsersRoleInput!
  ): CreateUsersRolePayload

  """Creates a single `Versione`."""
  createVersione(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateVersioneInput!
  ): CreateVersionePayload

  """Updates a single `Activity` using its globally unique id and a patch."""
  updateActivityByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateActivityByNodeIdInput!
  ): UpdateActivityPayload

  """Updates a single `Activity` using a unique key and a patch."""
  updateActivity(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateActivityInput!
  ): UpdateActivityPayload

  """
  Updates a single `ActividadesAlumno` using its globally unique id and a patch.
  """
  updateActividadesAlumnoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateActividadesAlumnoByNodeIdInput!
  ): UpdateActividadesAlumnoPayload

  """Updates a single `ActividadesAlumno` using a unique key and a patch."""
  updateActividadesAlumno(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateActividadesAlumnoInput!
  ): UpdateActividadesAlumnoPayload

  """
  Updates a single `ActividadesArchivo` using its globally unique id and a patch.
  """
  updateActividadesArchivoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateActividadesArchivoByNodeIdInput!
  ): UpdateActividadesArchivoPayload

  """Updates a single `ActividadesArchivo` using a unique key and a patch."""
  updateActividadesArchivo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateActividadesArchivoInput!
  ): UpdateActividadesArchivoPayload

  """
  Updates a single `ActividadesEntregas` using its globally unique id and a patch.
  """
  updateActividadesEntregasByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateActividadesEntregasByNodeIdInput!
  ): UpdateActividadesEntregasPayload

  """Updates a single `ActividadesEntregas` using a unique key and a patch."""
  updateActividadesEntregas(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateActividadesEntregasInput!
  ): UpdateActividadesEntregasPayload

  """
  Updates a single `ActividadesEntregasComentario` using its globally unique id and a patch.
  """
  updateActividadesEntregasComentarioByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateActividadesEntregasComentarioByNodeIdInput!
  ): UpdateActividadesEntregasComentarioPayload

  """
  Updates a single `ActividadesEntregasComentario` using a unique key and a patch.
  """
  updateActividadesEntregasComentario(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateActividadesEntregasComentarioInput!
  ): UpdateActividadesEntregasComentarioPayload

  """
  Updates a single `ActivityLog` using its globally unique id and a patch.
  """
  updateActivityLogByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateActivityLogByNodeIdInput!
  ): UpdateActivityLogPayload

  """Updates a single `ActivityLog` using a unique key and a patch."""
  updateActivityLog(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateActivityLogInput!
  ): UpdateActivityLogPayload

  """Updates a single `AdmAporte` using its globally unique id and a patch."""
  updateAdmAporteByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmAporteByNodeIdInput!
  ): UpdateAdmAportePayload

  """Updates a single `AdmAporte` using a unique key and a patch."""
  updateAdmAporte(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmAporteInput!
  ): UpdateAdmAportePayload

  """Updates a single `AdmBanco` using its globally unique id and a patch."""
  updateAdmBancoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmBancoByNodeIdInput!
  ): UpdateAdmBancoPayload

  """Updates a single `AdmBanco` using a unique key and a patch."""
  updateAdmBanco(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmBancoInput!
  ): UpdateAdmBancoPayload

  """
  Updates a single `AdmBancosCuenta` using its globally unique id and a patch.
  """
  updateAdmBancosCuentaByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmBancosCuentaByNodeIdInput!
  ): UpdateAdmBancosCuentaPayload

  """Updates a single `AdmBancosCuenta` using a unique key and a patch."""
  updateAdmBancosCuenta(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmBancosCuentaInput!
  ): UpdateAdmBancosCuentaPayload

  """Updates a single `AdmCaja` using its globally unique id and a patch."""
  updateAdmCajaByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmCajaByNodeIdInput!
  ): UpdateAdmCajaPayload

  """Updates a single `AdmCaja` using a unique key and a patch."""
  updateAdmCaja(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmCajaInput!
  ): UpdateAdmCajaPayload

  """
  Updates a single `AdmCegreso` using its globally unique id and a patch.
  """
  updateAdmCegresoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmCegresoByNodeIdInput!
  ): UpdateAdmCegresoPayload

  """Updates a single `AdmCegreso` using a unique key and a patch."""
  updateAdmCegreso(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmCegresoInput!
  ): UpdateAdmCegresoPayload

  """
  Updates a single `AdmCingreso` using its globally unique id and a patch.
  """
  updateAdmCingresoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmCingresoByNodeIdInput!
  ): UpdateAdmCingresoPayload

  """Updates a single `AdmCingreso` using a unique key and a patch."""
  updateAdmCingreso(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmCingresoInput!
  ): UpdateAdmCingresoPayload

  """
  Updates a single `AdmCingresosValore` using its globally unique id and a patch.
  """
  updateAdmCingresosValoreByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmCingresosValoreByNodeIdInput!
  ): UpdateAdmCingresosValorePayload

  """Updates a single `AdmCingresosValore` using a unique key and a patch."""
  updateAdmCingresosValore(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmCingresosValoreInput!
  ): UpdateAdmCingresosValorePayload

  """Updates a single `AdmCuenta` using its globally unique id and a patch."""
  updateAdmCuentaByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmCuentaByNodeIdInput!
  ): UpdateAdmCuentaPayload

  """Updates a single `AdmCuenta` using a unique key and a patch."""
  updateAdmCuenta(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmCuentaInput!
  ): UpdateAdmCuentaPayload

  """
  Updates a single `AdmDescuento` using its globally unique id and a patch.
  """
  updateAdmDescuentoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmDescuentoByNodeIdInput!
  ): UpdateAdmDescuentoPayload

  """Updates a single `AdmDescuento` using a unique key and a patch."""
  updateAdmDescuento(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmDescuentoInput!
  ): UpdateAdmDescuentoPayload

  """
  Updates a single `AdmDescuentosGrupo` using its globally unique id and a patch.
  """
  updateAdmDescuentosGrupoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmDescuentosGrupoByNodeIdInput!
  ): UpdateAdmDescuentosGrupoPayload

  """Updates a single `AdmDescuentosGrupo` using a unique key and a patch."""
  updateAdmDescuentosGrupo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmDescuentosGrupoInput!
  ): UpdateAdmDescuentosGrupoPayload

  """
  Updates a single `AdmDescuentosGruposFamiliare` using its globally unique id and a patch.
  """
  updateAdmDescuentosGruposFamiliareByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmDescuentosGruposFamiliareByNodeIdInput!
  ): UpdateAdmDescuentosGruposFamiliarePayload

  """
  Updates a single `AdmDescuentosGruposFamiliare` using a unique key and a patch.
  """
  updateAdmDescuentosGruposFamiliare(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmDescuentosGruposFamiliareInput!
  ): UpdateAdmDescuentosGruposFamiliarePayload

  """
  Updates a single `AdmEgresoItem` using its globally unique id and a patch.
  """
  updateAdmEgresoItemByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmEgresoItemByNodeIdInput!
  ): UpdateAdmEgresoItemPayload

  """Updates a single `AdmEgresoItem` using a unique key and a patch."""
  updateAdmEgresoItem(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmEgresoItemInput!
  ): UpdateAdmEgresoItemPayload

  """Updates a single `AdmEgreso` using its globally unique id and a patch."""
  updateAdmEgresoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmEgresoByNodeIdInput!
  ): UpdateAdmEgresoPayload

  """Updates a single `AdmEgreso` using a unique key and a patch."""
  updateAdmEgreso(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmEgresoInput!
  ): UpdateAdmEgresoPayload

  """
  Updates a single `AdmFacturaItem` using its globally unique id and a patch.
  """
  updateAdmFacturaItemByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmFacturaItemByNodeIdInput!
  ): UpdateAdmFacturaItemPayload

  """Updates a single `AdmFacturaItem` using a unique key and a patch."""
  updateAdmFacturaItem(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmFacturaItemInput!
  ): UpdateAdmFacturaItemPayload

  """
  Updates a single `AdmFacturaPago` using its globally unique id and a patch.
  """
  updateAdmFacturaPagoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmFacturaPagoByNodeIdInput!
  ): UpdateAdmFacturaPagoPayload

  """Updates a single `AdmFacturaPago` using a unique key and a patch."""
  updateAdmFacturaPago(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmFacturaPagoInput!
  ): UpdateAdmFacturaPagoPayload

  """
  Updates a single `AdmFactura` using its globally unique id and a patch.
  """
  updateAdmFacturaByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmFacturaByNodeIdInput!
  ): UpdateAdmFacturaPayload

  """Updates a single `AdmFactura` using a unique key and a patch."""
  updateAdmFactura(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmFacturaInput!
  ): UpdateAdmFacturaPayload

  """
  Updates a single `AdmGruposFamiliare` using its globally unique id and a patch.
  """
  updateAdmGruposFamiliareByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmGruposFamiliareByNodeIdInput!
  ): UpdateAdmGruposFamiliarePayload

  """Updates a single `AdmGruposFamiliare` using a unique key and a patch."""
  updateAdmGruposFamiliare(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmGruposFamiliareInput!
  ): UpdateAdmGruposFamiliarePayload

  """
  Updates a single `AdmProveedore` using its globally unique id and a patch.
  """
  updateAdmProveedoreByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmProveedoreByNodeIdInput!
  ): UpdateAdmProveedorePayload

  """Updates a single `AdmProveedore` using a unique key and a patch."""
  updateAdmProveedore(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAdmProveedoreInput!
  ): UpdateAdmProveedorePayload

  """Updates a single `Alerta` using its globally unique id and a patch."""
  updateAlertaByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAlertaByNodeIdInput!
  ): UpdateAlertaPayload

  """Updates a single `Alerta` using a unique key and a patch."""
  updateAlerta(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAlertaInput!
  ): UpdateAlertaPayload

  """
  Updates a single `Asignatura` using its globally unique id and a patch.
  """
  updateAsignaturaByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAsignaturaByNodeIdInput!
  ): UpdateAsignaturaPayload

  """Updates a single `Asignatura` using a unique key and a patch."""
  updateAsignatura(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAsignaturaInput!
  ): UpdateAsignaturaPayload

  """
  Updates a single `AwsSesHistorial` using its globally unique id and a patch.
  """
  updateAwsSesHistorialByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAwsSesHistorialByNodeIdInput!
  ): UpdateAwsSesHistorialPayload

  """Updates a single `AwsSesHistorial` using a unique key and a patch."""
  updateAwsSesHistorial(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateAwsSesHistorialInput!
  ): UpdateAwsSesHistorialPayload

  """
  Updates a single `Calendario` using its globally unique id and a patch.
  """
  updateCalendarioByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateCalendarioByNodeIdInput!
  ): UpdateCalendarioPayload

  """Updates a single `Calendario` using a unique key and a patch."""
  updateCalendario(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateCalendarioInput!
  ): UpdateCalendarioPayload

  """
  Updates a single `CalendarioGrupo` using its globally unique id and a patch.
  """
  updateCalendarioGrupoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateCalendarioGrupoByNodeIdInput!
  ): UpdateCalendarioGrupoPayload

  """Updates a single `CalendarioGrupo` using a unique key and a patch."""
  updateCalendarioGrupo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateCalendarioGrupoInput!
  ): UpdateCalendarioGrupoPayload

  """
  Updates a single `CalendarioUser` using its globally unique id and a patch.
  """
  updateCalendarioUserByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateCalendarioUserByNodeIdInput!
  ): UpdateCalendarioUserPayload

  """Updates a single `CalendarioUser` using a unique key and a patch."""
  updateCalendarioUser(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateCalendarioUserInput!
  ): UpdateCalendarioUserPayload

  """
  Updates a single `Calificacione` using its globally unique id and a patch.
  """
  updateCalificacioneByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateCalificacioneByNodeIdInput!
  ): UpdateCalificacionePayload

  """Updates a single `Calificacione` using a unique key and a patch."""
  updateCalificacione(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateCalificacioneInput!
  ): UpdateCalificacionePayload

  """
  Updates a single `CalificacionesConcepto` using its globally unique id and a patch.
  """
  updateCalificacionesConceptoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateCalificacionesConceptoByNodeIdInput!
  ): UpdateCalificacionesConceptoPayload

  """
  Updates a single `CalificacionesConcepto` using a unique key and a patch.
  """
  updateCalificacionesConcepto(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateCalificacionesConceptoInput!
  ): UpdateCalificacionesConceptoPayload

  """
  Updates a single `CalificacionesConceptosAlumno` using its globally unique id and a patch.
  """
  updateCalificacionesConceptosAlumnoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateCalificacionesConceptosAlumnoByNodeIdInput!
  ): UpdateCalificacionesConceptosAlumnoPayload

  """
  Updates a single `CalificacionesConceptosAlumno` using a unique key and a patch.
  """
  updateCalificacionesConceptosAlumno(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateCalificacionesConceptosAlumnoInput!
  ): UpdateCalificacionesConceptosAlumnoPayload

  """
  Updates a single `CalificacionesEscala` using its globally unique id and a patch.
  """
  updateCalificacionesEscalaByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateCalificacionesEscalaByNodeIdInput!
  ): UpdateCalificacionesEscalaPayload

  """
  Updates a single `CalificacionesEscala` using a unique key and a patch.
  """
  updateCalificacionesEscala(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateCalificacionesEscalaInput!
  ): UpdateCalificacionesEscalaPayload

  """
  Updates a single `CalificacionesEscalasValore` using its globally unique id and a patch.
  """
  updateCalificacionesEscalasValoreByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateCalificacionesEscalasValoreByNodeIdInput!
  ): UpdateCalificacionesEscalasValorePayload

  """
  Updates a single `CalificacionesEscalasValore` using a unique key and a patch.
  """
  updateCalificacionesEscalasValore(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateCalificacionesEscalasValoreInput!
  ): UpdateCalificacionesEscalasValorePayload

  """Updates a single `Changelog` using its globally unique id and a patch."""
  updateChangelogByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateChangelogByNodeIdInput!
  ): UpdateChangelogPayload

  """Updates a single `Changelog` using a unique key and a patch."""
  updateChangelog(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateChangelogInput!
  ): UpdateChangelogPayload

  """Updates a single `City` using its globally unique id and a patch."""
  updateCityByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateCityByNodeIdInput!
  ): UpdateCityPayload

  """Updates a single `City` using a unique key and a patch."""
  updateCity(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateCityInput!
  ): UpdateCityPayload

  """
  Updates a single `ClienteModule` using its globally unique id and a patch.
  """
  updateClienteModuleByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateClienteModuleByNodeIdInput!
  ): UpdateClienteModulePayload

  """Updates a single `ClienteModule` using a unique key and a patch."""
  updateClienteModule(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateClienteModuleInput!
  ): UpdateClienteModulePayload

  """Updates a single `Cliente` using its globally unique id and a patch."""
  updateClienteByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateClienteByNodeIdInput!
  ): UpdateClientePayload

  """Updates a single `Cliente` using a unique key and a patch."""
  updateCliente(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateClienteInput!
  ): UpdateClientePayload

  """
  Updates a single `Dispositivo` using its globally unique id and a patch.
  """
  updateDispositivoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateDispositivoByNodeIdInput!
  ): UpdateDispositivoPayload

  """Updates a single `Dispositivo` using a unique key and a patch."""
  updateDispositivo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateDispositivoInput!
  ): UpdateDispositivoPayload

  """Updates a single `Divisione` using its globally unique id and a patch."""
  updateDivisioneByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateDivisioneByNodeIdInput!
  ): UpdateDivisionePayload

  """Updates a single `Divisione` using a unique key and a patch."""
  updateDivisione(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateDivisioneInput!
  ): UpdateDivisionePayload

  """Updates a single `Errorsapp` using its globally unique id and a patch."""
  updateErrorsappByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateErrorsappByNodeIdInput!
  ): UpdateErrorsappPayload

  """Updates a single `Errorsapp` using a unique key and a patch."""
  updateErrorsapp(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateErrorsappInput!
  ): UpdateErrorsappPayload

  """
  Updates a single `EspaciosCurriculare` using its globally unique id and a patch.
  """
  updateEspaciosCurriculareByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateEspaciosCurriculareByNodeIdInput!
  ): UpdateEspaciosCurricularePayload

  """Updates a single `EspaciosCurriculare` using a unique key and a patch."""
  updateEspaciosCurriculare(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateEspaciosCurriculareInput!
  ): UpdateEspaciosCurricularePayload

  """Updates a single `Evento` using its globally unique id and a patch."""
  updateEventoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateEventoByNodeIdInput!
  ): UpdateEventoPayload

  """Updates a single `Evento` using a unique key and a patch."""
  updateEvento(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateEventoInput!
  ): UpdateEventoPayload

  """Updates a single `FailedJob` using its globally unique id and a patch."""
  updateFailedJobByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateFailedJobByNodeIdInput!
  ): UpdateFailedJobPayload

  """Updates a single `FailedJob` using a unique key and a patch."""
  updateFailedJob(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateFailedJobInput!
  ): UpdateFailedJobPayload

  """Updates a single `Foto` using its globally unique id and a patch."""
  updateFotoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateFotoByNodeIdInput!
  ): UpdateFotoPayload

  """Updates a single `Foto` using a unique key and a patch."""
  updateFoto(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateFotoInput!
  ): UpdateFotoPayload

  """Updates a single `Galeria` using its globally unique id and a patch."""
  updateGaleriaByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGaleriaByNodeIdInput!
  ): UpdateGaleriaPayload

  """Updates a single `Galeria` using a unique key and a patch."""
  updateGaleria(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGaleriaInput!
  ): UpdateGaleriaPayload

  """Updates a single `Grupo` using its globally unique id and a patch."""
  updateGrupoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGrupoByNodeIdInput!
  ): UpdateGrupoPayload

  """Updates a single `Grupo` using a unique key and a patch."""
  updateGrupo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGrupoInput!
  ): UpdateGrupoPayload

  """
  Updates a single `GruposArchivo` using its globally unique id and a patch.
  """
  updateGruposArchivoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGruposArchivoByNodeIdInput!
  ): UpdateGruposArchivoPayload

  """Updates a single `GruposArchivo` using a unique key and a patch."""
  updateGruposArchivo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateGruposArchivoInput!
  ): UpdateGruposArchivoPayload

  """Updates a single `Hijo` using its globally unique id and a patch."""
  updateHijoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateHijoByNodeIdInput!
  ): UpdateHijoPayload

  """Updates a single `Hijo` using a unique key and a patch."""
  updateHijo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateHijoInput!
  ): UpdateHijoPayload

  """
  Updates a single `HistorialNotificacione` using its globally unique id and a patch.
  """
  updateHistorialNotificacioneByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateHistorialNotificacioneByNodeIdInput!
  ): UpdateHistorialNotificacionePayload

  """
  Updates a single `HistorialNotificacione` using a unique key and a patch.
  """
  updateHistorialNotificacione(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateHistorialNotificacioneInput!
  ): UpdateHistorialNotificacionePayload

  """Updates a single `Log` using its globally unique id and a patch."""
  updateLogByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateLogByNodeIdInput!
  ): UpdateLogPayload

  """Updates a single `Log` using a unique key and a patch."""
  updateLog(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateLogInput!
  ): UpdateLogPayload

  """
  Updates a single `MensajeItem` using its globally unique id and a patch.
  """
  updateMensajeItemByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMensajeItemByNodeIdInput!
  ): UpdateMensajeItemPayload

  """Updates a single `MensajeItem` using a unique key and a patch."""
  updateMensajeItem(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMensajeItemInput!
  ): UpdateMensajeItemPayload

  """Updates a single `Mensaje` using its globally unique id and a patch."""
  updateMensajeByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMensajeByNodeIdInput!
  ): UpdateMensajePayload

  """Updates a single `Mensaje` using a unique key and a patch."""
  updateMensaje(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMensajeInput!
  ): UpdateMensajePayload

  """
  Updates a single `MensajesAdmin` using its globally unique id and a patch.
  """
  updateMensajesAdminByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMensajesAdminByNodeIdInput!
  ): UpdateMensajesAdminPayload

  """Updates a single `MensajesAdmin` using a unique key and a patch."""
  updateMensajesAdmin(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMensajesAdminInput!
  ): UpdateMensajesAdminPayload

  """
  Updates a single `MensajesArchivo` using its globally unique id and a patch.
  """
  updateMensajesArchivoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMensajesArchivoByNodeIdInput!
  ): UpdateMensajesArchivoPayload

  """Updates a single `MensajesArchivo` using a unique key and a patch."""
  updateMensajesArchivo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMensajesArchivoInput!
  ): UpdateMensajesArchivoPayload

  """Updates a single `MenuApp` using its globally unique id and a patch."""
  updateMenuAppByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMenuAppByNodeIdInput!
  ): UpdateMenuAppPayload

  """Updates a single `MenuApp` using a unique key and a patch."""
  updateMenuApp(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMenuAppInput!
  ): UpdateMenuAppPayload

  """Updates a single `Migration` using its globally unique id and a patch."""
  updateMigrationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMigrationByNodeIdInput!
  ): UpdateMigrationPayload

  """Updates a single `Migration` using a unique key and a patch."""
  updateMigration(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMigrationInput!
  ): UpdateMigrationPayload

  """Updates a single `Module` using its globally unique id and a patch."""
  updateModuleByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateModuleByNodeIdInput!
  ): UpdateModulePayload

  """Updates a single `Module` using a unique key and a patch."""
  updateModule(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateModuleInput!
  ): UpdateModulePayload

  """
  Updates a single `ModulesBack` using its globally unique id and a patch.
  """
  updateModulesBackByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateModulesBackByNodeIdInput!
  ): UpdateModulesBackPayload

  """Updates a single `ModulesBack` using a unique key and a patch."""
  updateModulesBack(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateModulesBackInput!
  ): UpdateModulesBackPayload

  """
  Updates a single `MtCorregir` using its globally unique id and a patch.
  """
  updateMtCorregirByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMtCorregirByNodeIdInput!
  ): UpdateMtCorregirPayload

  """Updates a single `MtCorregir` using a unique key and a patch."""
  updateMtCorregir(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMtCorregirInput!
  ): UpdateMtCorregirPayload

  """
  Updates a single `MultimediaMapping` using its globally unique id and a patch.
  """
  updateMultimediaMappingByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMultimediaMappingByNodeIdInput!
  ): UpdateMultimediaMappingPayload

  """Updates a single `MultimediaMapping` using a unique key and a patch."""
  updateMultimediaMapping(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateMultimediaMappingInput!
  ): UpdateMultimediaMappingPayload

  """Updates a single `Noticia` using its globally unique id and a patch."""
  updateNoticiaByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateNoticiaByNodeIdInput!
  ): UpdateNoticiaPayload

  """Updates a single `Noticia` using a unique key and a patch."""
  updateNoticia(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateNoticiaInput!
  ): UpdateNoticiaPayload

  """Updates a single `Opcione` using its globally unique id and a patch."""
  updateOpcioneByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateOpcioneByNodeIdInput!
  ): UpdateOpcionePayload

  """Updates a single `Opcione` using a unique key and a patch."""
  updateOpcione(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateOpcioneInput!
  ): UpdateOpcionePayload

  """
  Updates a single `OpcionesDivision` using its globally unique id and a patch.
  """
  updateOpcionesDivisionByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateOpcionesDivisionByNodeIdInput!
  ): UpdateOpcionesDivisionPayload

  """Updates a single `OpcionesDivision` using a unique key and a patch."""
  updateOpcionesDivision(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateOpcionesDivisionInput!
  ): UpdateOpcionesDivisionPayload

  """Updates a single `Plantilla` using its globally unique id and a patch."""
  updatePlantillaByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdatePlantillaByNodeIdInput!
  ): UpdatePlantillaPayload

  """Updates a single `Plantilla` using a unique key and a patch."""
  updatePlantilla(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdatePlantillaInput!
  ): UpdatePlantillaPayload

  """Updates a single `Provincia` using its globally unique id and a patch."""
  updateProvinciaByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateProvinciaByNodeIdInput!
  ): UpdateProvinciaPayload

  """Updates a single `Provincia` using a unique key and a patch."""
  updateProvincia(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateProvinciaInput!
  ): UpdateProvinciaPayload

  """Updates a single `Setting` using its globally unique id and a patch."""
  updateSettingByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSettingByNodeIdInput!
  ): UpdateSettingPayload

  """Updates a single `Setting` using a unique key and a patch."""
  updateSetting(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateSettingInput!
  ): UpdateSettingPayload

  """
  Updates a single `TelescopeEntry` using its globally unique id and a patch.
  """
  updateTelescopeEntryByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTelescopeEntryByNodeIdInput!
  ): UpdateTelescopeEntryPayload

  """Updates a single `TelescopeEntry` using a unique key and a patch."""
  updateTelescopeEntry(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTelescopeEntryInput!
  ): UpdateTelescopeEntryPayload

  """Updates a single `Tip` using its globally unique id and a patch."""
  updateTipByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTipByNodeIdInput!
  ): UpdateTipPayload

  """Updates a single `Tip` using a unique key and a patch."""
  updateTip(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTipInput!
  ): UpdateTipPayload

  """Updates a single `User` using its globally unique id and a patch."""
  updateUserByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateUserByNodeIdInput!
  ): UpdateUserPayload

  """Updates a single `User` using a unique key and a patch."""
  updateUser(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateUserInput!
  ): UpdateUserPayload

  """
  Updates a single `UsersConfiguracion` using its globally unique id and a patch.
  """
  updateUsersConfiguracionByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateUsersConfiguracionByNodeIdInput!
  ): UpdateUsersConfiguracionPayload

  """Updates a single `UsersConfiguracion` using a unique key and a patch."""
  updateUsersConfiguracion(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateUsersConfiguracionInput!
  ): UpdateUsersConfiguracionPayload

  """
  Updates a single `UsersGrupo` using its globally unique id and a patch.
  """
  updateUsersGrupoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateUsersGrupoByNodeIdInput!
  ): UpdateUsersGrupoPayload

  """Updates a single `UsersGrupo` using a unique key and a patch."""
  updateUsersGrupo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateUsersGrupoInput!
  ): UpdateUsersGrupoPayload

  """
  Updates a single `UsersInactivo` using its globally unique id and a patch.
  """
  updateUsersInactivoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateUsersInactivoByNodeIdInput!
  ): UpdateUsersInactivoPayload

  """Updates a single `UsersInactivo` using a unique key and a patch."""
  updateUsersInactivo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateUsersInactivoInput!
  ): UpdateUsersInactivoPayload

  """Updates a single `UsersRole` using its globally unique id and a patch."""
  updateUsersRoleByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateUsersRoleByNodeIdInput!
  ): UpdateUsersRolePayload

  """Updates a single `UsersRole` using a unique key and a patch."""
  updateUsersRole(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateUsersRoleInput!
  ): UpdateUsersRolePayload

  """Updates a single `Versione` using its globally unique id and a patch."""
  updateVersioneByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateVersioneByNodeIdInput!
  ): UpdateVersionePayload

  """Updates a single `Versione` using a unique key and a patch."""
  updateVersione(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateVersioneInput!
  ): UpdateVersionePayload

  """Deletes a single `Activity` using its globally unique id."""
  deleteActivityByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteActivityByNodeIdInput!
  ): DeleteActivityPayload

  """Deletes a single `Activity` using a unique key."""
  deleteActivity(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteActivityInput!
  ): DeleteActivityPayload

  """Deletes a single `ActividadesAlumno` using its globally unique id."""
  deleteActividadesAlumnoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteActividadesAlumnoByNodeIdInput!
  ): DeleteActividadesAlumnoPayload

  """Deletes a single `ActividadesAlumno` using a unique key."""
  deleteActividadesAlumno(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteActividadesAlumnoInput!
  ): DeleteActividadesAlumnoPayload

  """Deletes a single `ActividadesArchivo` using its globally unique id."""
  deleteActividadesArchivoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteActividadesArchivoByNodeIdInput!
  ): DeleteActividadesArchivoPayload

  """Deletes a single `ActividadesArchivo` using a unique key."""
  deleteActividadesArchivo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteActividadesArchivoInput!
  ): DeleteActividadesArchivoPayload

  """Deletes a single `ActividadesEntregas` using its globally unique id."""
  deleteActividadesEntregasByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteActividadesEntregasByNodeIdInput!
  ): DeleteActividadesEntregasPayload

  """Deletes a single `ActividadesEntregas` using a unique key."""
  deleteActividadesEntregas(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteActividadesEntregasInput!
  ): DeleteActividadesEntregasPayload

  """
  Deletes a single `ActividadesEntregasComentario` using its globally unique id.
  """
  deleteActividadesEntregasComentarioByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteActividadesEntregasComentarioByNodeIdInput!
  ): DeleteActividadesEntregasComentarioPayload

  """Deletes a single `ActividadesEntregasComentario` using a unique key."""
  deleteActividadesEntregasComentario(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteActividadesEntregasComentarioInput!
  ): DeleteActividadesEntregasComentarioPayload

  """Deletes a single `ActivityLog` using its globally unique id."""
  deleteActivityLogByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteActivityLogByNodeIdInput!
  ): DeleteActivityLogPayload

  """Deletes a single `ActivityLog` using a unique key."""
  deleteActivityLog(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteActivityLogInput!
  ): DeleteActivityLogPayload

  """Deletes a single `AdmAporte` using its globally unique id."""
  deleteAdmAporteByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmAporteByNodeIdInput!
  ): DeleteAdmAportePayload

  """Deletes a single `AdmAporte` using a unique key."""
  deleteAdmAporte(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmAporteInput!
  ): DeleteAdmAportePayload

  """Deletes a single `AdmBanco` using its globally unique id."""
  deleteAdmBancoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmBancoByNodeIdInput!
  ): DeleteAdmBancoPayload

  """Deletes a single `AdmBanco` using a unique key."""
  deleteAdmBanco(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmBancoInput!
  ): DeleteAdmBancoPayload

  """Deletes a single `AdmBancosCuenta` using its globally unique id."""
  deleteAdmBancosCuentaByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmBancosCuentaByNodeIdInput!
  ): DeleteAdmBancosCuentaPayload

  """Deletes a single `AdmBancosCuenta` using a unique key."""
  deleteAdmBancosCuenta(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmBancosCuentaInput!
  ): DeleteAdmBancosCuentaPayload

  """Deletes a single `AdmCaja` using its globally unique id."""
  deleteAdmCajaByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmCajaByNodeIdInput!
  ): DeleteAdmCajaPayload

  """Deletes a single `AdmCaja` using a unique key."""
  deleteAdmCaja(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmCajaInput!
  ): DeleteAdmCajaPayload

  """Deletes a single `AdmCegreso` using its globally unique id."""
  deleteAdmCegresoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmCegresoByNodeIdInput!
  ): DeleteAdmCegresoPayload

  """Deletes a single `AdmCegreso` using a unique key."""
  deleteAdmCegreso(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmCegresoInput!
  ): DeleteAdmCegresoPayload

  """Deletes a single `AdmCingreso` using its globally unique id."""
  deleteAdmCingresoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmCingresoByNodeIdInput!
  ): DeleteAdmCingresoPayload

  """Deletes a single `AdmCingreso` using a unique key."""
  deleteAdmCingreso(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmCingresoInput!
  ): DeleteAdmCingresoPayload

  """Deletes a single `AdmCingresosValore` using its globally unique id."""
  deleteAdmCingresosValoreByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmCingresosValoreByNodeIdInput!
  ): DeleteAdmCingresosValorePayload

  """Deletes a single `AdmCingresosValore` using a unique key."""
  deleteAdmCingresosValore(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmCingresosValoreInput!
  ): DeleteAdmCingresosValorePayload

  """Deletes a single `AdmCuenta` using its globally unique id."""
  deleteAdmCuentaByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmCuentaByNodeIdInput!
  ): DeleteAdmCuentaPayload

  """Deletes a single `AdmCuenta` using a unique key."""
  deleteAdmCuenta(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmCuentaInput!
  ): DeleteAdmCuentaPayload

  """Deletes a single `AdmDescuento` using its globally unique id."""
  deleteAdmDescuentoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmDescuentoByNodeIdInput!
  ): DeleteAdmDescuentoPayload

  """Deletes a single `AdmDescuento` using a unique key."""
  deleteAdmDescuento(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmDescuentoInput!
  ): DeleteAdmDescuentoPayload

  """Deletes a single `AdmDescuentosGrupo` using its globally unique id."""
  deleteAdmDescuentosGrupoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmDescuentosGrupoByNodeIdInput!
  ): DeleteAdmDescuentosGrupoPayload

  """Deletes a single `AdmDescuentosGrupo` using a unique key."""
  deleteAdmDescuentosGrupo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmDescuentosGrupoInput!
  ): DeleteAdmDescuentosGrupoPayload

  """
  Deletes a single `AdmDescuentosGruposFamiliare` using its globally unique id.
  """
  deleteAdmDescuentosGruposFamiliareByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmDescuentosGruposFamiliareByNodeIdInput!
  ): DeleteAdmDescuentosGruposFamiliarePayload

  """Deletes a single `AdmDescuentosGruposFamiliare` using a unique key."""
  deleteAdmDescuentosGruposFamiliare(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmDescuentosGruposFamiliareInput!
  ): DeleteAdmDescuentosGruposFamiliarePayload

  """Deletes a single `AdmEgresoItem` using its globally unique id."""
  deleteAdmEgresoItemByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmEgresoItemByNodeIdInput!
  ): DeleteAdmEgresoItemPayload

  """Deletes a single `AdmEgresoItem` using a unique key."""
  deleteAdmEgresoItem(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmEgresoItemInput!
  ): DeleteAdmEgresoItemPayload

  """Deletes a single `AdmEgreso` using its globally unique id."""
  deleteAdmEgresoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmEgresoByNodeIdInput!
  ): DeleteAdmEgresoPayload

  """Deletes a single `AdmEgreso` using a unique key."""
  deleteAdmEgreso(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmEgresoInput!
  ): DeleteAdmEgresoPayload

  """Deletes a single `AdmFacturaItem` using its globally unique id."""
  deleteAdmFacturaItemByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmFacturaItemByNodeIdInput!
  ): DeleteAdmFacturaItemPayload

  """Deletes a single `AdmFacturaItem` using a unique key."""
  deleteAdmFacturaItem(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmFacturaItemInput!
  ): DeleteAdmFacturaItemPayload

  """Deletes a single `AdmFacturaPago` using its globally unique id."""
  deleteAdmFacturaPagoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmFacturaPagoByNodeIdInput!
  ): DeleteAdmFacturaPagoPayload

  """Deletes a single `AdmFacturaPago` using a unique key."""
  deleteAdmFacturaPago(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmFacturaPagoInput!
  ): DeleteAdmFacturaPagoPayload

  """Deletes a single `AdmFactura` using its globally unique id."""
  deleteAdmFacturaByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmFacturaByNodeIdInput!
  ): DeleteAdmFacturaPayload

  """Deletes a single `AdmFactura` using a unique key."""
  deleteAdmFactura(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmFacturaInput!
  ): DeleteAdmFacturaPayload

  """Deletes a single `AdmGruposFamiliare` using its globally unique id."""
  deleteAdmGruposFamiliareByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmGruposFamiliareByNodeIdInput!
  ): DeleteAdmGruposFamiliarePayload

  """Deletes a single `AdmGruposFamiliare` using a unique key."""
  deleteAdmGruposFamiliare(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmGruposFamiliareInput!
  ): DeleteAdmGruposFamiliarePayload

  """Deletes a single `AdmProveedore` using its globally unique id."""
  deleteAdmProveedoreByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmProveedoreByNodeIdInput!
  ): DeleteAdmProveedorePayload

  """Deletes a single `AdmProveedore` using a unique key."""
  deleteAdmProveedore(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAdmProveedoreInput!
  ): DeleteAdmProveedorePayload

  """Deletes a single `Alerta` using its globally unique id."""
  deleteAlertaByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAlertaByNodeIdInput!
  ): DeleteAlertaPayload

  """Deletes a single `Alerta` using a unique key."""
  deleteAlerta(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAlertaInput!
  ): DeleteAlertaPayload

  """Deletes a single `Asignatura` using its globally unique id."""
  deleteAsignaturaByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAsignaturaByNodeIdInput!
  ): DeleteAsignaturaPayload

  """Deletes a single `Asignatura` using a unique key."""
  deleteAsignatura(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAsignaturaInput!
  ): DeleteAsignaturaPayload

  """Deletes a single `AwsSesHistorial` using its globally unique id."""
  deleteAwsSesHistorialByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAwsSesHistorialByNodeIdInput!
  ): DeleteAwsSesHistorialPayload

  """Deletes a single `AwsSesHistorial` using a unique key."""
  deleteAwsSesHistorial(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteAwsSesHistorialInput!
  ): DeleteAwsSesHistorialPayload

  """Deletes a single `Calendario` using its globally unique id."""
  deleteCalendarioByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteCalendarioByNodeIdInput!
  ): DeleteCalendarioPayload

  """Deletes a single `Calendario` using a unique key."""
  deleteCalendario(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteCalendarioInput!
  ): DeleteCalendarioPayload

  """Deletes a single `CalendarioGrupo` using its globally unique id."""
  deleteCalendarioGrupoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteCalendarioGrupoByNodeIdInput!
  ): DeleteCalendarioGrupoPayload

  """Deletes a single `CalendarioGrupo` using a unique key."""
  deleteCalendarioGrupo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteCalendarioGrupoInput!
  ): DeleteCalendarioGrupoPayload

  """Deletes a single `CalendarioUser` using its globally unique id."""
  deleteCalendarioUserByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteCalendarioUserByNodeIdInput!
  ): DeleteCalendarioUserPayload

  """Deletes a single `CalendarioUser` using a unique key."""
  deleteCalendarioUser(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteCalendarioUserInput!
  ): DeleteCalendarioUserPayload

  """Deletes a single `Calificacione` using its globally unique id."""
  deleteCalificacioneByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteCalificacioneByNodeIdInput!
  ): DeleteCalificacionePayload

  """Deletes a single `Calificacione` using a unique key."""
  deleteCalificacione(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteCalificacioneInput!
  ): DeleteCalificacionePayload

  """
  Deletes a single `CalificacionesConcepto` using its globally unique id.
  """
  deleteCalificacionesConceptoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteCalificacionesConceptoByNodeIdInput!
  ): DeleteCalificacionesConceptoPayload

  """Deletes a single `CalificacionesConcepto` using a unique key."""
  deleteCalificacionesConcepto(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteCalificacionesConceptoInput!
  ): DeleteCalificacionesConceptoPayload

  """
  Deletes a single `CalificacionesConceptosAlumno` using its globally unique id.
  """
  deleteCalificacionesConceptosAlumnoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteCalificacionesConceptosAlumnoByNodeIdInput!
  ): DeleteCalificacionesConceptosAlumnoPayload

  """Deletes a single `CalificacionesConceptosAlumno` using a unique key."""
  deleteCalificacionesConceptosAlumno(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteCalificacionesConceptosAlumnoInput!
  ): DeleteCalificacionesConceptosAlumnoPayload

  """Deletes a single `CalificacionesEscala` using its globally unique id."""
  deleteCalificacionesEscalaByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteCalificacionesEscalaByNodeIdInput!
  ): DeleteCalificacionesEscalaPayload

  """Deletes a single `CalificacionesEscala` using a unique key."""
  deleteCalificacionesEscala(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteCalificacionesEscalaInput!
  ): DeleteCalificacionesEscalaPayload

  """
  Deletes a single `CalificacionesEscalasValore` using its globally unique id.
  """
  deleteCalificacionesEscalasValoreByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteCalificacionesEscalasValoreByNodeIdInput!
  ): DeleteCalificacionesEscalasValorePayload

  """Deletes a single `CalificacionesEscalasValore` using a unique key."""
  deleteCalificacionesEscalasValore(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteCalificacionesEscalasValoreInput!
  ): DeleteCalificacionesEscalasValorePayload

  """Deletes a single `Changelog` using its globally unique id."""
  deleteChangelogByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteChangelogByNodeIdInput!
  ): DeleteChangelogPayload

  """Deletes a single `Changelog` using a unique key."""
  deleteChangelog(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteChangelogInput!
  ): DeleteChangelogPayload

  """Deletes a single `City` using its globally unique id."""
  deleteCityByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteCityByNodeIdInput!
  ): DeleteCityPayload

  """Deletes a single `City` using a unique key."""
  deleteCity(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteCityInput!
  ): DeleteCityPayload

  """Deletes a single `ClienteModule` using its globally unique id."""
  deleteClienteModuleByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteClienteModuleByNodeIdInput!
  ): DeleteClienteModulePayload

  """Deletes a single `ClienteModule` using a unique key."""
  deleteClienteModule(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteClienteModuleInput!
  ): DeleteClienteModulePayload

  """Deletes a single `Cliente` using its globally unique id."""
  deleteClienteByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteClienteByNodeIdInput!
  ): DeleteClientePayload

  """Deletes a single `Cliente` using a unique key."""
  deleteCliente(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteClienteInput!
  ): DeleteClientePayload

  """Deletes a single `Dispositivo` using its globally unique id."""
  deleteDispositivoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteDispositivoByNodeIdInput!
  ): DeleteDispositivoPayload

  """Deletes a single `Dispositivo` using a unique key."""
  deleteDispositivo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteDispositivoInput!
  ): DeleteDispositivoPayload

  """Deletes a single `Divisione` using its globally unique id."""
  deleteDivisioneByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteDivisioneByNodeIdInput!
  ): DeleteDivisionePayload

  """Deletes a single `Divisione` using a unique key."""
  deleteDivisione(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteDivisioneInput!
  ): DeleteDivisionePayload

  """Deletes a single `Errorsapp` using its globally unique id."""
  deleteErrorsappByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteErrorsappByNodeIdInput!
  ): DeleteErrorsappPayload

  """Deletes a single `Errorsapp` using a unique key."""
  deleteErrorsapp(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteErrorsappInput!
  ): DeleteErrorsappPayload

  """Deletes a single `EspaciosCurriculare` using its globally unique id."""
  deleteEspaciosCurriculareByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteEspaciosCurriculareByNodeIdInput!
  ): DeleteEspaciosCurricularePayload

  """Deletes a single `EspaciosCurriculare` using a unique key."""
  deleteEspaciosCurriculare(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteEspaciosCurriculareInput!
  ): DeleteEspaciosCurricularePayload

  """Deletes a single `Evento` using its globally unique id."""
  deleteEventoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteEventoByNodeIdInput!
  ): DeleteEventoPayload

  """Deletes a single `Evento` using a unique key."""
  deleteEvento(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteEventoInput!
  ): DeleteEventoPayload

  """Deletes a single `FailedJob` using its globally unique id."""
  deleteFailedJobByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteFailedJobByNodeIdInput!
  ): DeleteFailedJobPayload

  """Deletes a single `FailedJob` using a unique key."""
  deleteFailedJob(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteFailedJobInput!
  ): DeleteFailedJobPayload

  """Deletes a single `Foto` using its globally unique id."""
  deleteFotoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteFotoByNodeIdInput!
  ): DeleteFotoPayload

  """Deletes a single `Foto` using a unique key."""
  deleteFoto(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteFotoInput!
  ): DeleteFotoPayload

  """Deletes a single `Galeria` using its globally unique id."""
  deleteGaleriaByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGaleriaByNodeIdInput!
  ): DeleteGaleriaPayload

  """Deletes a single `Galeria` using a unique key."""
  deleteGaleria(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGaleriaInput!
  ): DeleteGaleriaPayload

  """Deletes a single `Grupo` using its globally unique id."""
  deleteGrupoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGrupoByNodeIdInput!
  ): DeleteGrupoPayload

  """Deletes a single `Grupo` using a unique key."""
  deleteGrupo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGrupoInput!
  ): DeleteGrupoPayload

  """Deletes a single `GruposArchivo` using its globally unique id."""
  deleteGruposArchivoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGruposArchivoByNodeIdInput!
  ): DeleteGruposArchivoPayload

  """Deletes a single `GruposArchivo` using a unique key."""
  deleteGruposArchivo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteGruposArchivoInput!
  ): DeleteGruposArchivoPayload

  """Deletes a single `Hijo` using its globally unique id."""
  deleteHijoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteHijoByNodeIdInput!
  ): DeleteHijoPayload

  """Deletes a single `Hijo` using a unique key."""
  deleteHijo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteHijoInput!
  ): DeleteHijoPayload

  """
  Deletes a single `HistorialNotificacione` using its globally unique id.
  """
  deleteHistorialNotificacioneByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteHistorialNotificacioneByNodeIdInput!
  ): DeleteHistorialNotificacionePayload

  """Deletes a single `HistorialNotificacione` using a unique key."""
  deleteHistorialNotificacione(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteHistorialNotificacioneInput!
  ): DeleteHistorialNotificacionePayload

  """Deletes a single `Log` using its globally unique id."""
  deleteLogByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteLogByNodeIdInput!
  ): DeleteLogPayload

  """Deletes a single `Log` using a unique key."""
  deleteLog(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteLogInput!
  ): DeleteLogPayload

  """Deletes a single `MensajeItem` using its globally unique id."""
  deleteMensajeItemByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMensajeItemByNodeIdInput!
  ): DeleteMensajeItemPayload

  """Deletes a single `MensajeItem` using a unique key."""
  deleteMensajeItem(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMensajeItemInput!
  ): DeleteMensajeItemPayload

  """Deletes a single `Mensaje` using its globally unique id."""
  deleteMensajeByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMensajeByNodeIdInput!
  ): DeleteMensajePayload

  """Deletes a single `Mensaje` using a unique key."""
  deleteMensaje(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMensajeInput!
  ): DeleteMensajePayload

  """Deletes a single `MensajesAdmin` using its globally unique id."""
  deleteMensajesAdminByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMensajesAdminByNodeIdInput!
  ): DeleteMensajesAdminPayload

  """Deletes a single `MensajesAdmin` using a unique key."""
  deleteMensajesAdmin(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMensajesAdminInput!
  ): DeleteMensajesAdminPayload

  """Deletes a single `MensajesArchivo` using its globally unique id."""
  deleteMensajesArchivoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMensajesArchivoByNodeIdInput!
  ): DeleteMensajesArchivoPayload

  """Deletes a single `MensajesArchivo` using a unique key."""
  deleteMensajesArchivo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMensajesArchivoInput!
  ): DeleteMensajesArchivoPayload

  """Deletes a single `MenuApp` using its globally unique id."""
  deleteMenuAppByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMenuAppByNodeIdInput!
  ): DeleteMenuAppPayload

  """Deletes a single `MenuApp` using a unique key."""
  deleteMenuApp(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMenuAppInput!
  ): DeleteMenuAppPayload

  """Deletes a single `Migration` using its globally unique id."""
  deleteMigrationByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMigrationByNodeIdInput!
  ): DeleteMigrationPayload

  """Deletes a single `Migration` using a unique key."""
  deleteMigration(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMigrationInput!
  ): DeleteMigrationPayload

  """Deletes a single `Module` using its globally unique id."""
  deleteModuleByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteModuleByNodeIdInput!
  ): DeleteModulePayload

  """Deletes a single `Module` using a unique key."""
  deleteModule(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteModuleInput!
  ): DeleteModulePayload

  """Deletes a single `ModulesBack` using its globally unique id."""
  deleteModulesBackByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteModulesBackByNodeIdInput!
  ): DeleteModulesBackPayload

  """Deletes a single `ModulesBack` using a unique key."""
  deleteModulesBack(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteModulesBackInput!
  ): DeleteModulesBackPayload

  """Deletes a single `MtCorregir` using its globally unique id."""
  deleteMtCorregirByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMtCorregirByNodeIdInput!
  ): DeleteMtCorregirPayload

  """Deletes a single `MtCorregir` using a unique key."""
  deleteMtCorregir(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMtCorregirInput!
  ): DeleteMtCorregirPayload

  """Deletes a single `MultimediaMapping` using its globally unique id."""
  deleteMultimediaMappingByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMultimediaMappingByNodeIdInput!
  ): DeleteMultimediaMappingPayload

  """Deletes a single `MultimediaMapping` using a unique key."""
  deleteMultimediaMapping(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteMultimediaMappingInput!
  ): DeleteMultimediaMappingPayload

  """Deletes a single `Noticia` using its globally unique id."""
  deleteNoticiaByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteNoticiaByNodeIdInput!
  ): DeleteNoticiaPayload

  """Deletes a single `Noticia` using a unique key."""
  deleteNoticia(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteNoticiaInput!
  ): DeleteNoticiaPayload

  """Deletes a single `Opcione` using its globally unique id."""
  deleteOpcioneByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteOpcioneByNodeIdInput!
  ): DeleteOpcionePayload

  """Deletes a single `Opcione` using a unique key."""
  deleteOpcione(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteOpcioneInput!
  ): DeleteOpcionePayload

  """Deletes a single `OpcionesDivision` using its globally unique id."""
  deleteOpcionesDivisionByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteOpcionesDivisionByNodeIdInput!
  ): DeleteOpcionesDivisionPayload

  """Deletes a single `OpcionesDivision` using a unique key."""
  deleteOpcionesDivision(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteOpcionesDivisionInput!
  ): DeleteOpcionesDivisionPayload

  """Deletes a single `Plantilla` using its globally unique id."""
  deletePlantillaByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeletePlantillaByNodeIdInput!
  ): DeletePlantillaPayload

  """Deletes a single `Plantilla` using a unique key."""
  deletePlantilla(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeletePlantillaInput!
  ): DeletePlantillaPayload

  """Deletes a single `Provincia` using its globally unique id."""
  deleteProvinciaByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteProvinciaByNodeIdInput!
  ): DeleteProvinciaPayload

  """Deletes a single `Provincia` using a unique key."""
  deleteProvincia(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteProvinciaInput!
  ): DeleteProvinciaPayload

  """Deletes a single `Setting` using its globally unique id."""
  deleteSettingByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSettingByNodeIdInput!
  ): DeleteSettingPayload

  """Deletes a single `Setting` using a unique key."""
  deleteSetting(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteSettingInput!
  ): DeleteSettingPayload

  """Deletes a single `TelescopeEntry` using its globally unique id."""
  deleteTelescopeEntryByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTelescopeEntryByNodeIdInput!
  ): DeleteTelescopeEntryPayload

  """Deletes a single `TelescopeEntry` using a unique key."""
  deleteTelescopeEntry(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTelescopeEntryInput!
  ): DeleteTelescopeEntryPayload

  """Deletes a single `Tip` using its globally unique id."""
  deleteTipByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTipByNodeIdInput!
  ): DeleteTipPayload

  """Deletes a single `Tip` using a unique key."""
  deleteTip(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTipInput!
  ): DeleteTipPayload

  """Deletes a single `User` using its globally unique id."""
  deleteUserByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteUserByNodeIdInput!
  ): DeleteUserPayload

  """Deletes a single `User` using a unique key."""
  deleteUser(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteUserInput!
  ): DeleteUserPayload

  """Deletes a single `UsersConfiguracion` using its globally unique id."""
  deleteUsersConfiguracionByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteUsersConfiguracionByNodeIdInput!
  ): DeleteUsersConfiguracionPayload

  """Deletes a single `UsersConfiguracion` using a unique key."""
  deleteUsersConfiguracion(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteUsersConfiguracionInput!
  ): DeleteUsersConfiguracionPayload

  """Deletes a single `UsersGrupo` using its globally unique id."""
  deleteUsersGrupoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteUsersGrupoByNodeIdInput!
  ): DeleteUsersGrupoPayload

  """Deletes a single `UsersGrupo` using a unique key."""
  deleteUsersGrupo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteUsersGrupoInput!
  ): DeleteUsersGrupoPayload

  """Deletes a single `UsersInactivo` using its globally unique id."""
  deleteUsersInactivoByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteUsersInactivoByNodeIdInput!
  ): DeleteUsersInactivoPayload

  """Deletes a single `UsersInactivo` using a unique key."""
  deleteUsersInactivo(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteUsersInactivoInput!
  ): DeleteUsersInactivoPayload

  """Deletes a single `UsersRole` using its globally unique id."""
  deleteUsersRoleByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteUsersRoleByNodeIdInput!
  ): DeleteUsersRolePayload

  """Deletes a single `UsersRole` using a unique key."""
  deleteUsersRole(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteUsersRoleInput!
  ): DeleteUsersRolePayload

  """Deletes a single `Versione` using its globally unique id."""
  deleteVersioneByNodeId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteVersioneByNodeIdInput!
  ): DeleteVersionePayload

  """Deletes a single `Versione` using a unique key."""
  deleteVersione(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteVersioneInput!
  ): DeleteVersionePayload
  usersLogin(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UsersLoginInput!
  ): UsersLoginPayload
}

"""The output of our create `Activity` mutation."""
type CreateActivityPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Activity` that was created by this mutation."""
  activity: Activity

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `EspaciosCurriculare` that is related to this `Activity`.
  """
  espacioCurricular: EspaciosCurriculare

  """Reads a single `Grupo` that is related to this `Activity`."""
  grupo: Grupo

  """Reads a single `Divisione` that is related to this `Activity`."""
  division: Divisione

  """Reads a single `User` that is related to this `Activity`."""
  docente: User

  """
  Reads a single `CalificacionesConcepto` that is related to this `Activity`.
  """
  calificacionConcepto: CalificacionesConcepto

  """An edge for our `Activity`. May be used by Relay 1."""
  activityEdge(
    """The method to use when ordering `Activity`."""
    orderBy: [ActivitiesOrderBy!] = [PRIMARY_KEY_ASC]
  ): ActivitiesEdge
}

"""All input for the create `Activity` mutation."""
input CreateActivityInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Activity` to be created by this mutation."""
  activity: ActivityInput!
}

"""An input for mutations affecting `Activity`"""
input ActivityInput {
  id: BigInt
  nombre: String
  fechaInicio: Datetime
  fechaEntrega: Datetime
  espacioCurricularId: Int
  grupoId: Int
  divisionId: Int
  docenteId: Int
  calificable: Boolean
  calificacionConceptoId: Int
  descripcion: String
  borrador: Boolean
  aprobada: Boolean
  fechaAprobacion: Datetime
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""The output of our create `ActividadesAlumno` mutation."""
type CreateActividadesAlumnoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `ActividadesAlumno` that was created by this mutation."""
  actividadesAlumno: ActividadesAlumno

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Activity` that is related to this `ActividadesAlumno`."""
  actividad: Activity

  """Reads a single `User` that is related to this `ActividadesAlumno`."""
  alumno: User

  """An edge for our `ActividadesAlumno`. May be used by Relay 1."""
  actividadesAlumnoEdge(
    """The method to use when ordering `ActividadesAlumno`."""
    orderBy: [ActividadesAlumnosOrderBy!] = [PRIMARY_KEY_ASC]
  ): ActividadesAlumnosEdge
}

"""All input for the create `ActividadesAlumno` mutation."""
input CreateActividadesAlumnoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `ActividadesAlumno` to be created by this mutation."""
  actividadesAlumno: ActividadesAlumnoInput!
}

"""An input for mutations affecting `ActividadesAlumno`"""
input ActividadesAlumnoInput {
  id: BigInt
  actividadId: Int
  alumnoId: Int
}

"""The output of our create `ActividadesArchivo` mutation."""
type CreateActividadesArchivoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `ActividadesArchivo` that was created by this mutation."""
  actividadesArchivo: ActividadesArchivo

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Activity` that is related to this `ActividadesArchivo`.
  """
  actividad: Activity

  """
  Reads a single `ActividadesEntregas` that is related to this `ActividadesArchivo`.
  """
  entrega: ActividadesEntregas

  """Reads a single `User` that is related to this `ActividadesArchivo`."""
  user: User

  """An edge for our `ActividadesArchivo`. May be used by Relay 1."""
  actividadesArchivoEdge(
    """The method to use when ordering `ActividadesArchivo`."""
    orderBy: [ActividadesArchivosOrderBy!] = [PRIMARY_KEY_ASC]
  ): ActividadesArchivosEdge
}

"""All input for the create `ActividadesArchivo` mutation."""
input CreateActividadesArchivoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `ActividadesArchivo` to be created by this mutation."""
  actividadesArchivo: ActividadesArchivoInput!
}

"""An input for mutations affecting `ActividadesArchivo`"""
input ActividadesArchivoInput {
  id: BigInt
  actividadId: Int
  entregaId: Int
  userId: Int
  path: String
  tipo: Int
  titulo: String
  nombre: String
  extension: String
  soloDocentes: Boolean
  descripcion: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `ActividadesEntregas` mutation."""
type CreateActividadesEntregasPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `ActividadesEntregas` that was created by this mutation."""
  actividadesEntregas: ActividadesEntregas

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Activity` that is related to this `ActividadesEntregas`.
  """
  actividad: Activity

  """Reads a single `User` that is related to this `ActividadesEntregas`."""
  alumno: User

  """An edge for our `ActividadesEntregas`. May be used by Relay 1."""
  actividadesEntregasEdge(
    """The method to use when ordering `ActividadesEntregas`."""
    orderBy: [ActividadesEntregasesOrderBy!] = [PRIMARY_KEY_ASC]
  ): ActividadesEntregasesEdge
}

"""All input for the create `ActividadesEntregas` mutation."""
input CreateActividadesEntregasInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `ActividadesEntregas` to be created by this mutation."""
  actividadesEntregas: ActividadesEntregasInput!
}

"""An input for mutations affecting `ActividadesEntregas`"""
input ActividadesEntregasInput {
  id: BigInt
  actividadId: Int
  alumnoId: Int
  contenido: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `ActividadesEntregasComentario` mutation."""
type CreateActividadesEntregasComentarioPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `ActividadesEntregasComentario` that was created by this mutation."""
  actividadesEntregasComentario: ActividadesEntregasComentario

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `ActividadesEntregas` that is related to this `ActividadesEntregasComentario`.
  """
  entrega: ActividadesEntregas

  """
  Reads a single `User` that is related to this `ActividadesEntregasComentario`.
  """
  user: User

  """
  An edge for our `ActividadesEntregasComentario`. May be used by Relay 1.
  """
  actividadesEntregasComentarioEdge(
    """The method to use when ordering `ActividadesEntregasComentario`."""
    orderBy: [ActividadesEntregasComentariosOrderBy!] = [PRIMARY_KEY_ASC]
  ): ActividadesEntregasComentariosEdge
}

"""All input for the create `ActividadesEntregasComentario` mutation."""
input CreateActividadesEntregasComentarioInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `ActividadesEntregasComentario` to be created by this mutation."""
  actividadesEntregasComentario: ActividadesEntregasComentarioInput!
}

"""An input for mutations affecting `ActividadesEntregasComentario`"""
input ActividadesEntregasComentarioInput {
  id: BigInt
  entregaId: BigInt
  userId: BigInt
  comentario: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `ActivityLog` mutation."""
type CreateActivityLogPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `ActivityLog` that was created by this mutation."""
  activityLog: ActivityLog

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `ActivityLog`. May be used by Relay 1."""
  activityLogEdge(
    """The method to use when ordering `ActivityLog`."""
    orderBy: [ActivityLogsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ActivityLogsEdge
}

"""All input for the create `ActivityLog` mutation."""
input CreateActivityLogInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `ActivityLog` to be created by this mutation."""
  activityLog: ActivityLogInput!
}

"""An input for mutations affecting `ActivityLog`"""
input ActivityLogInput {
  id: BigInt
  logName: String
  description: String!
  subjectId: Int
  subjectType: String
  causerId: Int
  causerType: String
  properties: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `AdmAporte` mutation."""
type CreateAdmAportePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmAporte` that was created by this mutation."""
  admAporte: AdmAporte

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `AdmAporte`. May be used by Relay 1."""
  admAporteEdge(
    """The method to use when ordering `AdmAporte`."""
    orderBy: [AdmAportesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmAportesEdge
}

"""All input for the create `AdmAporte` mutation."""
input CreateAdmAporteInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `AdmAporte` to be created by this mutation."""
  admAporte: AdmAporteInput!
}

"""An input for mutations affecting `AdmAporte`"""
input AdmAporteInput {
  id: BigInt
  aportante: String
  monto: BigFloat
  path: String
  observaciones: String
  clienteId: BigInt!
  userCreator: BigInt!
  fechaAporte: Datetime
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""The output of our create `AdmBanco` mutation."""
type CreateAdmBancoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmBanco` that was created by this mutation."""
  admBanco: AdmBanco

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `AdmBanco`. May be used by Relay 1."""
  admBancoEdge(
    """The method to use when ordering `AdmBanco`."""
    orderBy: [AdmBancosOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmBancosEdge
}

"""All input for the create `AdmBanco` mutation."""
input CreateAdmBancoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `AdmBanco` to be created by this mutation."""
  admBanco: AdmBancoInput!
}

"""An input for mutations affecting `AdmBanco`"""
input AdmBancoInput {
  id: BigInt
  nombre: String
  telefono: String
  contactoComercial: String
  clienteId: BigInt!
  estado: Int
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""The output of our create `AdmBancosCuenta` mutation."""
type CreateAdmBancosCuentaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmBancosCuenta` that was created by this mutation."""
  admBancosCuenta: AdmBancosCuenta

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `AdmBanco` that is related to this `AdmBancosCuenta`."""
  banco: AdmBanco

  """Reads a single `Cliente` that is related to this `AdmBancosCuenta`."""
  cliente: Cliente

  """An edge for our `AdmBancosCuenta`. May be used by Relay 1."""
  admBancosCuentaEdge(
    """The method to use when ordering `AdmBancosCuenta`."""
    orderBy: [AdmBancosCuentasOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmBancosCuentasEdge
}

"""All input for the create `AdmBancosCuenta` mutation."""
input CreateAdmBancosCuentaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `AdmBancosCuenta` to be created by this mutation."""
  admBancosCuenta: AdmBancosCuentaInput!
}

"""An input for mutations affecting `AdmBancosCuenta`"""
input AdmBancosCuentaInput {
  id: BigInt
  nombre: String
  cbu: String
  aliasCbu: String
  bancoId: BigInt!
  clienteId: BigInt!
  descripcionLarga: String
  saldo: BigFloat
  cuentaId: Int
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""The output of our create `AdmCaja` mutation."""
type CreateAdmCajaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmCaja` that was created by this mutation."""
  admCaja: AdmCaja

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `AdmCaja`."""
  user: User

  """Reads a single `Cliente` that is related to this `AdmCaja`."""
  cliente: Cliente

  """An edge for our `AdmCaja`. May be used by Relay 1."""
  admCajaEdge(
    """The method to use when ordering `AdmCaja`."""
    orderBy: [AdmCajasOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmCajasEdge
}

"""All input for the create `AdmCaja` mutation."""
input CreateAdmCajaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `AdmCaja` to be created by this mutation."""
  admCaja: AdmCajaInput!
}

"""An input for mutations affecting `AdmCaja`"""
input AdmCajaInput {
  id: BigInt
  userId: BigInt!
  clienteId: BigInt!
  saldoInicial: Float
  cerradaAt: Datetime
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""The output of our create `AdmCegreso` mutation."""
type CreateAdmCegresoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmCegreso` that was created by this mutation."""
  admCegreso: AdmCegreso

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `AdmCegreso`."""
  cliente: Cliente

  """Reads a single `AdmCuenta` that is related to this `AdmCegreso`."""
  cuenta: AdmCuenta

  """An edge for our `AdmCegreso`. May be used by Relay 1."""
  admCegresoEdge(
    """The method to use when ordering `AdmCegreso`."""
    orderBy: [AdmCegresosOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmCegresosEdge
}

"""All input for the create `AdmCegreso` mutation."""
input CreateAdmCegresoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `AdmCegreso` to be created by this mutation."""
  admCegreso: AdmCegresoInput!
}

"""An input for mutations affecting `AdmCegreso`"""
input AdmCegresoInput {
  id: BigInt
  nombre: String
  valorDefecto: BigFloat
  clienteId: BigInt!
  cuentaId: BigInt!
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""The output of our create `AdmCingreso` mutation."""
type CreateAdmCingresoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmCingreso` that was created by this mutation."""
  admCingreso: AdmCingreso

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `AdmCingreso`."""
  cliente: Cliente

  """Reads a single `AdmCuenta` that is related to this `AdmCingreso`."""
  cuenta: AdmCuenta

  """An edge for our `AdmCingreso`. May be used by Relay 1."""
  admCingresoEdge(
    """The method to use when ordering `AdmCingreso`."""
    orderBy: [AdmCingresosOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmCingresosEdge
}

"""All input for the create `AdmCingreso` mutation."""
input CreateAdmCingresoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `AdmCingreso` to be created by this mutation."""
  admCingreso: AdmCingresoInput!
}

"""An input for mutations affecting `AdmCingreso`"""
input AdmCingresoInput {
  id: BigInt
  nombre: String
  cicloLectivo: BigInt
  valorDefecto: BigFloat
  clienteId: BigInt!
  cuentaId: BigInt!
  tipoCobro: Int
  emitirComprobante: Boolean
  estado: Boolean
  permitirPagoAdelantado: Boolean
  interesMensualDefecto: Float
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""The output of our create `AdmCingresosValore` mutation."""
type CreateAdmCingresosValorePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmCingresosValore` that was created by this mutation."""
  admCingresosValore: AdmCingresosValore

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `AdmCingreso` that is related to this `AdmCingresosValore`.
  """
  cingreso: AdmCingreso

  """Reads a single `Cliente` that is related to this `AdmCingresosValore`."""
  cliente: Cliente

  """
  Reads a single `Divisione` that is related to this `AdmCingresosValore`.
  """
  division: Divisione

  """An edge for our `AdmCingresosValore`. May be used by Relay 1."""
  admCingresosValoreEdge(
    """The method to use when ordering `AdmCingresosValore`."""
    orderBy: [AdmCingresosValoresOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmCingresosValoresEdge
}

"""All input for the create `AdmCingresosValore` mutation."""
input CreateAdmCingresosValoreInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `AdmCingresosValore` to be created by this mutation."""
  admCingresosValore: AdmCingresosValoreInput!
}

"""An input for mutations affecting `AdmCingresosValore`"""
input AdmCingresosValoreInput {
  id: BigInt
  cingresoId: BigInt!
  clienteId: BigInt!
  grupoId: BigInt
  diferido: Int
  cuota: Int
  cuotafloat: Float
  valor: Float
  diaV1: BigInt
  valorV1: Float
  diaV2: BigInt
  valorV2: Float
  divisionId: BigInt!
  estado: Int
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""The output of our create `AdmCuenta` mutation."""
type CreateAdmCuentaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmCuenta` that was created by this mutation."""
  admCuenta: AdmCuenta

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `AdmCuenta`. May be used by Relay 1."""
  admCuentaEdge(
    """The method to use when ordering `AdmCuenta`."""
    orderBy: [AdmCuentasOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmCuentasEdge
}

"""All input for the create `AdmCuenta` mutation."""
input CreateAdmCuentaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `AdmCuenta` to be created by this mutation."""
  admCuenta: AdmCuentaInput!
}

"""An input for mutations affecting `AdmCuenta`"""
input AdmCuentaInput {
  id: BigInt
  numero: String
  nombre: String
  descripcion: String
  balance: BigFloat
  tipo: String
  clienteId: Int
  parentId: BigInt
  habilitadaEgresos: Int
  createdAt: Datetime
  editable: Int
  updatedAt: Datetime
  deletedAt: Datetime
}

"""The output of our create `AdmDescuento` mutation."""
type CreateAdmDescuentoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmDescuento` that was created by this mutation."""
  admDescuento: AdmDescuento

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `AdmDescuento`. May be used by Relay 1."""
  admDescuentoEdge(
    """The method to use when ordering `AdmDescuento`."""
    orderBy: [AdmDescuentosOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmDescuentosEdge
}

"""All input for the create `AdmDescuento` mutation."""
input CreateAdmDescuentoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `AdmDescuento` to be created by this mutation."""
  admDescuento: AdmDescuentoInput!
}

"""An input for mutations affecting `AdmDescuento`"""
input AdmDescuentoInput {
  id: BigInt
  clienteId: BigInt!
  nombre: String
  estado: Int
  agotado: Int
  tipo: Int
  formato: Int
  monto: Float
  porcentaje: Float
  descuentoAplicable: Int
  fechaHastaIndefinido: Int
  fechaHastaValidez: Datetime
  fechaDesdeValidez: Datetime
  conceptoIngreso: BigInt!
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""The output of our create `AdmDescuentosGrupo` mutation."""
type CreateAdmDescuentosGrupoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmDescuentosGrupo` that was created by this mutation."""
  admDescuentosGrupo: AdmDescuentosGrupo

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `AdmDescuentosGrupo`. May be used by Relay 1."""
  admDescuentosGrupoEdge(
    """The method to use when ordering `AdmDescuentosGrupo`."""
    orderBy: [AdmDescuentosGruposOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmDescuentosGruposEdge
}

"""All input for the create `AdmDescuentosGrupo` mutation."""
input CreateAdmDescuentosGrupoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `AdmDescuentosGrupo` to be created by this mutation."""
  admDescuentosGrupo: AdmDescuentosGrupoInput!
}

"""An input for mutations affecting `AdmDescuentosGrupo`"""
input AdmDescuentosGrupoInput {
  id: BigInt
  descuentoId: BigInt!
  grupoId: BigInt!
  tipoGrupo: Boolean
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `AdmDescuentosGruposFamiliare` mutation."""
type CreateAdmDescuentosGruposFamiliarePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmDescuentosGruposFamiliare` that was created by this mutation."""
  admDescuentosGruposFamiliare: AdmDescuentosGruposFamiliare

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `AdmDescuento` that is related to this `AdmDescuentosGruposFamiliare`.
  """
  descuento: AdmDescuento

  """
  Reads a single `AdmGruposFamiliare` that is related to this `AdmDescuentosGruposFamiliare`.
  """
  grupoFamiliar: AdmGruposFamiliare

  """
  An edge for our `AdmDescuentosGruposFamiliare`. May be used by Relay 1.
  """
  admDescuentosGruposFamiliareEdge(
    """The method to use when ordering `AdmDescuentosGruposFamiliare`."""
    orderBy: [AdmDescuentosGruposFamiliaresOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmDescuentosGruposFamiliaresEdge
}

"""All input for the create `AdmDescuentosGruposFamiliare` mutation."""
input CreateAdmDescuentosGruposFamiliareInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `AdmDescuentosGruposFamiliare` to be created by this mutation."""
  admDescuentosGruposFamiliare: AdmDescuentosGruposFamiliareInput!
}

"""An input for mutations affecting `AdmDescuentosGruposFamiliare`"""
input AdmDescuentosGruposFamiliareInput {
  id: BigInt
  descuentoId: BigInt!
  grupoFamiliarId: BigInt!
  tipoGrupo: Boolean
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `AdmEgresoItem` mutation."""
type CreateAdmEgresoItemPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmEgresoItem` that was created by this mutation."""
  admEgresoItem: AdmEgresoItem

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `AdmEgreso` that is related to this `AdmEgresoItem`."""
  egreso: AdmEgreso

  """Reads a single `AdmCegreso` that is related to this `AdmEgresoItem`."""
  conceptoEgreso: AdmCegreso

  """Reads a single `Cliente` that is related to this `AdmEgresoItem`."""
  cliente: Cliente

  """An edge for our `AdmEgresoItem`. May be used by Relay 1."""
  admEgresoItemEdge(
    """The method to use when ordering `AdmEgresoItem`."""
    orderBy: [AdmEgresoItemsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmEgresoItemsEdge
}

"""All input for the create `AdmEgresoItem` mutation."""
input CreateAdmEgresoItemInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `AdmEgresoItem` to be created by this mutation."""
  admEgresoItem: AdmEgresoItemInput!
}

"""An input for mutations affecting `AdmEgresoItem`"""
input AdmEgresoItemInput {
  id: BigInt
  egresoId: BigInt!
  conceptoEgresoId: BigInt!
  precio: BigFloat
  cantidad: BigInt
  importe: BigFloat
  observaciones: String
  clienteId: Int!
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""The output of our create `AdmEgreso` mutation."""
type CreateAdmEgresoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmEgreso` that was created by this mutation."""
  admEgreso: AdmEgreso

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `AdmProveedore` that is related to this `AdmEgreso`."""
  proveedor: AdmProveedore

  """Reads a single `Cliente` that is related to this `AdmEgreso`."""
  cliente: Cliente

  """Reads a single `Divisione` that is related to this `AdmEgreso`."""
  division: Divisione

  """Reads a single `User` that is related to this `AdmEgreso`."""
  userByUserCreator: User

  """An edge for our `AdmEgreso`. May be used by Relay 1."""
  admEgresoEdge(
    """The method to use when ordering `AdmEgreso`."""
    orderBy: [AdmEgresosOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmEgresosEdge
}

"""All input for the create `AdmEgreso` mutation."""
input CreateAdmEgresoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `AdmEgreso` to be created by this mutation."""
  admEgreso: AdmEgresoInput!
}

"""An input for mutations affecting `AdmEgreso`"""
input AdmEgresoInput {
  id: BigInt
  proveedorId: BigInt!
  tipoComprobante: BigInt
  numeroComprobante: String
  fechaComprobante: Datetime
  fechaPago: Datetime
  monto: BigFloat
  path: String
  observaciones: String
  clienteId: BigInt!
  divisionId: BigInt!
  userCreator: BigInt!
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""The output of our create `AdmFacturaItem` mutation."""
type CreateAdmFacturaItemPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmFacturaItem` that was created by this mutation."""
  admFacturaItem: AdmFacturaItem

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `AdmFactura` that is related to this `AdmFacturaItem`."""
  factura: AdmFactura

  """Reads a single `AdmCingreso` that is related to this `AdmFacturaItem`."""
  conceptoIngreso: AdmCingreso

  """Reads a single `Cliente` that is related to this `AdmFacturaItem`."""
  cliente: Cliente

  """Reads a single `User` that is related to this `AdmFacturaItem`."""
  user: User

  """An edge for our `AdmFacturaItem`. May be used by Relay 1."""
  admFacturaItemEdge(
    """The method to use when ordering `AdmFacturaItem`."""
    orderBy: [AdmFacturaItemsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmFacturaItemsEdge
}

"""All input for the create `AdmFacturaItem` mutation."""
input CreateAdmFacturaItemInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `AdmFacturaItem` to be created by this mutation."""
  admFacturaItem: AdmFacturaItemInput!
}

"""An input for mutations affecting `AdmFacturaItem`"""
input AdmFacturaItemInput {
  id: BigInt
  facturaId: BigInt!
  conceptoIngresoId: BigInt!
  clienteId: Int!
  userId: Int!
  divisionId: Int
  precio: BigFloat
  interes: BigFloat
  descuento: BigFloat
  cantidad: BigInt
  total: BigFloat
  pagado: BigFloat
  interesPagado: BigFloat
  cuota: Boolean
  pagoCompleto: Int
  observaciones: String
  fechaPago: Datetime
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""The output of our create `AdmFacturaPago` mutation."""
type CreateAdmFacturaPagoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmFacturaPago` that was created by this mutation."""
  admFacturaPago: AdmFacturaPago

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `AdmFacturaPago`."""
  cliente: Cliente

  """Reads a single `User` that is related to this `AdmFacturaPago`."""
  userCreator: User

  """Reads a single `AdmFactura` that is related to this `AdmFacturaPago`."""
  factura: AdmFactura

  """An edge for our `AdmFacturaPago`. May be used by Relay 1."""
  admFacturaPagoEdge(
    """The method to use when ordering `AdmFacturaPago`."""
    orderBy: [AdmFacturaPagosOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmFacturaPagosEdge
}

"""All input for the create `AdmFacturaPago` mutation."""
input CreateAdmFacturaPagoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `AdmFacturaPago` to be created by this mutation."""
  admFacturaPago: AdmFacturaPagoInput!
}

"""An input for mutations affecting `AdmFacturaPago`"""
input AdmFacturaPagoInput {
  id: BigInt
  clienteId: Int!
  userCreatorId: Int!
  facturaId: BigInt!
  formaPagoId: BigInt!
  monto: BigFloat
  nroChque: String
  bancoEmisorCheque: String
  cuentaBancariaId: BigInt!
  nroTransferencia: String
  codigoPagomiscuentas: String
  codigoMercadopago: String
  descripcion: String
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""The output of our create `AdmFactura` mutation."""
type CreateAdmFacturaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmFactura` that was created by this mutation."""
  admFactura: AdmFactura

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `AdmFactura`."""
  cliente: Cliente

  """Reads a single `User` that is related to this `AdmFactura`."""
  userByUserCreator: User

  """An edge for our `AdmFactura`. May be used by Relay 1."""
  admFacturaEdge(
    """The method to use when ordering `AdmFactura`."""
    orderBy: [AdmFacturasOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmFacturasEdge
}

"""All input for the create `AdmFactura` mutation."""
input CreateAdmFacturaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `AdmFactura` to be created by this mutation."""
  admFactura: AdmFacturaInput!
}

"""An input for mutations affecting `AdmFactura`"""
input AdmFacturaInput {
  id: BigInt
  tipo: BigInt
  puntoDeVenta: BigInt
  numeroFactura: String
  tipoComprobante: BigInt
  numeroComprobante: String
  clienteNombre: String
  clienteCuit: String
  userFacturado: BigInt
  monto: BigFloat
  cae: String
  caeVencimientoFecha: Date
  vencimiento: Datetime
  descripcion: String
  path: String
  observaciones: String
  clienteId: BigInt!
  userCreator: BigInt!
  envioEmail: Int
  noAplicado: Int
  fechaFacturacion: Datetime
  fechaFacturacionAfip: Datetime
  fechaPago: Datetime
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
  obsAdmin: String
}

"""The output of our create `AdmGruposFamiliare` mutation."""
type CreateAdmGruposFamiliarePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmGruposFamiliare` that was created by this mutation."""
  admGruposFamiliare: AdmGruposFamiliare

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `AdmGruposFamiliare`."""
  cliente: Cliente

  """
  Reads a single `AdmDescuento` that is related to this `AdmGruposFamiliare`.
  """
  descuento: AdmDescuento

  """An edge for our `AdmGruposFamiliare`. May be used by Relay 1."""
  admGruposFamiliareEdge(
    """The method to use when ordering `AdmGruposFamiliare`."""
    orderBy: [AdmGruposFamiliaresOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmGruposFamiliaresEdge
}

"""All input for the create `AdmGruposFamiliare` mutation."""
input CreateAdmGruposFamiliareInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `AdmGruposFamiliare` to be created by this mutation."""
  admGruposFamiliare: AdmGruposFamiliareInput!
}

"""An input for mutations affecting `AdmGruposFamiliare`"""
input AdmGruposFamiliareInput {
  id: BigInt
  clienteId: BigInt
  nombre: String
  estado: Int
  descuentoId: BigInt
  formaAplicacion: Int
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""The output of our create `AdmProveedore` mutation."""
type CreateAdmProveedorePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmProveedore` that was created by this mutation."""
  admProveedore: AdmProveedore

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `AdmProveedore`."""
  cliente: Cliente

  """An edge for our `AdmProveedore`. May be used by Relay 1."""
  admProveedoreEdge(
    """The method to use when ordering `AdmProveedore`."""
    orderBy: [AdmProveedoresOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmProveedoresEdge
}

"""All input for the create `AdmProveedore` mutation."""
input CreateAdmProveedoreInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `AdmProveedore` to be created by this mutation."""
  admProveedore: AdmProveedoreInput!
}

"""An input for mutations affecting `AdmProveedore`"""
input AdmProveedoreInput {
  id: BigInt
  clienteId: BigInt!
  razonSocial: String
  cuit: String
  email: String
  telefono: String
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""The output of our create `Alerta` mutation."""
type CreateAlertaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Alerta` that was created by this mutation."""
  alerta: Alerta

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `Alerta`."""
  alumno: User

  """Reads a single `Activity` that is related to this `Alerta`."""
  actividad: Activity

  """Reads a single `ActividadesEntregas` that is related to this `Alerta`."""
  entrega: ActividadesEntregas

  """An edge for our `Alerta`. May be used by Relay 1."""
  alertaEdge(
    """The method to use when ordering `Alerta`."""
    orderBy: [AlertasOrderBy!] = [PRIMARY_KEY_ASC]
  ): AlertasEdge
}

"""All input for the create `Alerta` mutation."""
input CreateAlertaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Alerta` to be created by this mutation."""
  alerta: AlertaInput!
}

"""An input for mutations affecting `Alerta`"""
input AlertaInput {
  id: BigInt
  rolId: Int

  """
  si el rol_id vinculado es el de un tutor, en este campo se aclara para que alumno corresponde la alerta
  """
  alumnoId: Int
  leida: Boolean
  entidad: String

  """una alerta puede llevar vinculada una actividad"""
  actividadId: Int

  """una alerta puede llevar vinculada una entrega"""
  entregaId: Int
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `Asignatura` mutation."""
type CreateAsignaturaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Asignatura` that was created by this mutation."""
  asignatura: Asignatura

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Grupo` that is related to this `Asignatura`."""
  grupo: Grupo

  """Reads a single `User` that is related to this `Asignatura`."""
  docente: User

  """
  Reads a single `EspaciosCurriculare` that is related to this `Asignatura`.
  """
  espacioCurricular: EspaciosCurriculare

  """An edge for our `Asignatura`. May be used by Relay 1."""
  asignaturaEdge(
    """The method to use when ordering `Asignatura`."""
    orderBy: [AsignaturasOrderBy!] = [PRIMARY_KEY_ASC]
  ): AsignaturasEdge
}

"""All input for the create `Asignatura` mutation."""
input CreateAsignaturaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Asignatura` to be created by this mutation."""
  asignatura: AsignaturaInput!
}

"""An input for mutations affecting `Asignatura`"""
input AsignaturaInput {
  id: BigInt
  grupoId: Int
  docenteId: Int
  espacioCurricularId: Int
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `AwsSesHistorial` mutation."""
type CreateAwsSesHistorialPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AwsSesHistorial` that was created by this mutation."""
  awsSesHistorial: AwsSesHistorial

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `AwsSesHistorial`. May be used by Relay 1."""
  awsSesHistorialEdge(
    """The method to use when ordering `AwsSesHistorial`."""
    orderBy: [AwsSesHistorialsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AwsSesHistorialsEdge
}

"""All input for the create `AwsSesHistorial` mutation."""
input CreateAwsSesHistorialInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `AwsSesHistorial` to be created by this mutation."""
  awsSesHistorial: AwsSesHistorialInput!
}

"""An input for mutations affecting `AwsSesHistorial`"""
input AwsSesHistorialInput {
  id: BigInt
  messageid: String
  tipo: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `Calendario` mutation."""
type CreateCalendarioPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Calendario` that was created by this mutation."""
  calendario: Calendario

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Grupo` that is related to this `Calendario`."""
  grupo: Grupo

  """Reads a single `Activity` that is related to this `Calendario`."""
  actividad: Activity

  """Reads a single `User` that is related to this `Calendario`."""
  user: User

  """An edge for our `Calendario`. May be used by Relay 1."""
  calendarioEdge(
    """The method to use when ordering `Calendario`."""
    orderBy: [CalendariosOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalendariosEdge
}

"""All input for the create `Calendario` mutation."""
input CreateCalendarioInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Calendario` to be created by this mutation."""
  calendario: CalendarioInput!
}

"""An input for mutations affecting `Calendario`"""
input CalendarioInput {
  id: BigInt
  titulo: String
  descripcion: String
  tipoEvento: String
  fecha: Datetime
  grupoId: Int
  actividadId: Int
  userId: Int
  soloDocentes: Boolean
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `CalendarioGrupo` mutation."""
type CreateCalendarioGrupoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `CalendarioGrupo` that was created by this mutation."""
  calendarioGrupo: CalendarioGrupo

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Calendario` that is related to this `CalendarioGrupo`."""
  calendario: Calendario

  """Reads a single `Grupo` that is related to this `CalendarioGrupo`."""
  grupo: Grupo

  """An edge for our `CalendarioGrupo`. May be used by Relay 1."""
  calendarioGrupoEdge(
    """The method to use when ordering `CalendarioGrupo`."""
    orderBy: [CalendarioGruposOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalendarioGruposEdge
}

"""All input for the create `CalendarioGrupo` mutation."""
input CreateCalendarioGrupoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `CalendarioGrupo` to be created by this mutation."""
  calendarioGrupo: CalendarioGrupoInput!
}

"""An input for mutations affecting `CalendarioGrupo`"""
input CalendarioGrupoInput {
  id: BigInt
  calendarioId: Int
  grupoId: Int
}

"""The output of our create `CalendarioUser` mutation."""
type CreateCalendarioUserPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `CalendarioUser` that was created by this mutation."""
  calendarioUser: CalendarioUser

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `CalendarioUser`. May be used by Relay 1."""
  calendarioUserEdge(
    """The method to use when ordering `CalendarioUser`."""
    orderBy: [CalendarioUsersOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalendarioUsersEdge
}

"""All input for the create `CalendarioUser` mutation."""
input CreateCalendarioUserInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `CalendarioUser` to be created by this mutation."""
  calendarioUser: CalendarioUserInput!
}

"""An input for mutations affecting `CalendarioUser`"""
input CalendarioUserInput {
  id: BigInt
  calendarioEventoId: Int
  userId: Int
}

"""The output of our create `Calificacione` mutation."""
type CreateCalificacionePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Calificacione` that was created by this mutation."""
  calificacione: Calificacione

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `CalificacionesConcepto` that is related to this `Calificacione`.
  """
  concepto: CalificacionesConcepto

  """Reads a single `User` that is related to this `Calificacione`."""
  alumno: User

  """Reads a single `Divisione` that is related to this `Calificacione`."""
  division: Divisione

  """
  Reads a single `CalificacionesEscalasValore` that is related to this `Calificacione`.
  """
  calificacionEscalaValor: CalificacionesEscalasValore

  """An edge for our `Calificacione`. May be used by Relay 1."""
  calificacioneEdge(
    """The method to use when ordering `Calificacione`."""
    orderBy: [CalificacionesOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalificacionesEdge
}

"""All input for the create `Calificacione` mutation."""
input CreateCalificacioneInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Calificacione` to be created by this mutation."""
  calificacione: CalificacioneInput!
}

"""An input for mutations affecting `Calificacione`"""
input CalificacioneInput {
  id: BigInt
  conceptoId: Int
  alumnoId: Int
  divisionId: Int
  calificacionEscalaValorId: Int
  observaciones: String
  archivada: Boolean
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `CalificacionesConcepto` mutation."""
type CreateCalificacionesConceptoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `CalificacionesConcepto` that was created by this mutation."""
  calificacionesConcepto: CalificacionesConcepto

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `CalificacionesConcepto`. May be used by Relay 1."""
  calificacionesConceptoEdge(
    """The method to use when ordering `CalificacionesConcepto`."""
    orderBy: [CalificacionesConceptosOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalificacionesConceptosEdge
}

"""All input for the create `CalificacionesConcepto` mutation."""
input CreateCalificacionesConceptoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `CalificacionesConcepto` to be created by this mutation."""
  calificacionesConcepto: CalificacionesConceptoInput!
}

"""An input for mutations affecting `CalificacionesConcepto`"""
input CalificacionesConceptoInput {
  id: BigInt
  nombre: String
  docenteId: Int
  calificacionEscalaId: Int
  espacioCurricularId: Int
  grupoId: Int
  divisionId: Int
  impactaNotaFinal: Boolean
  calificacionCerrada: Boolean
  actividadId: Int
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""The output of our create `CalificacionesConceptosAlumno` mutation."""
type CreateCalificacionesConceptosAlumnoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `CalificacionesConceptosAlumno` that was created by this mutation."""
  calificacionesConceptosAlumno: CalificacionesConceptosAlumno

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  An edge for our `CalificacionesConceptosAlumno`. May be used by Relay 1.
  """
  calificacionesConceptosAlumnoEdge(
    """The method to use when ordering `CalificacionesConceptosAlumno`."""
    orderBy: [CalificacionesConceptosAlumnosOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalificacionesConceptosAlumnosEdge
}

"""All input for the create `CalificacionesConceptosAlumno` mutation."""
input CreateCalificacionesConceptosAlumnoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `CalificacionesConceptosAlumno` to be created by this mutation."""
  calificacionesConceptosAlumno: CalificacionesConceptosAlumnoInput!
}

"""An input for mutations affecting `CalificacionesConceptosAlumno`"""
input CalificacionesConceptosAlumnoInput {
  id: BigInt
  conceptoId: Int
  alumnoId: Int
}

"""The output of our create `CalificacionesEscala` mutation."""
type CreateCalificacionesEscalaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `CalificacionesEscala` that was created by this mutation."""
  calificacionesEscala: CalificacionesEscala

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `CalificacionesEscala`. May be used by Relay 1."""
  calificacionesEscalaEdge(
    """The method to use when ordering `CalificacionesEscala`."""
    orderBy: [CalificacionesEscalasOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalificacionesEscalasEdge
}

"""All input for the create `CalificacionesEscala` mutation."""
input CreateCalificacionesEscalaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `CalificacionesEscala` to be created by this mutation."""
  calificacionesEscala: CalificacionesEscalaInput!
}

"""An input for mutations affecting `CalificacionesEscala`"""
input CalificacionesEscalaInput {
  id: BigInt
  nombre: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `CalificacionesEscalasValore` mutation."""
type CreateCalificacionesEscalasValorePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `CalificacionesEscalasValore` that was created by this mutation."""
  calificacionesEscalasValore: CalificacionesEscalasValore

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `CalificacionesEscalasValore`. May be used by Relay 1."""
  calificacionesEscalasValoreEdge(
    """The method to use when ordering `CalificacionesEscalasValore`."""
    orderBy: [CalificacionesEscalasValoresOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalificacionesEscalasValoresEdge
}

"""All input for the create `CalificacionesEscalasValore` mutation."""
input CreateCalificacionesEscalasValoreInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `CalificacionesEscalasValore` to be created by this mutation."""
  calificacionesEscalasValore: CalificacionesEscalasValoreInput!
}

"""An input for mutations affecting `CalificacionesEscalasValore`"""
input CalificacionesEscalasValoreInput {
  id: BigInt
  nombre: String
  exitoso: Boolean
  peso: Int
  calificacionEscalaId: Int
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `Changelog` mutation."""
type CreateChangelogPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Changelog` that was created by this mutation."""
  changelog: Changelog

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Changelog`. May be used by Relay 1."""
  changelogEdge(
    """The method to use when ordering `Changelog`."""
    orderBy: [ChangelogsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ChangelogsEdge
}

"""All input for the create `Changelog` mutation."""
input CreateChangelogInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Changelog` to be created by this mutation."""
  changelog: ChangelogInput!
}

"""An input for mutations affecting `Changelog`"""
input ChangelogInput {
  id: BigInt
  descripcion: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `City` mutation."""
type CreateCityPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `City` that was created by this mutation."""
  city: City

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Provincia` that is related to this `City`."""
  provincia: Provincia

  """An edge for our `City`. May be used by Relay 1."""
  cityEdge(
    """The method to use when ordering `City`."""
    orderBy: [CitiesOrderBy!] = [PRIMARY_KEY_ASC]
  ): CitiesEdge
}

"""All input for the create `City` mutation."""
input CreateCityInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `City` to be created by this mutation."""
  city: CityInput!
}

"""An input for mutations affecting `City`"""
input CityInput {
  id: BigInt
  nombre: String
  provinciaId: BigInt!
  latitud: Float
  longitud: Float
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `ClienteModule` mutation."""
type CreateClienteModulePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `ClienteModule` that was created by this mutation."""
  clienteModule: ClienteModule

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `ClienteModule`. May be used by Relay 1."""
  clienteModuleEdge(
    """The method to use when ordering `ClienteModule`."""
    orderBy: [ClienteModulesOrderBy!] = [PRIMARY_KEY_ASC]
  ): ClienteModulesEdge
}

"""All input for the create `ClienteModule` mutation."""
input CreateClienteModuleInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `ClienteModule` to be created by this mutation."""
  clienteModule: ClienteModuleInput!
}

"""An input for mutations affecting `ClienteModule`"""
input ClienteModuleInput {
  id: BigInt
  moduleId: BigInt!
  clienteId: BigInt!
}

"""The output of our create `Cliente` mutation."""
type CreateClientePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Cliente` that was created by this mutation."""
  cliente: Cliente

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Cliente`. May be used by Relay 1."""
  clienteEdge(
    """The method to use when ordering `Cliente`."""
    orderBy: [ClientesOrderBy!] = [PRIMARY_KEY_ASC]
  ): ClientesEdge
}

"""All input for the create `Cliente` mutation."""
input CreateClienteInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Cliente` to be created by this mutation."""
  cliente: ClienteInput!
}

"""An input for mutations affecting `Cliente`"""
input ClienteInput {
  id: BigInt
  name: String
  alumnosFacturables: BigInt
  logo: String
  email: String
  direccion: String
  provinciaId: BigInt
  latitud: String
  longitud: String
  tieneApp: Int
  notes: String
  cuit: String
  iibb: String
  inicioActividades: String
  appBundleAndroid: String
  appBundleIos: String
  demoActiva: Int
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
  telefono: String
}

"""The output of our create `Dispositivo` mutation."""
type CreateDispositivoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Dispositivo` that was created by this mutation."""
  dispositivo: Dispositivo

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `Dispositivo`."""
  user: User

  """Reads a single `Cliente` that is related to this `Dispositivo`."""
  cliente: Cliente

  """An edge for our `Dispositivo`. May be used by Relay 1."""
  dispositivoEdge(
    """The method to use when ordering `Dispositivo`."""
    orderBy: [DispositivosOrderBy!] = [PRIMARY_KEY_ASC]
  ): DispositivosEdge
}

"""All input for the create `Dispositivo` mutation."""
input CreateDispositivoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Dispositivo` to be created by this mutation."""
  dispositivo: DispositivoInput!
}

"""An input for mutations affecting `Dispositivo`"""
input DispositivoInput {
  id: BigInt
  userId: Int
  clienteId: Int
  app: String
  pushToken: String
  pushTokenReal: String
  deviceId: String
  deviceName: String
  os: String
  versionApp: String
  versionExpo: String
  versionOs: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `Divisione` mutation."""
type CreateDivisionePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Divisione` that was created by this mutation."""
  divisione: Divisione

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Divisione`. May be used by Relay 1."""
  divisioneEdge(
    """The method to use when ordering `Divisione`."""
    orderBy: [DivisionesOrderBy!] = [PRIMARY_KEY_ASC]
  ): DivisionesEdge
}

"""All input for the create `Divisione` mutation."""
input CreateDivisioneInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Divisione` to be created by this mutation."""
  divisione: DivisioneInput!
}

"""An input for mutations affecting `Divisione`"""
input DivisioneInput {
  id: BigInt
  nombre: String
  clienteId: BigInt!
  color: String
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""The output of our create `Errorsapp` mutation."""
type CreateErrorsappPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Errorsapp` that was created by this mutation."""
  errorsapp: Errorsapp

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `Errorsapp`."""
  user: User

  """An edge for our `Errorsapp`. May be used by Relay 1."""
  errorsappEdge(
    """The method to use when ordering `Errorsapp`."""
    orderBy: [ErrorsappsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ErrorsappsEdge
}

"""All input for the create `Errorsapp` mutation."""
input CreateErrorsappInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Errorsapp` to be created by this mutation."""
  errorsapp: ErrorsappInput!
}

"""An input for mutations affecting `Errorsapp`"""
input ErrorsappInput {
  id: BigInt
  userId: BigInt!
  case: String
  deviceName: String
  os: String
  deviceId: String
  versionApp: String
  versionExpo: String
  versionOs: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `EspaciosCurriculare` mutation."""
type CreateEspaciosCurricularePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `EspaciosCurriculare` that was created by this mutation."""
  espaciosCurriculare: EspaciosCurriculare

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `EspaciosCurriculare`. May be used by Relay 1."""
  espaciosCurriculareEdge(
    """The method to use when ordering `EspaciosCurriculare`."""
    orderBy: [EspaciosCurricularesOrderBy!] = [PRIMARY_KEY_ASC]
  ): EspaciosCurricularesEdge
}

"""All input for the create `EspaciosCurriculare` mutation."""
input CreateEspaciosCurriculareInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `EspaciosCurriculare` to be created by this mutation."""
  espaciosCurriculare: EspaciosCurriculareInput!
}

"""An input for mutations affecting `EspaciosCurriculare`"""
input EspaciosCurriculareInput {
  id: BigInt
  nombre: String
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""The output of our create `Evento` mutation."""
type CreateEventoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Evento` that was created by this mutation."""
  evento: Evento

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `Evento`."""
  cliente: Cliente

  """Reads a single `Divisione` that is related to this `Evento`."""
  division: Divisione

  """An edge for our `Evento`. May be used by Relay 1."""
  eventoEdge(
    """The method to use when ordering `Evento`."""
    orderBy: [EventosOrderBy!] = [PRIMARY_KEY_ASC]
  ): EventosEdge
}

"""All input for the create `Evento` mutation."""
input CreateEventoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Evento` to be created by this mutation."""
  evento: EventoInput!
}

"""An input for mutations affecting `Evento`"""
input EventoInput {
  id: BigInt
  clienteId: BigInt!
  ownerId: BigInt
  divisionId: BigInt
  nombre: String
  descripcion: String
  imagen: String
  fechaInicio: Datetime
  horaInicio: Time
  horaFin: Time
  fechaFin: Datetime
  lugar: String
  latitud: String
  longitud: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `FailedJob` mutation."""
type CreateFailedJobPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `FailedJob` that was created by this mutation."""
  failedJob: FailedJob

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `FailedJob`. May be used by Relay 1."""
  failedJobEdge(
    """The method to use when ordering `FailedJob`."""
    orderBy: [FailedJobsOrderBy!] = [PRIMARY_KEY_ASC]
  ): FailedJobsEdge
}

"""All input for the create `FailedJob` mutation."""
input CreateFailedJobInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `FailedJob` to be created by this mutation."""
  failedJob: FailedJobInput!
}

"""An input for mutations affecting `FailedJob`"""
input FailedJobInput {
  id: BigInt
  connection: String
  queue: String
  payload: String
  exception: String
  failedAt: Datetime
}

"""The output of our create `Foto` mutation."""
type CreateFotoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Foto` that was created by this mutation."""
  foto: Foto

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Galeria` that is related to this `Foto`."""
  galeria: Galeria

  """An edge for our `Foto`. May be used by Relay 1."""
  fotoEdge(
    """The method to use when ordering `Foto`."""
    orderBy: [FotosOrderBy!] = [PRIMARY_KEY_ASC]
  ): FotosEdge
}

"""All input for the create `Foto` mutation."""
input CreateFotoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Foto` to be created by this mutation."""
  foto: FotoInput!
}

"""An input for mutations affecting `Foto`"""
input FotoInput {
  id: BigInt
  galeriaId: BigInt!
  imagen: String
  orden: BigInt
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""The output of our create `Galeria` mutation."""
type CreateGaleriaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Galeria` that was created by this mutation."""
  galeria: Galeria

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `Galeria`."""
  cliente: Cliente

  """Reads a single `Divisione` that is related to this `Galeria`."""
  division: Divisione

  """An edge for our `Galeria`. May be used by Relay 1."""
  galeriaEdge(
    """The method to use when ordering `Galeria`."""
    orderBy: [GaleriasOrderBy!] = [PRIMARY_KEY_ASC]
  ): GaleriasEdge
}

"""All input for the create `Galeria` mutation."""
input CreateGaleriaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Galeria` to be created by this mutation."""
  galeria: GaleriaInput!
}

"""An input for mutations affecting `Galeria`"""
input GaleriaInput {
  id: BigInt
  clienteId: BigInt!
  divisionId: BigInt
  nombre: String
  fecha: Date
  lugar: String
  imagen: String
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""The output of our create `Grupo` mutation."""
type CreateGrupoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Grupo` that was created by this mutation."""
  grupo: Grupo

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `Grupo`."""
  cliente: Cliente

  """Reads a single `Divisione` that is related to this `Grupo`."""
  division: Divisione

  """An edge for our `Grupo`. May be used by Relay 1."""
  grupoEdge(
    """The method to use when ordering `Grupo`."""
    orderBy: [GruposOrderBy!] = [PRIMARY_KEY_ASC]
  ): GruposEdge
}

"""All input for the create `Grupo` mutation."""
input CreateGrupoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Grupo` to be created by this mutation."""
  grupo: GrupoInput!
}

"""An input for mutations affecting `Grupo`"""
input GrupoInput {
  id: BigInt
  nombre: String
  descripcion: String
  clienteId: BigInt!
  divisionId: BigInt
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""The output of our create `GruposArchivo` mutation."""
type CreateGruposArchivoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `GruposArchivo` that was created by this mutation."""
  gruposArchivo: GruposArchivo

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Grupo` that is related to this `GruposArchivo`."""
  grupo: Grupo

  """Reads a single `User` that is related to this `GruposArchivo`."""
  user: User

  """An edge for our `GruposArchivo`. May be used by Relay 1."""
  gruposArchivoEdge(
    """The method to use when ordering `GruposArchivo`."""
    orderBy: [GruposArchivosOrderBy!] = [PRIMARY_KEY_ASC]
  ): GruposArchivosEdge
}

"""All input for the create `GruposArchivo` mutation."""
input CreateGruposArchivoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `GruposArchivo` to be created by this mutation."""
  gruposArchivo: GruposArchivoInput!
}

"""An input for mutations affecting `GruposArchivo`"""
input GruposArchivoInput {
  id: BigInt
  grupoId: Int
  userId: Int
  path: String
  tipo: Int
  titulo: String
  nombre: String
  extension: String
  soloDocentes: Boolean
  descripcion: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `Hijo` mutation."""
type CreateHijoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Hijo` that was created by this mutation."""
  hijo: Hijo

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `Hijo`."""
  user: User

  """Reads a single `User` that is related to this `Hijo`."""
  uhijos: User

  """An edge for our `Hijo`. May be used by Relay 1."""
  hijoEdge(
    """The method to use when ordering `Hijo`."""
    orderBy: [HijosOrderBy!] = [PRIMARY_KEY_ASC]
  ): HijosEdge
}

"""All input for the create `Hijo` mutation."""
input CreateHijoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Hijo` to be created by this mutation."""
  hijo: HijoInput!
}

"""An input for mutations affecting `Hijo`"""
input HijoInput {
  id: BigInt
  userId: BigInt
  hijoId: Int
  createdAt: Datetime
  updatedAt: Datetime
  userIdOrig: BigInt
}

"""The output of our create `HistorialNotificacione` mutation."""
type CreateHistorialNotificacionePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `HistorialNotificacione` that was created by this mutation."""
  historialNotificacione: HistorialNotificacione

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `HistorialNotificacione`. May be used by Relay 1."""
  historialNotificacioneEdge(
    """The method to use when ordering `HistorialNotificacione`."""
    orderBy: [HistorialNotificacionesOrderBy!] = [PRIMARY_KEY_ASC]
  ): HistorialNotificacionesEdge
}

"""All input for the create `HistorialNotificacione` mutation."""
input CreateHistorialNotificacioneInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `HistorialNotificacione` to be created by this mutation."""
  historialNotificacione: HistorialNotificacioneInput!
}

"""An input for mutations affecting `HistorialNotificacione`"""
input HistorialNotificacioneInput {
  id: BigInt
  mensajeItemId: Int
  tipo: String
  token: String
  exitoso: Boolean
  resultado: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `Log` mutation."""
type CreateLogPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Log` that was created by this mutation."""
  log: Log

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Log`. May be used by Relay 1."""
  logEdge(
    """The method to use when ordering `Log`."""
    orderBy: [LogsOrderBy!] = [PRIMARY_KEY_ASC]
  ): LogsEdge
}

"""All input for the create `Log` mutation."""
input CreateLogInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Log` to be created by this mutation."""
  log: LogInput!
}

"""An input for mutations affecting `Log`"""
input LogInput {
  id: BigInt
  url: String
  token: String
  rolId: Int
  rol: String
  userId: Int
  email: String
  nombre: String
  clienteId: Int
  divisionId: Int
  params: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `MensajeItem` mutation."""
type CreateMensajeItemPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `MensajeItem` that was created by this mutation."""
  mensajeItem: MensajeItem

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Mensaje` that is related to this `MensajeItem`."""
  mensaje: Mensaje

  """An edge for our `MensajeItem`. May be used by Relay 1."""
  mensajeItemEdge(
    """The method to use when ordering `MensajeItem`."""
    orderBy: [MensajeItemsOrderBy!] = [PRIMARY_KEY_ASC]
  ): MensajeItemsEdge
}

"""All input for the create `MensajeItem` mutation."""
input CreateMensajeItemInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `MensajeItem` to be created by this mutation."""
  mensajeItem: MensajeItemInput!
}

"""An input for mutations affecting `MensajeItem`"""
input MensajeItemInput {
  id: BigInt
  mensajeId: BigInt!
  alumnoId: BigInt!
  tutorId: BigInt
  docenteId: BigInt
  estado: Int
  grupoId: BigInt
  fechaNotificacion: Datetime
  fechaRecepcion: Datetime
  fechaLectura: Datetime
  fechaConfirmacion: Datetime
  pushStatus: Int
  pushDetail: String
  awsEmailMessageid: String
  createdAt: Datetime
  updatedAt: Datetime
  docenteIdOrig: BigInt
  tutorIdOrig: BigInt
  alumnoIdOrig: BigInt
}

"""The output of our create `Mensaje` mutation."""
type CreateMensajePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Mensaje` that was created by this mutation."""
  mensaje: Mensaje

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Mensaje`. May be used by Relay 1."""
  mensajeEdge(
    """The method to use when ordering `Mensaje`."""
    orderBy: [MensajesOrderBy!] = [PRIMARY_KEY_ASC]
  ): MensajesEdge
}

"""All input for the create `Mensaje` mutation."""
input CreateMensajeInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Mensaje` to be created by this mutation."""
  mensaje: MensajeInput!
}

"""An input for mutations affecting `Mensaje`"""
input MensajeInput {
  id: BigInt
  titulo: String
  mensaje: String
  userEmisor: BigInt!
  rolEmisor: BigInt
  clienteId: BigInt!
  divisionId: BigInt!
  grupoId: BigInt
  estado: Int
  foto: String
  adjunto: String
  requiereConfirmacion: Int
  tipoMensaje: BigInt
  padreId: BigInt
  padreHilo: BigInt
  adminSenderId: BigInt
  aprobadoAt: Datetime
  aproboUser: Int
  request: String
  userEmisorOrig: BigInt
  cantHilos: Int
  destinatarios: String
  busqueda: String
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""The output of our create `MensajesAdmin` mutation."""
type CreateMensajesAdminPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `MensajesAdmin` that was created by this mutation."""
  mensajesAdmin: MensajesAdmin

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `MensajesAdmin`. May be used by Relay 1."""
  mensajesAdminEdge(
    """The method to use when ordering `MensajesAdmin`."""
    orderBy: [MensajesAdminsOrderBy!] = [PRIMARY_KEY_ASC]
  ): MensajesAdminsEdge
}

"""All input for the create `MensajesAdmin` mutation."""
input CreateMensajesAdminInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `MensajesAdmin` to be created by this mutation."""
  mensajesAdmin: MensajesAdminInput!
}

"""An input for mutations affecting `MensajesAdmin`"""
input MensajesAdminInput {
  id: BigInt
  asunto: String
  contenido: String
  destinatarios: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `MensajesArchivo` mutation."""
type CreateMensajesArchivoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `MensajesArchivo` that was created by this mutation."""
  mensajesArchivo: MensajesArchivo

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `MensajesArchivo`. May be used by Relay 1."""
  mensajesArchivoEdge(
    """The method to use when ordering `MensajesArchivo`."""
    orderBy: [MensajesArchivosOrderBy!] = [PRIMARY_KEY_ASC]
  ): MensajesArchivosEdge
}

"""All input for the create `MensajesArchivo` mutation."""
input CreateMensajesArchivoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `MensajesArchivo` to be created by this mutation."""
  mensajesArchivo: MensajesArchivoInput!
}

"""An input for mutations affecting `MensajesArchivo`"""
input MensajesArchivoInput {
  id: BigInt
  nombre: String
  extension: String
  mensajeId: BigInt
  path: String
  tipo: Boolean
  clienteId: BigInt
  eliminado: Boolean
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `MenuApp` mutation."""
type CreateMenuAppPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `MenuApp` that was created by this mutation."""
  menuApp: MenuApp

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `MenuApp`. May be used by Relay 1."""
  menuAppEdge(
    """The method to use when ordering `MenuApp`."""
    orderBy: [MenuAppsOrderBy!] = [PRIMARY_KEY_ASC]
  ): MenuAppsEdge
}

"""All input for the create `MenuApp` mutation."""
input CreateMenuAppInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `MenuApp` to be created by this mutation."""
  menuApp: MenuAppInput!
}

"""An input for mutations affecting `MenuApp`"""
input MenuAppInput {
  id: BigInt
  clienteId: Int
  divisionId: Int
  rotulo: String
  funcion: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `Migration` mutation."""
type CreateMigrationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Migration` that was created by this mutation."""
  migration: Migration

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Migration`. May be used by Relay 1."""
  migrationEdge(
    """The method to use when ordering `Migration`."""
    orderBy: [MigrationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): MigrationsEdge
}

"""All input for the create `Migration` mutation."""
input CreateMigrationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Migration` to be created by this mutation."""
  migration: MigrationInput!
}

"""An input for mutations affecting `Migration`"""
input MigrationInput {
  id: BigInt
  migration: String
  batch: Int!
}

"""The output of our create `Module` mutation."""
type CreateModulePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Module` that was created by this mutation."""
  module: Module

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Module`. May be used by Relay 1."""
  moduleEdge(
    """The method to use when ordering `Module`."""
    orderBy: [ModulesOrderBy!] = [PRIMARY_KEY_ASC]
  ): ModulesEdge
}

"""All input for the create `Module` mutation."""
input CreateModuleInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Module` to be created by this mutation."""
  module: ModuleInput!
}

"""An input for mutations affecting `Module`"""
input ModuleInput {
  id: BigInt
  slug: String
  nombre: String
}

"""The output of our create `ModulesBack` mutation."""
type CreateModulesBackPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `ModulesBack` that was created by this mutation."""
  modulesBack: ModulesBack

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `ModulesBack`. May be used by Relay 1."""
  modulesBackEdge(
    """The method to use when ordering `ModulesBack`."""
    orderBy: [ModulesBacksOrderBy!] = [PRIMARY_KEY_ASC]
  ): ModulesBacksEdge
}

"""All input for the create `ModulesBack` mutation."""
input CreateModulesBackInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `ModulesBack` to be created by this mutation."""
  modulesBack: ModulesBackInput!
}

"""An input for mutations affecting `ModulesBack`"""
input ModulesBackInput {
  id: BigInt
  slug: String
  nombre: String
}

"""The output of our create `MtCorregir` mutation."""
type CreateMtCorregirPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `MtCorregir` that was created by this mutation."""
  mtCorregir: MtCorregir

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `MtCorregir`. May be used by Relay 1."""
  mtCorregirEdge(
    """The method to use when ordering `MtCorregir`."""
    orderBy: [MtCorregirsOrderBy!] = [PRIMARY_KEY_ASC]
  ): MtCorregirsEdge
}

"""All input for the create `MtCorregir` mutation."""
input CreateMtCorregirInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `MtCorregir` to be created by this mutation."""
  mtCorregir: MtCorregirInput!
}

"""An input for mutations affecting `MtCorregir`"""
input MtCorregirInput {
  id: BigInt
  userId: String
  email: String
}

"""The output of our create `MultimediaMapping` mutation."""
type CreateMultimediaMappingPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `MultimediaMapping` that was created by this mutation."""
  multimediaMapping: MultimediaMapping

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `MultimediaMapping`. May be used by Relay 1."""
  multimediaMappingEdge(
    """The method to use when ordering `MultimediaMapping`."""
    orderBy: [MultimediaMappingsOrderBy!] = [PRIMARY_KEY_ASC]
  ): MultimediaMappingsEdge
}

"""All input for the create `MultimediaMapping` mutation."""
input CreateMultimediaMappingInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `MultimediaMapping` to be created by this mutation."""
  multimediaMapping: MultimediaMappingInput!
}

"""An input for mutations affecting `MultimediaMapping`"""
input MultimediaMappingInput {
  id: BigInt
  cloudinary: String
  s3: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `Noticia` mutation."""
type CreateNoticiaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Noticia` that was created by this mutation."""
  noticia: Noticia

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `Noticia`."""
  cliente: Cliente

  """Reads a single `Divisione` that is related to this `Noticia`."""
  division: Divisione

  """An edge for our `Noticia`. May be used by Relay 1."""
  noticiaEdge(
    """The method to use when ordering `Noticia`."""
    orderBy: [NoticiasOrderBy!] = [PRIMARY_KEY_ASC]
  ): NoticiasEdge
}

"""All input for the create `Noticia` mutation."""
input CreateNoticiaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Noticia` to be created by this mutation."""
  noticia: NoticiaInput!
}

"""An input for mutations affecting `Noticia`"""
input NoticiaInput {
  id: BigInt
  clienteId: BigInt!
  divisionId: BigInt
  titulo: String
  contenido: String
  imagen: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `Opcione` mutation."""
type CreateOpcionePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Opcione` that was created by this mutation."""
  opcione: Opcione

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Opcione`. May be used by Relay 1."""
  opcioneEdge(
    """The method to use when ordering `Opcione`."""
    orderBy: [OpcionesOrderBy!] = [PRIMARY_KEY_ASC]
  ): OpcionesEdge
}

"""All input for the create `Opcione` mutation."""
input CreateOpcioneInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Opcione` to be created by this mutation."""
  opcione: OpcioneInput!
}

"""An input for mutations affecting `Opcione`"""
input OpcioneInput {
  id: BigInt
  rotulo: String
  valor: String
  visible: Boolean
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `OpcionesDivision` mutation."""
type CreateOpcionesDivisionPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `OpcionesDivision` that was created by this mutation."""
  opcionesDivision: OpcionesDivision

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Divisione` that is related to this `OpcionesDivision`."""
  division: Divisione

  """An edge for our `OpcionesDivision`. May be used by Relay 1."""
  opcionesDivisionEdge(
    """The method to use when ordering `OpcionesDivision`."""
    orderBy: [OpcionesDivisionsOrderBy!] = [PRIMARY_KEY_ASC]
  ): OpcionesDivisionsEdge
}

"""All input for the create `OpcionesDivision` mutation."""
input CreateOpcionesDivisionInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `OpcionesDivision` to be created by this mutation."""
  opcionesDivision: OpcionesDivisionInput!
}

"""An input for mutations affecting `OpcionesDivision`"""
input OpcionesDivisionInput {
  id: BigInt
  rotulo: String
  nombre: String
  valor: String
  divisionId: Int
  tipo: String
  modulo: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `PasswordReset` mutation."""
type CreatePasswordResetPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `PasswordReset` that was created by this mutation."""
  passwordReset: PasswordReset

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `PasswordReset`. May be used by Relay 1."""
  passwordResetEdge(
    """The method to use when ordering `PasswordReset`."""
    orderBy: [PasswordResetsOrderBy!] = [NATURAL]
  ): PasswordResetsEdge
}

"""All input for the create `PasswordReset` mutation."""
input CreatePasswordResetInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `PasswordReset` to be created by this mutation."""
  passwordReset: PasswordResetInput!
}

"""An input for mutations affecting `PasswordReset`"""
input PasswordResetInput {
  email: String
  token: String
  createdAt: Datetime
}

"""The output of our create `Plantilla` mutation."""
type CreatePlantillaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Plantilla` that was created by this mutation."""
  plantilla: Plantilla

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `Plantilla`."""
  user: User

  """An edge for our `Plantilla`. May be used by Relay 1."""
  plantillaEdge(
    """The method to use when ordering `Plantilla`."""
    orderBy: [PlantillasOrderBy!] = [PRIMARY_KEY_ASC]
  ): PlantillasEdge
}

"""All input for the create `Plantilla` mutation."""
input CreatePlantillaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Plantilla` to be created by this mutation."""
  plantilla: PlantillaInput!
}

"""An input for mutations affecting `Plantilla`"""
input PlantillaInput {
  id: BigInt
  userId: Int
  nombre: String
  contenido: String
  categoria: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `Provincia` mutation."""
type CreateProvinciaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Provincia` that was created by this mutation."""
  provincia: Provincia

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Provincia`. May be used by Relay 1."""
  provinciaEdge(
    """The method to use when ordering `Provincia`."""
    orderBy: [ProvinciasOrderBy!] = [PRIMARY_KEY_ASC]
  ): ProvinciasEdge
}

"""All input for the create `Provincia` mutation."""
input CreateProvinciaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Provincia` to be created by this mutation."""
  provincia: ProvinciaInput!
}

"""An input for mutations affecting `Provincia`"""
input ProvinciaInput {
  id: BigInt
  nombre: String
}

"""The output of our create `Setting` mutation."""
type CreateSettingPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Setting` that was created by this mutation."""
  setting: Setting

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Setting`. May be used by Relay 1."""
  settingEdge(
    """The method to use when ordering `Setting`."""
    orderBy: [SettingsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SettingsEdge
}

"""All input for the create `Setting` mutation."""
input CreateSettingInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Setting` to be created by this mutation."""
  setting: SettingInput!
}

"""An input for mutations affecting `Setting`"""
input SettingInput {
  id: BigInt
  clienteId: BigInt!
  acercaTitulo: String
  acercaImagen: String
  acercaContenido: String
  acercaMarkerTitulo: String
  acercaLat: String
  acercaLon: String
  tituloEmail: String
  urlGooglePlay: String
  urlAppleStore: String
  urlCampus: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `TelescopeEntry` mutation."""
type CreateTelescopeEntryPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `TelescopeEntry` that was created by this mutation."""
  telescopeEntry: TelescopeEntry

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `TelescopeEntry`. May be used by Relay 1."""
  telescopeEntryEdge(
    """The method to use when ordering `TelescopeEntry`."""
    orderBy: [TelescopeEntriesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TelescopeEntriesEdge
}

"""All input for the create `TelescopeEntry` mutation."""
input CreateTelescopeEntryInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `TelescopeEntry` to be created by this mutation."""
  telescopeEntry: TelescopeEntryInput!
}

"""An input for mutations affecting `TelescopeEntry`"""
input TelescopeEntryInput {
  sequence: BigInt
  uuid: String
  batchId: String
  familyHash: String
  shouldDisplayOnIndex: Boolean
  type: String
  content: String!
  createdAt: Datetime
}

"""The output of our create `TelescopeEntriesTag` mutation."""
type CreateTelescopeEntriesTagPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `TelescopeEntriesTag` that was created by this mutation."""
  telescopeEntriesTag: TelescopeEntriesTag

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `TelescopeEntry` that is related to this `TelescopeEntriesTag`.
  """
  entry: TelescopeEntry

  """An edge for our `TelescopeEntriesTag`. May be used by Relay 1."""
  telescopeEntriesTagEdge(
    """The method to use when ordering `TelescopeEntriesTag`."""
    orderBy: [TelescopeEntriesTagsOrderBy!] = [NATURAL]
  ): TelescopeEntriesTagsEdge
}

"""All input for the create `TelescopeEntriesTag` mutation."""
input CreateTelescopeEntriesTagInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `TelescopeEntriesTag` to be created by this mutation."""
  telescopeEntriesTag: TelescopeEntriesTagInput!
}

"""An input for mutations affecting `TelescopeEntriesTag`"""
input TelescopeEntriesTagInput {
  entryUuid: String
  tag: String
}

"""The output of our create `TelescopeMonitoring` mutation."""
type CreateTelescopeMonitoringPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `TelescopeMonitoring` that was created by this mutation."""
  telescopeMonitoring: TelescopeMonitoring

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `TelescopeMonitoring`. May be used by Relay 1."""
  telescopeMonitoringEdge(
    """The method to use when ordering `TelescopeMonitoring`."""
    orderBy: [TelescopeMonitoringsOrderBy!] = [NATURAL]
  ): TelescopeMonitoringsEdge
}

"""All input for the create `TelescopeMonitoring` mutation."""
input CreateTelescopeMonitoringInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `TelescopeMonitoring` to be created by this mutation."""
  telescopeMonitoring: TelescopeMonitoringInput!
}

"""An input for mutations affecting `TelescopeMonitoring`"""
input TelescopeMonitoringInput {
  tag: String
}

"""The output of our create `Tip` mutation."""
type CreateTipPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Tip` that was created by this mutation."""
  tip: Tip

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `Tip`."""
  cliente: Cliente

  """Reads a single `Divisione` that is related to this `Tip`."""
  division: Divisione

  """An edge for our `Tip`. May be used by Relay 1."""
  tipEdge(
    """The method to use when ordering `Tip`."""
    orderBy: [TipsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TipsEdge
}

"""All input for the create `Tip` mutation."""
input CreateTipInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Tip` to be created by this mutation."""
  tip: TipInput!
}

"""An input for mutations affecting `Tip`"""
input TipInput {
  id: BigInt
  clienteId: BigInt!
  divisionId: BigInt
  titulo: String
  contenido: String
  imagen: String
  tags: String
  orden: BigInt
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `User` mutation."""
type CreateUserPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `User` that was created by this mutation."""
  user: User

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Provincia` that is related to this `User`."""
  provincia: Provincia

  """Reads a single `City` that is related to this `User`."""
  ciudad: City

  """An edge for our `User`. May be used by Relay 1."""
  userEdge(
    """The method to use when ordering `User`."""
    orderBy: [UsersOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsersEdge
}

"""All input for the create `User` mutation."""
input CreateUserInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `User` to be created by this mutation."""
  user: UserInput!
}

"""An input for mutations affecting `User`"""
input UserInput {
  id: BigInt!
  nombre: String
  apellido: String
  dni: String
  fechaNacimiento: Date
  sexo: String
  foto: String
  email: String
  telefono: String
  password: String
  domicilio: String
  provinciaId: Int
  ciudadId: Int
  perfil: String
  observaciones: String
  rememberToken: String
  recoveryToken: String
  grupoFamiliarId: BigInt
  permisoAdmin: Int
  recibirEmails: Int
  lastAction: Datetime
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
  deletedBy: BigInt
}

"""The output of our create `UsersConfiguracion` mutation."""
type CreateUsersConfiguracionPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `UsersConfiguracion` that was created by this mutation."""
  usersConfiguracion: UsersConfiguracion

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `UsersConfiguracion`."""
  user: User

  """
  Reads a single `Divisione` that is related to this `UsersConfiguracion`.
  """
  division: Divisione

  """An edge for our `UsersConfiguracion`. May be used by Relay 1."""
  usersConfiguracionEdge(
    """The method to use when ordering `UsersConfiguracion`."""
    orderBy: [UsersConfiguracionsOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsersConfiguracionsEdge
}

"""All input for the create `UsersConfiguracion` mutation."""
input CreateUsersConfiguracionInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `UsersConfiguracion` to be created by this mutation."""
  usersConfiguracion: UsersConfiguracionInput!
}

"""An input for mutations affecting `UsersConfiguracion`"""
input UsersConfiguracionInput {
  id: BigInt
  userId: Int
  divisionId: Int
  mensajesGlobales: Boolean
  mensajesAutoaprobables: Boolean
  actividadesAutoaprobables: Boolean
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `UsersGrupo` mutation."""
type CreateUsersGrupoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `UsersGrupo` that was created by this mutation."""
  usersGrupo: UsersGrupo

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `UsersGrupo`."""
  user: User

  """Reads a single `Grupo` that is related to this `UsersGrupo`."""
  grupo: Grupo

  """An edge for our `UsersGrupo`. May be used by Relay 1."""
  usersGrupoEdge(
    """The method to use when ordering `UsersGrupo`."""
    orderBy: [UsersGruposOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsersGruposEdge
}

"""All input for the create `UsersGrupo` mutation."""
input CreateUsersGrupoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `UsersGrupo` to be created by this mutation."""
  usersGrupo: UsersGrupoInput!
}

"""An input for mutations affecting `UsersGrupo`"""
input UsersGrupoInput {
  id: BigInt
  userId: BigInt!
  grupoId: BigInt!
  autoaprueba: Int
  visibleGrupal: Int
  createdAt: Datetime
  updatedAt: Datetime
  userIdOrig: BigInt
}

"""The output of our create `UsersInactivo` mutation."""
type CreateUsersInactivoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `UsersInactivo` that was created by this mutation."""
  usersInactivo: UsersInactivo

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `UsersInactivo`. May be used by Relay 1."""
  usersInactivoEdge(
    """The method to use when ordering `UsersInactivo`."""
    orderBy: [UsersInactivosOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsersInactivosEdge
}

"""All input for the create `UsersInactivo` mutation."""
input CreateUsersInactivoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `UsersInactivo` to be created by this mutation."""
  usersInactivo: UsersInactivoInput!
}

"""An input for mutations affecting `UsersInactivo`"""
input UsersInactivoInput {
  id: BigInt
  userId: Int
  clienteId: Int
  password: String
  messageId: String
  statusMessage: String
  fechaEntrega: Datetime
  fechaLectura: Datetime
  fechaLogin: Datetime
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `UsersRole` mutation."""
type CreateUsersRolePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `UsersRole` that was created by this mutation."""
  usersRole: UsersRole

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `UsersRole`."""
  user: User

  """Reads a single `Cliente` that is related to this `UsersRole`."""
  usersRolesCliente: Cliente

  """Reads a single `Divisione` that is related to this `UsersRole`."""
  usersRolesDivision: Divisione

  """An edge for our `UsersRole`. May be used by Relay 1."""
  usersRoleEdge(
    """The method to use when ordering `UsersRole`."""
    orderBy: [UsersRolesOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsersRolesEdge
}

"""All input for the create `UsersRole` mutation."""
input CreateUsersRoleInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `UsersRole` to be created by this mutation."""
  usersRole: UsersRoleInput!
}

"""An input for mutations affecting `UsersRole`"""
input UsersRoleInput {
  usersRolesId: BigInt
  userId: BigInt!
  rol: String
  alumnoIndependiente: Boolean
  usersRolesClienteId: Int!
  usersRolesDivisionId: Int
  fechaInicioActividades: Datetime
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our create `Versione` mutation."""
type CreateVersionePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Versione` that was created by this mutation."""
  versione: Versione

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `Versione`."""
  cliente: Cliente

  """An edge for our `Versione`. May be used by Relay 1."""
  versioneEdge(
    """The method to use when ordering `Versione`."""
    orderBy: [VersionesOrderBy!] = [PRIMARY_KEY_ASC]
  ): VersionesEdge
}

"""All input for the create `Versione` mutation."""
input CreateVersioneInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `Versione` to be created by this mutation."""
  versione: VersioneInput!
}

"""An input for mutations affecting `Versione`"""
input VersioneInput {
  id: BigInt
  nombre: String
  version: String
  otaVersion: String
  clienteId: Int
  appleStoreUrl: String
  playStoreUrl: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""The output of our update `Activity` mutation."""
type UpdateActivityPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Activity` that was updated by this mutation."""
  activity: Activity

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `EspaciosCurriculare` that is related to this `Activity`.
  """
  espacioCurricular: EspaciosCurriculare

  """Reads a single `Grupo` that is related to this `Activity`."""
  grupo: Grupo

  """Reads a single `Divisione` that is related to this `Activity`."""
  division: Divisione

  """Reads a single `User` that is related to this `Activity`."""
  docente: User

  """
  Reads a single `CalificacionesConcepto` that is related to this `Activity`.
  """
  calificacionConcepto: CalificacionesConcepto

  """An edge for our `Activity`. May be used by Relay 1."""
  activityEdge(
    """The method to use when ordering `Activity`."""
    orderBy: [ActivitiesOrderBy!] = [PRIMARY_KEY_ASC]
  ): ActivitiesEdge
}

"""All input for the `updateActivityByNodeId` mutation."""
input UpdateActivityByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Activity` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Activity` being updated.
  """
  patch: ActivityPatch!
}

"""
Represents an update to a `Activity`. Fields that are set will be updated.
"""
input ActivityPatch {
  id: BigInt
  nombre: String
  fechaInicio: Datetime
  fechaEntrega: Datetime
  espacioCurricularId: Int
  grupoId: Int
  divisionId: Int
  docenteId: Int
  calificable: Boolean
  calificacionConceptoId: Int
  descripcion: String
  borrador: Boolean
  aprobada: Boolean
  fechaAprobacion: Datetime
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""All input for the `updateActivity` mutation."""
input UpdateActivityInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Activity` being updated.
  """
  patch: ActivityPatch!
  id: BigInt!
}

"""The output of our update `ActividadesAlumno` mutation."""
type UpdateActividadesAlumnoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `ActividadesAlumno` that was updated by this mutation."""
  actividadesAlumno: ActividadesAlumno

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Activity` that is related to this `ActividadesAlumno`."""
  actividad: Activity

  """Reads a single `User` that is related to this `ActividadesAlumno`."""
  alumno: User

  """An edge for our `ActividadesAlumno`. May be used by Relay 1."""
  actividadesAlumnoEdge(
    """The method to use when ordering `ActividadesAlumno`."""
    orderBy: [ActividadesAlumnosOrderBy!] = [PRIMARY_KEY_ASC]
  ): ActividadesAlumnosEdge
}

"""All input for the `updateActividadesAlumnoByNodeId` mutation."""
input UpdateActividadesAlumnoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `ActividadesAlumno` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `ActividadesAlumno` being updated.
  """
  patch: ActividadesAlumnoPatch!
}

"""
Represents an update to a `ActividadesAlumno`. Fields that are set will be updated.
"""
input ActividadesAlumnoPatch {
  id: BigInt
  actividadId: Int
  alumnoId: Int
}

"""All input for the `updateActividadesAlumno` mutation."""
input UpdateActividadesAlumnoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `ActividadesAlumno` being updated.
  """
  patch: ActividadesAlumnoPatch!
  id: BigInt!
}

"""The output of our update `ActividadesArchivo` mutation."""
type UpdateActividadesArchivoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `ActividadesArchivo` that was updated by this mutation."""
  actividadesArchivo: ActividadesArchivo

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Activity` that is related to this `ActividadesArchivo`.
  """
  actividad: Activity

  """
  Reads a single `ActividadesEntregas` that is related to this `ActividadesArchivo`.
  """
  entrega: ActividadesEntregas

  """Reads a single `User` that is related to this `ActividadesArchivo`."""
  user: User

  """An edge for our `ActividadesArchivo`. May be used by Relay 1."""
  actividadesArchivoEdge(
    """The method to use when ordering `ActividadesArchivo`."""
    orderBy: [ActividadesArchivosOrderBy!] = [PRIMARY_KEY_ASC]
  ): ActividadesArchivosEdge
}

"""All input for the `updateActividadesArchivoByNodeId` mutation."""
input UpdateActividadesArchivoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `ActividadesArchivo` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `ActividadesArchivo` being updated.
  """
  patch: ActividadesArchivoPatch!
}

"""
Represents an update to a `ActividadesArchivo`. Fields that are set will be updated.
"""
input ActividadesArchivoPatch {
  id: BigInt
  actividadId: Int
  entregaId: Int
  userId: Int
  path: String
  tipo: Int
  titulo: String
  nombre: String
  extension: String
  soloDocentes: Boolean
  descripcion: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateActividadesArchivo` mutation."""
input UpdateActividadesArchivoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `ActividadesArchivo` being updated.
  """
  patch: ActividadesArchivoPatch!
  id: BigInt!
}

"""The output of our update `ActividadesEntregas` mutation."""
type UpdateActividadesEntregasPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `ActividadesEntregas` that was updated by this mutation."""
  actividadesEntregas: ActividadesEntregas

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Activity` that is related to this `ActividadesEntregas`.
  """
  actividad: Activity

  """Reads a single `User` that is related to this `ActividadesEntregas`."""
  alumno: User

  """An edge for our `ActividadesEntregas`. May be used by Relay 1."""
  actividadesEntregasEdge(
    """The method to use when ordering `ActividadesEntregas`."""
    orderBy: [ActividadesEntregasesOrderBy!] = [PRIMARY_KEY_ASC]
  ): ActividadesEntregasesEdge
}

"""All input for the `updateActividadesEntregasByNodeId` mutation."""
input UpdateActividadesEntregasByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `ActividadesEntregas` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `ActividadesEntregas` being updated.
  """
  patch: ActividadesEntregasPatch!
}

"""
Represents an update to a `ActividadesEntregas`. Fields that are set will be updated.
"""
input ActividadesEntregasPatch {
  id: BigInt
  actividadId: Int
  alumnoId: Int
  contenido: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateActividadesEntregas` mutation."""
input UpdateActividadesEntregasInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `ActividadesEntregas` being updated.
  """
  patch: ActividadesEntregasPatch!
  id: BigInt!
}

"""The output of our update `ActividadesEntregasComentario` mutation."""
type UpdateActividadesEntregasComentarioPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `ActividadesEntregasComentario` that was updated by this mutation."""
  actividadesEntregasComentario: ActividadesEntregasComentario

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `ActividadesEntregas` that is related to this `ActividadesEntregasComentario`.
  """
  entrega: ActividadesEntregas

  """
  Reads a single `User` that is related to this `ActividadesEntregasComentario`.
  """
  user: User

  """
  An edge for our `ActividadesEntregasComentario`. May be used by Relay 1.
  """
  actividadesEntregasComentarioEdge(
    """The method to use when ordering `ActividadesEntregasComentario`."""
    orderBy: [ActividadesEntregasComentariosOrderBy!] = [PRIMARY_KEY_ASC]
  ): ActividadesEntregasComentariosEdge
}

"""
All input for the `updateActividadesEntregasComentarioByNodeId` mutation.
"""
input UpdateActividadesEntregasComentarioByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `ActividadesEntregasComentario` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `ActividadesEntregasComentario` being updated.
  """
  patch: ActividadesEntregasComentarioPatch!
}

"""
Represents an update to a `ActividadesEntregasComentario`. Fields that are set will be updated.
"""
input ActividadesEntregasComentarioPatch {
  id: BigInt
  entregaId: BigInt
  userId: BigInt
  comentario: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateActividadesEntregasComentario` mutation."""
input UpdateActividadesEntregasComentarioInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `ActividadesEntregasComentario` being updated.
  """
  patch: ActividadesEntregasComentarioPatch!
  id: BigInt!
}

"""The output of our update `ActivityLog` mutation."""
type UpdateActivityLogPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `ActivityLog` that was updated by this mutation."""
  activityLog: ActivityLog

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `ActivityLog`. May be used by Relay 1."""
  activityLogEdge(
    """The method to use when ordering `ActivityLog`."""
    orderBy: [ActivityLogsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ActivityLogsEdge
}

"""All input for the `updateActivityLogByNodeId` mutation."""
input UpdateActivityLogByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `ActivityLog` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `ActivityLog` being updated.
  """
  patch: ActivityLogPatch!
}

"""
Represents an update to a `ActivityLog`. Fields that are set will be updated.
"""
input ActivityLogPatch {
  id: BigInt
  logName: String
  description: String
  subjectId: Int
  subjectType: String
  causerId: Int
  causerType: String
  properties: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateActivityLog` mutation."""
input UpdateActivityLogInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `ActivityLog` being updated.
  """
  patch: ActivityLogPatch!
  id: BigInt!
}

"""The output of our update `AdmAporte` mutation."""
type UpdateAdmAportePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmAporte` that was updated by this mutation."""
  admAporte: AdmAporte

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `AdmAporte`. May be used by Relay 1."""
  admAporteEdge(
    """The method to use when ordering `AdmAporte`."""
    orderBy: [AdmAportesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmAportesEdge
}

"""All input for the `updateAdmAporteByNodeId` mutation."""
input UpdateAdmAporteByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmAporte` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `AdmAporte` being updated.
  """
  patch: AdmAportePatch!
}

"""
Represents an update to a `AdmAporte`. Fields that are set will be updated.
"""
input AdmAportePatch {
  id: BigInt
  aportante: String
  monto: BigFloat
  path: String
  observaciones: String
  clienteId: BigInt
  userCreator: BigInt
  fechaAporte: Datetime
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""All input for the `updateAdmAporte` mutation."""
input UpdateAdmAporteInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `AdmAporte` being updated.
  """
  patch: AdmAportePatch!
  id: BigInt!
}

"""The output of our update `AdmBanco` mutation."""
type UpdateAdmBancoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmBanco` that was updated by this mutation."""
  admBanco: AdmBanco

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `AdmBanco`. May be used by Relay 1."""
  admBancoEdge(
    """The method to use when ordering `AdmBanco`."""
    orderBy: [AdmBancosOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmBancosEdge
}

"""All input for the `updateAdmBancoByNodeId` mutation."""
input UpdateAdmBancoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmBanco` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `AdmBanco` being updated.
  """
  patch: AdmBancoPatch!
}

"""
Represents an update to a `AdmBanco`. Fields that are set will be updated.
"""
input AdmBancoPatch {
  id: BigInt
  nombre: String
  telefono: String
  contactoComercial: String
  clienteId: BigInt
  estado: Int
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""All input for the `updateAdmBanco` mutation."""
input UpdateAdmBancoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `AdmBanco` being updated.
  """
  patch: AdmBancoPatch!
  id: BigInt!
}

"""The output of our update `AdmBancosCuenta` mutation."""
type UpdateAdmBancosCuentaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmBancosCuenta` that was updated by this mutation."""
  admBancosCuenta: AdmBancosCuenta

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `AdmBanco` that is related to this `AdmBancosCuenta`."""
  banco: AdmBanco

  """Reads a single `Cliente` that is related to this `AdmBancosCuenta`."""
  cliente: Cliente

  """An edge for our `AdmBancosCuenta`. May be used by Relay 1."""
  admBancosCuentaEdge(
    """The method to use when ordering `AdmBancosCuenta`."""
    orderBy: [AdmBancosCuentasOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmBancosCuentasEdge
}

"""All input for the `updateAdmBancosCuentaByNodeId` mutation."""
input UpdateAdmBancosCuentaByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmBancosCuenta` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `AdmBancosCuenta` being updated.
  """
  patch: AdmBancosCuentaPatch!
}

"""
Represents an update to a `AdmBancosCuenta`. Fields that are set will be updated.
"""
input AdmBancosCuentaPatch {
  id: BigInt
  nombre: String
  cbu: String
  aliasCbu: String
  bancoId: BigInt
  clienteId: BigInt
  descripcionLarga: String
  saldo: BigFloat
  cuentaId: Int
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""All input for the `updateAdmBancosCuenta` mutation."""
input UpdateAdmBancosCuentaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `AdmBancosCuenta` being updated.
  """
  patch: AdmBancosCuentaPatch!
  id: BigInt!
}

"""The output of our update `AdmCaja` mutation."""
type UpdateAdmCajaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmCaja` that was updated by this mutation."""
  admCaja: AdmCaja

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `AdmCaja`."""
  user: User

  """Reads a single `Cliente` that is related to this `AdmCaja`."""
  cliente: Cliente

  """An edge for our `AdmCaja`. May be used by Relay 1."""
  admCajaEdge(
    """The method to use when ordering `AdmCaja`."""
    orderBy: [AdmCajasOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmCajasEdge
}

"""All input for the `updateAdmCajaByNodeId` mutation."""
input UpdateAdmCajaByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmCaja` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `AdmCaja` being updated.
  """
  patch: AdmCajaPatch!
}

"""
Represents an update to a `AdmCaja`. Fields that are set will be updated.
"""
input AdmCajaPatch {
  id: BigInt
  userId: BigInt
  clienteId: BigInt
  saldoInicial: Float
  cerradaAt: Datetime
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""All input for the `updateAdmCaja` mutation."""
input UpdateAdmCajaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `AdmCaja` being updated.
  """
  patch: AdmCajaPatch!
  id: BigInt!
}

"""The output of our update `AdmCegreso` mutation."""
type UpdateAdmCegresoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmCegreso` that was updated by this mutation."""
  admCegreso: AdmCegreso

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `AdmCegreso`."""
  cliente: Cliente

  """Reads a single `AdmCuenta` that is related to this `AdmCegreso`."""
  cuenta: AdmCuenta

  """An edge for our `AdmCegreso`. May be used by Relay 1."""
  admCegresoEdge(
    """The method to use when ordering `AdmCegreso`."""
    orderBy: [AdmCegresosOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmCegresosEdge
}

"""All input for the `updateAdmCegresoByNodeId` mutation."""
input UpdateAdmCegresoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmCegreso` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `AdmCegreso` being updated.
  """
  patch: AdmCegresoPatch!
}

"""
Represents an update to a `AdmCegreso`. Fields that are set will be updated.
"""
input AdmCegresoPatch {
  id: BigInt
  nombre: String
  valorDefecto: BigFloat
  clienteId: BigInt
  cuentaId: BigInt
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""All input for the `updateAdmCegreso` mutation."""
input UpdateAdmCegresoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `AdmCegreso` being updated.
  """
  patch: AdmCegresoPatch!
  id: BigInt!
}

"""The output of our update `AdmCingreso` mutation."""
type UpdateAdmCingresoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmCingreso` that was updated by this mutation."""
  admCingreso: AdmCingreso

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `AdmCingreso`."""
  cliente: Cliente

  """Reads a single `AdmCuenta` that is related to this `AdmCingreso`."""
  cuenta: AdmCuenta

  """An edge for our `AdmCingreso`. May be used by Relay 1."""
  admCingresoEdge(
    """The method to use when ordering `AdmCingreso`."""
    orderBy: [AdmCingresosOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmCingresosEdge
}

"""All input for the `updateAdmCingresoByNodeId` mutation."""
input UpdateAdmCingresoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmCingreso` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `AdmCingreso` being updated.
  """
  patch: AdmCingresoPatch!
}

"""
Represents an update to a `AdmCingreso`. Fields that are set will be updated.
"""
input AdmCingresoPatch {
  id: BigInt
  nombre: String
  cicloLectivo: BigInt
  valorDefecto: BigFloat
  clienteId: BigInt
  cuentaId: BigInt
  tipoCobro: Int
  emitirComprobante: Boolean
  estado: Boolean
  permitirPagoAdelantado: Boolean
  interesMensualDefecto: Float
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""All input for the `updateAdmCingreso` mutation."""
input UpdateAdmCingresoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `AdmCingreso` being updated.
  """
  patch: AdmCingresoPatch!
  id: BigInt!
}

"""The output of our update `AdmCingresosValore` mutation."""
type UpdateAdmCingresosValorePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmCingresosValore` that was updated by this mutation."""
  admCingresosValore: AdmCingresosValore

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `AdmCingreso` that is related to this `AdmCingresosValore`.
  """
  cingreso: AdmCingreso

  """Reads a single `Cliente` that is related to this `AdmCingresosValore`."""
  cliente: Cliente

  """
  Reads a single `Divisione` that is related to this `AdmCingresosValore`.
  """
  division: Divisione

  """An edge for our `AdmCingresosValore`. May be used by Relay 1."""
  admCingresosValoreEdge(
    """The method to use when ordering `AdmCingresosValore`."""
    orderBy: [AdmCingresosValoresOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmCingresosValoresEdge
}

"""All input for the `updateAdmCingresosValoreByNodeId` mutation."""
input UpdateAdmCingresosValoreByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmCingresosValore` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `AdmCingresosValore` being updated.
  """
  patch: AdmCingresosValorePatch!
}

"""
Represents an update to a `AdmCingresosValore`. Fields that are set will be updated.
"""
input AdmCingresosValorePatch {
  id: BigInt
  cingresoId: BigInt
  clienteId: BigInt
  grupoId: BigInt
  diferido: Int
  cuota: Int
  cuotafloat: Float
  valor: Float
  diaV1: BigInt
  valorV1: Float
  diaV2: BigInt
  valorV2: Float
  divisionId: BigInt
  estado: Int
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""All input for the `updateAdmCingresosValore` mutation."""
input UpdateAdmCingresosValoreInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `AdmCingresosValore` being updated.
  """
  patch: AdmCingresosValorePatch!
  id: BigInt!
}

"""The output of our update `AdmCuenta` mutation."""
type UpdateAdmCuentaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmCuenta` that was updated by this mutation."""
  admCuenta: AdmCuenta

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `AdmCuenta`. May be used by Relay 1."""
  admCuentaEdge(
    """The method to use when ordering `AdmCuenta`."""
    orderBy: [AdmCuentasOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmCuentasEdge
}

"""All input for the `updateAdmCuentaByNodeId` mutation."""
input UpdateAdmCuentaByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmCuenta` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `AdmCuenta` being updated.
  """
  patch: AdmCuentaPatch!
}

"""
Represents an update to a `AdmCuenta`. Fields that are set will be updated.
"""
input AdmCuentaPatch {
  id: BigInt
  numero: String
  nombre: String
  descripcion: String
  balance: BigFloat
  tipo: String
  clienteId: Int
  parentId: BigInt
  habilitadaEgresos: Int
  createdAt: Datetime
  editable: Int
  updatedAt: Datetime
  deletedAt: Datetime
}

"""All input for the `updateAdmCuenta` mutation."""
input UpdateAdmCuentaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `AdmCuenta` being updated.
  """
  patch: AdmCuentaPatch!
  id: BigInt!
}

"""The output of our update `AdmDescuento` mutation."""
type UpdateAdmDescuentoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmDescuento` that was updated by this mutation."""
  admDescuento: AdmDescuento

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `AdmDescuento`. May be used by Relay 1."""
  admDescuentoEdge(
    """The method to use when ordering `AdmDescuento`."""
    orderBy: [AdmDescuentosOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmDescuentosEdge
}

"""All input for the `updateAdmDescuentoByNodeId` mutation."""
input UpdateAdmDescuentoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmDescuento` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `AdmDescuento` being updated.
  """
  patch: AdmDescuentoPatch!
}

"""
Represents an update to a `AdmDescuento`. Fields that are set will be updated.
"""
input AdmDescuentoPatch {
  id: BigInt
  clienteId: BigInt
  nombre: String
  estado: Int
  agotado: Int
  tipo: Int
  formato: Int
  monto: Float
  porcentaje: Float
  descuentoAplicable: Int
  fechaHastaIndefinido: Int
  fechaHastaValidez: Datetime
  fechaDesdeValidez: Datetime
  conceptoIngreso: BigInt
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""All input for the `updateAdmDescuento` mutation."""
input UpdateAdmDescuentoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `AdmDescuento` being updated.
  """
  patch: AdmDescuentoPatch!
  id: BigInt!
}

"""The output of our update `AdmDescuentosGrupo` mutation."""
type UpdateAdmDescuentosGrupoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmDescuentosGrupo` that was updated by this mutation."""
  admDescuentosGrupo: AdmDescuentosGrupo

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `AdmDescuentosGrupo`. May be used by Relay 1."""
  admDescuentosGrupoEdge(
    """The method to use when ordering `AdmDescuentosGrupo`."""
    orderBy: [AdmDescuentosGruposOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmDescuentosGruposEdge
}

"""All input for the `updateAdmDescuentosGrupoByNodeId` mutation."""
input UpdateAdmDescuentosGrupoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmDescuentosGrupo` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `AdmDescuentosGrupo` being updated.
  """
  patch: AdmDescuentosGrupoPatch!
}

"""
Represents an update to a `AdmDescuentosGrupo`. Fields that are set will be updated.
"""
input AdmDescuentosGrupoPatch {
  id: BigInt
  descuentoId: BigInt
  grupoId: BigInt
  tipoGrupo: Boolean
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateAdmDescuentosGrupo` mutation."""
input UpdateAdmDescuentosGrupoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `AdmDescuentosGrupo` being updated.
  """
  patch: AdmDescuentosGrupoPatch!
  id: BigInt!
}

"""The output of our update `AdmDescuentosGruposFamiliare` mutation."""
type UpdateAdmDescuentosGruposFamiliarePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmDescuentosGruposFamiliare` that was updated by this mutation."""
  admDescuentosGruposFamiliare: AdmDescuentosGruposFamiliare

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `AdmDescuento` that is related to this `AdmDescuentosGruposFamiliare`.
  """
  descuento: AdmDescuento

  """
  Reads a single `AdmGruposFamiliare` that is related to this `AdmDescuentosGruposFamiliare`.
  """
  grupoFamiliar: AdmGruposFamiliare

  """
  An edge for our `AdmDescuentosGruposFamiliare`. May be used by Relay 1.
  """
  admDescuentosGruposFamiliareEdge(
    """The method to use when ordering `AdmDescuentosGruposFamiliare`."""
    orderBy: [AdmDescuentosGruposFamiliaresOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmDescuentosGruposFamiliaresEdge
}

"""
All input for the `updateAdmDescuentosGruposFamiliareByNodeId` mutation.
"""
input UpdateAdmDescuentosGruposFamiliareByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmDescuentosGruposFamiliare` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `AdmDescuentosGruposFamiliare` being updated.
  """
  patch: AdmDescuentosGruposFamiliarePatch!
}

"""
Represents an update to a `AdmDescuentosGruposFamiliare`. Fields that are set will be updated.
"""
input AdmDescuentosGruposFamiliarePatch {
  id: BigInt
  descuentoId: BigInt
  grupoFamiliarId: BigInt
  tipoGrupo: Boolean
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateAdmDescuentosGruposFamiliare` mutation."""
input UpdateAdmDescuentosGruposFamiliareInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `AdmDescuentosGruposFamiliare` being updated.
  """
  patch: AdmDescuentosGruposFamiliarePatch!
  id: BigInt!
}

"""The output of our update `AdmEgresoItem` mutation."""
type UpdateAdmEgresoItemPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmEgresoItem` that was updated by this mutation."""
  admEgresoItem: AdmEgresoItem

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `AdmEgreso` that is related to this `AdmEgresoItem`."""
  egreso: AdmEgreso

  """Reads a single `AdmCegreso` that is related to this `AdmEgresoItem`."""
  conceptoEgreso: AdmCegreso

  """Reads a single `Cliente` that is related to this `AdmEgresoItem`."""
  cliente: Cliente

  """An edge for our `AdmEgresoItem`. May be used by Relay 1."""
  admEgresoItemEdge(
    """The method to use when ordering `AdmEgresoItem`."""
    orderBy: [AdmEgresoItemsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmEgresoItemsEdge
}

"""All input for the `updateAdmEgresoItemByNodeId` mutation."""
input UpdateAdmEgresoItemByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmEgresoItem` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `AdmEgresoItem` being updated.
  """
  patch: AdmEgresoItemPatch!
}

"""
Represents an update to a `AdmEgresoItem`. Fields that are set will be updated.
"""
input AdmEgresoItemPatch {
  id: BigInt
  egresoId: BigInt
  conceptoEgresoId: BigInt
  precio: BigFloat
  cantidad: BigInt
  importe: BigFloat
  observaciones: String
  clienteId: Int
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""All input for the `updateAdmEgresoItem` mutation."""
input UpdateAdmEgresoItemInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `AdmEgresoItem` being updated.
  """
  patch: AdmEgresoItemPatch!
  id: BigInt!
}

"""The output of our update `AdmEgreso` mutation."""
type UpdateAdmEgresoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmEgreso` that was updated by this mutation."""
  admEgreso: AdmEgreso

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `AdmProveedore` that is related to this `AdmEgreso`."""
  proveedor: AdmProveedore

  """Reads a single `Cliente` that is related to this `AdmEgreso`."""
  cliente: Cliente

  """Reads a single `Divisione` that is related to this `AdmEgreso`."""
  division: Divisione

  """Reads a single `User` that is related to this `AdmEgreso`."""
  userByUserCreator: User

  """An edge for our `AdmEgreso`. May be used by Relay 1."""
  admEgresoEdge(
    """The method to use when ordering `AdmEgreso`."""
    orderBy: [AdmEgresosOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmEgresosEdge
}

"""All input for the `updateAdmEgresoByNodeId` mutation."""
input UpdateAdmEgresoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmEgreso` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `AdmEgreso` being updated.
  """
  patch: AdmEgresoPatch!
}

"""
Represents an update to a `AdmEgreso`. Fields that are set will be updated.
"""
input AdmEgresoPatch {
  id: BigInt
  proveedorId: BigInt
  tipoComprobante: BigInt
  numeroComprobante: String
  fechaComprobante: Datetime
  fechaPago: Datetime
  monto: BigFloat
  path: String
  observaciones: String
  clienteId: BigInt
  divisionId: BigInt
  userCreator: BigInt
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""All input for the `updateAdmEgreso` mutation."""
input UpdateAdmEgresoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `AdmEgreso` being updated.
  """
  patch: AdmEgresoPatch!
  id: BigInt!
}

"""The output of our update `AdmFacturaItem` mutation."""
type UpdateAdmFacturaItemPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmFacturaItem` that was updated by this mutation."""
  admFacturaItem: AdmFacturaItem

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `AdmFactura` that is related to this `AdmFacturaItem`."""
  factura: AdmFactura

  """Reads a single `AdmCingreso` that is related to this `AdmFacturaItem`."""
  conceptoIngreso: AdmCingreso

  """Reads a single `Cliente` that is related to this `AdmFacturaItem`."""
  cliente: Cliente

  """Reads a single `User` that is related to this `AdmFacturaItem`."""
  user: User

  """An edge for our `AdmFacturaItem`. May be used by Relay 1."""
  admFacturaItemEdge(
    """The method to use when ordering `AdmFacturaItem`."""
    orderBy: [AdmFacturaItemsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmFacturaItemsEdge
}

"""All input for the `updateAdmFacturaItemByNodeId` mutation."""
input UpdateAdmFacturaItemByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmFacturaItem` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `AdmFacturaItem` being updated.
  """
  patch: AdmFacturaItemPatch!
}

"""
Represents an update to a `AdmFacturaItem`. Fields that are set will be updated.
"""
input AdmFacturaItemPatch {
  id: BigInt
  facturaId: BigInt
  conceptoIngresoId: BigInt
  clienteId: Int
  userId: Int
  divisionId: Int
  precio: BigFloat
  interes: BigFloat
  descuento: BigFloat
  cantidad: BigInt
  total: BigFloat
  pagado: BigFloat
  interesPagado: BigFloat
  cuota: Boolean
  pagoCompleto: Int
  observaciones: String
  fechaPago: Datetime
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""All input for the `updateAdmFacturaItem` mutation."""
input UpdateAdmFacturaItemInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `AdmFacturaItem` being updated.
  """
  patch: AdmFacturaItemPatch!
  id: BigInt!
}

"""The output of our update `AdmFacturaPago` mutation."""
type UpdateAdmFacturaPagoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmFacturaPago` that was updated by this mutation."""
  admFacturaPago: AdmFacturaPago

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `AdmFacturaPago`."""
  cliente: Cliente

  """Reads a single `User` that is related to this `AdmFacturaPago`."""
  userCreator: User

  """Reads a single `AdmFactura` that is related to this `AdmFacturaPago`."""
  factura: AdmFactura

  """An edge for our `AdmFacturaPago`. May be used by Relay 1."""
  admFacturaPagoEdge(
    """The method to use when ordering `AdmFacturaPago`."""
    orderBy: [AdmFacturaPagosOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmFacturaPagosEdge
}

"""All input for the `updateAdmFacturaPagoByNodeId` mutation."""
input UpdateAdmFacturaPagoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmFacturaPago` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `AdmFacturaPago` being updated.
  """
  patch: AdmFacturaPagoPatch!
}

"""
Represents an update to a `AdmFacturaPago`. Fields that are set will be updated.
"""
input AdmFacturaPagoPatch {
  id: BigInt
  clienteId: Int
  userCreatorId: Int
  facturaId: BigInt
  formaPagoId: BigInt
  monto: BigFloat
  nroChque: String
  bancoEmisorCheque: String
  cuentaBancariaId: BigInt
  nroTransferencia: String
  codigoPagomiscuentas: String
  codigoMercadopago: String
  descripcion: String
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""All input for the `updateAdmFacturaPago` mutation."""
input UpdateAdmFacturaPagoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `AdmFacturaPago` being updated.
  """
  patch: AdmFacturaPagoPatch!
  id: BigInt!
}

"""The output of our update `AdmFactura` mutation."""
type UpdateAdmFacturaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmFactura` that was updated by this mutation."""
  admFactura: AdmFactura

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `AdmFactura`."""
  cliente: Cliente

  """Reads a single `User` that is related to this `AdmFactura`."""
  userByUserCreator: User

  """An edge for our `AdmFactura`. May be used by Relay 1."""
  admFacturaEdge(
    """The method to use when ordering `AdmFactura`."""
    orderBy: [AdmFacturasOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmFacturasEdge
}

"""All input for the `updateAdmFacturaByNodeId` mutation."""
input UpdateAdmFacturaByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmFactura` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `AdmFactura` being updated.
  """
  patch: AdmFacturaPatch!
}

"""
Represents an update to a `AdmFactura`. Fields that are set will be updated.
"""
input AdmFacturaPatch {
  id: BigInt
  tipo: BigInt
  puntoDeVenta: BigInt
  numeroFactura: String
  tipoComprobante: BigInt
  numeroComprobante: String
  clienteNombre: String
  clienteCuit: String
  userFacturado: BigInt
  monto: BigFloat
  cae: String
  caeVencimientoFecha: Date
  vencimiento: Datetime
  descripcion: String
  path: String
  observaciones: String
  clienteId: BigInt
  userCreator: BigInt
  envioEmail: Int
  noAplicado: Int
  fechaFacturacion: Datetime
  fechaFacturacionAfip: Datetime
  fechaPago: Datetime
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
  obsAdmin: String
}

"""All input for the `updateAdmFactura` mutation."""
input UpdateAdmFacturaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `AdmFactura` being updated.
  """
  patch: AdmFacturaPatch!
  id: BigInt!
}

"""The output of our update `AdmGruposFamiliare` mutation."""
type UpdateAdmGruposFamiliarePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmGruposFamiliare` that was updated by this mutation."""
  admGruposFamiliare: AdmGruposFamiliare

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `AdmGruposFamiliare`."""
  cliente: Cliente

  """
  Reads a single `AdmDescuento` that is related to this `AdmGruposFamiliare`.
  """
  descuento: AdmDescuento

  """An edge for our `AdmGruposFamiliare`. May be used by Relay 1."""
  admGruposFamiliareEdge(
    """The method to use when ordering `AdmGruposFamiliare`."""
    orderBy: [AdmGruposFamiliaresOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmGruposFamiliaresEdge
}

"""All input for the `updateAdmGruposFamiliareByNodeId` mutation."""
input UpdateAdmGruposFamiliareByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmGruposFamiliare` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `AdmGruposFamiliare` being updated.
  """
  patch: AdmGruposFamiliarePatch!
}

"""
Represents an update to a `AdmGruposFamiliare`. Fields that are set will be updated.
"""
input AdmGruposFamiliarePatch {
  id: BigInt
  clienteId: BigInt
  nombre: String
  estado: Int
  descuentoId: BigInt
  formaAplicacion: Int
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""All input for the `updateAdmGruposFamiliare` mutation."""
input UpdateAdmGruposFamiliareInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `AdmGruposFamiliare` being updated.
  """
  patch: AdmGruposFamiliarePatch!
  id: BigInt!
}

"""The output of our update `AdmProveedore` mutation."""
type UpdateAdmProveedorePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmProveedore` that was updated by this mutation."""
  admProveedore: AdmProveedore

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `AdmProveedore`."""
  cliente: Cliente

  """An edge for our `AdmProveedore`. May be used by Relay 1."""
  admProveedoreEdge(
    """The method to use when ordering `AdmProveedore`."""
    orderBy: [AdmProveedoresOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmProveedoresEdge
}

"""All input for the `updateAdmProveedoreByNodeId` mutation."""
input UpdateAdmProveedoreByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmProveedore` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `AdmProveedore` being updated.
  """
  patch: AdmProveedorePatch!
}

"""
Represents an update to a `AdmProveedore`. Fields that are set will be updated.
"""
input AdmProveedorePatch {
  id: BigInt
  clienteId: BigInt
  razonSocial: String
  cuit: String
  email: String
  telefono: String
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""All input for the `updateAdmProveedore` mutation."""
input UpdateAdmProveedoreInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `AdmProveedore` being updated.
  """
  patch: AdmProveedorePatch!
  id: BigInt!
}

"""The output of our update `Alerta` mutation."""
type UpdateAlertaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Alerta` that was updated by this mutation."""
  alerta: Alerta

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `Alerta`."""
  alumno: User

  """Reads a single `Activity` that is related to this `Alerta`."""
  actividad: Activity

  """Reads a single `ActividadesEntregas` that is related to this `Alerta`."""
  entrega: ActividadesEntregas

  """An edge for our `Alerta`. May be used by Relay 1."""
  alertaEdge(
    """The method to use when ordering `Alerta`."""
    orderBy: [AlertasOrderBy!] = [PRIMARY_KEY_ASC]
  ): AlertasEdge
}

"""All input for the `updateAlertaByNodeId` mutation."""
input UpdateAlertaByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Alerta` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Alerta` being updated.
  """
  patch: AlertaPatch!
}

"""
Represents an update to a `Alerta`. Fields that are set will be updated.
"""
input AlertaPatch {
  id: BigInt
  rolId: Int

  """
  si el rol_id vinculado es el de un tutor, en este campo se aclara para que alumno corresponde la alerta
  """
  alumnoId: Int
  leida: Boolean
  entidad: String

  """una alerta puede llevar vinculada una actividad"""
  actividadId: Int

  """una alerta puede llevar vinculada una entrega"""
  entregaId: Int
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateAlerta` mutation."""
input UpdateAlertaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Alerta` being updated.
  """
  patch: AlertaPatch!
  id: BigInt!
}

"""The output of our update `Asignatura` mutation."""
type UpdateAsignaturaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Asignatura` that was updated by this mutation."""
  asignatura: Asignatura

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Grupo` that is related to this `Asignatura`."""
  grupo: Grupo

  """Reads a single `User` that is related to this `Asignatura`."""
  docente: User

  """
  Reads a single `EspaciosCurriculare` that is related to this `Asignatura`.
  """
  espacioCurricular: EspaciosCurriculare

  """An edge for our `Asignatura`. May be used by Relay 1."""
  asignaturaEdge(
    """The method to use when ordering `Asignatura`."""
    orderBy: [AsignaturasOrderBy!] = [PRIMARY_KEY_ASC]
  ): AsignaturasEdge
}

"""All input for the `updateAsignaturaByNodeId` mutation."""
input UpdateAsignaturaByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Asignatura` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Asignatura` being updated.
  """
  patch: AsignaturaPatch!
}

"""
Represents an update to a `Asignatura`. Fields that are set will be updated.
"""
input AsignaturaPatch {
  id: BigInt
  grupoId: Int
  docenteId: Int
  espacioCurricularId: Int
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateAsignatura` mutation."""
input UpdateAsignaturaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Asignatura` being updated.
  """
  patch: AsignaturaPatch!
  id: BigInt!
}

"""The output of our update `AwsSesHistorial` mutation."""
type UpdateAwsSesHistorialPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AwsSesHistorial` that was updated by this mutation."""
  awsSesHistorial: AwsSesHistorial

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `AwsSesHistorial`. May be used by Relay 1."""
  awsSesHistorialEdge(
    """The method to use when ordering `AwsSesHistorial`."""
    orderBy: [AwsSesHistorialsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AwsSesHistorialsEdge
}

"""All input for the `updateAwsSesHistorialByNodeId` mutation."""
input UpdateAwsSesHistorialByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AwsSesHistorial` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `AwsSesHistorial` being updated.
  """
  patch: AwsSesHistorialPatch!
}

"""
Represents an update to a `AwsSesHistorial`. Fields that are set will be updated.
"""
input AwsSesHistorialPatch {
  id: BigInt
  messageid: String
  tipo: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateAwsSesHistorial` mutation."""
input UpdateAwsSesHistorialInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `AwsSesHistorial` being updated.
  """
  patch: AwsSesHistorialPatch!
  id: BigInt!
}

"""The output of our update `Calendario` mutation."""
type UpdateCalendarioPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Calendario` that was updated by this mutation."""
  calendario: Calendario

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Grupo` that is related to this `Calendario`."""
  grupo: Grupo

  """Reads a single `Activity` that is related to this `Calendario`."""
  actividad: Activity

  """Reads a single `User` that is related to this `Calendario`."""
  user: User

  """An edge for our `Calendario`. May be used by Relay 1."""
  calendarioEdge(
    """The method to use when ordering `Calendario`."""
    orderBy: [CalendariosOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalendariosEdge
}

"""All input for the `updateCalendarioByNodeId` mutation."""
input UpdateCalendarioByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Calendario` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Calendario` being updated.
  """
  patch: CalendarioPatch!
}

"""
Represents an update to a `Calendario`. Fields that are set will be updated.
"""
input CalendarioPatch {
  id: BigInt
  titulo: String
  descripcion: String
  tipoEvento: String
  fecha: Datetime
  grupoId: Int
  actividadId: Int
  userId: Int
  soloDocentes: Boolean
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateCalendario` mutation."""
input UpdateCalendarioInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Calendario` being updated.
  """
  patch: CalendarioPatch!
  id: BigInt!
}

"""The output of our update `CalendarioGrupo` mutation."""
type UpdateCalendarioGrupoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `CalendarioGrupo` that was updated by this mutation."""
  calendarioGrupo: CalendarioGrupo

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Calendario` that is related to this `CalendarioGrupo`."""
  calendario: Calendario

  """Reads a single `Grupo` that is related to this `CalendarioGrupo`."""
  grupo: Grupo

  """An edge for our `CalendarioGrupo`. May be used by Relay 1."""
  calendarioGrupoEdge(
    """The method to use when ordering `CalendarioGrupo`."""
    orderBy: [CalendarioGruposOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalendarioGruposEdge
}

"""All input for the `updateCalendarioGrupoByNodeId` mutation."""
input UpdateCalendarioGrupoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `CalendarioGrupo` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `CalendarioGrupo` being updated.
  """
  patch: CalendarioGrupoPatch!
}

"""
Represents an update to a `CalendarioGrupo`. Fields that are set will be updated.
"""
input CalendarioGrupoPatch {
  id: BigInt
  calendarioId: Int
  grupoId: Int
}

"""All input for the `updateCalendarioGrupo` mutation."""
input UpdateCalendarioGrupoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `CalendarioGrupo` being updated.
  """
  patch: CalendarioGrupoPatch!
  id: BigInt!
}

"""The output of our update `CalendarioUser` mutation."""
type UpdateCalendarioUserPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `CalendarioUser` that was updated by this mutation."""
  calendarioUser: CalendarioUser

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `CalendarioUser`. May be used by Relay 1."""
  calendarioUserEdge(
    """The method to use when ordering `CalendarioUser`."""
    orderBy: [CalendarioUsersOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalendarioUsersEdge
}

"""All input for the `updateCalendarioUserByNodeId` mutation."""
input UpdateCalendarioUserByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `CalendarioUser` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `CalendarioUser` being updated.
  """
  patch: CalendarioUserPatch!
}

"""
Represents an update to a `CalendarioUser`. Fields that are set will be updated.
"""
input CalendarioUserPatch {
  id: BigInt
  calendarioEventoId: Int
  userId: Int
}

"""All input for the `updateCalendarioUser` mutation."""
input UpdateCalendarioUserInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `CalendarioUser` being updated.
  """
  patch: CalendarioUserPatch!
  id: BigInt!
}

"""The output of our update `Calificacione` mutation."""
type UpdateCalificacionePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Calificacione` that was updated by this mutation."""
  calificacione: Calificacione

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `CalificacionesConcepto` that is related to this `Calificacione`.
  """
  concepto: CalificacionesConcepto

  """Reads a single `User` that is related to this `Calificacione`."""
  alumno: User

  """Reads a single `Divisione` that is related to this `Calificacione`."""
  division: Divisione

  """
  Reads a single `CalificacionesEscalasValore` that is related to this `Calificacione`.
  """
  calificacionEscalaValor: CalificacionesEscalasValore

  """An edge for our `Calificacione`. May be used by Relay 1."""
  calificacioneEdge(
    """The method to use when ordering `Calificacione`."""
    orderBy: [CalificacionesOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalificacionesEdge
}

"""All input for the `updateCalificacioneByNodeId` mutation."""
input UpdateCalificacioneByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Calificacione` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Calificacione` being updated.
  """
  patch: CalificacionePatch!
}

"""
Represents an update to a `Calificacione`. Fields that are set will be updated.
"""
input CalificacionePatch {
  id: BigInt
  conceptoId: Int
  alumnoId: Int
  divisionId: Int
  calificacionEscalaValorId: Int
  observaciones: String
  archivada: Boolean
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateCalificacione` mutation."""
input UpdateCalificacioneInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Calificacione` being updated.
  """
  patch: CalificacionePatch!
  id: BigInt!
}

"""The output of our update `CalificacionesConcepto` mutation."""
type UpdateCalificacionesConceptoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `CalificacionesConcepto` that was updated by this mutation."""
  calificacionesConcepto: CalificacionesConcepto

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `CalificacionesConcepto`. May be used by Relay 1."""
  calificacionesConceptoEdge(
    """The method to use when ordering `CalificacionesConcepto`."""
    orderBy: [CalificacionesConceptosOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalificacionesConceptosEdge
}

"""All input for the `updateCalificacionesConceptoByNodeId` mutation."""
input UpdateCalificacionesConceptoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `CalificacionesConcepto` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `CalificacionesConcepto` being updated.
  """
  patch: CalificacionesConceptoPatch!
}

"""
Represents an update to a `CalificacionesConcepto`. Fields that are set will be updated.
"""
input CalificacionesConceptoPatch {
  id: BigInt
  nombre: String
  docenteId: Int
  calificacionEscalaId: Int
  espacioCurricularId: Int
  grupoId: Int
  divisionId: Int
  impactaNotaFinal: Boolean
  calificacionCerrada: Boolean
  actividadId: Int
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""All input for the `updateCalificacionesConcepto` mutation."""
input UpdateCalificacionesConceptoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `CalificacionesConcepto` being updated.
  """
  patch: CalificacionesConceptoPatch!
  id: BigInt!
}

"""The output of our update `CalificacionesConceptosAlumno` mutation."""
type UpdateCalificacionesConceptosAlumnoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `CalificacionesConceptosAlumno` that was updated by this mutation."""
  calificacionesConceptosAlumno: CalificacionesConceptosAlumno

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  An edge for our `CalificacionesConceptosAlumno`. May be used by Relay 1.
  """
  calificacionesConceptosAlumnoEdge(
    """The method to use when ordering `CalificacionesConceptosAlumno`."""
    orderBy: [CalificacionesConceptosAlumnosOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalificacionesConceptosAlumnosEdge
}

"""
All input for the `updateCalificacionesConceptosAlumnoByNodeId` mutation.
"""
input UpdateCalificacionesConceptosAlumnoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `CalificacionesConceptosAlumno` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `CalificacionesConceptosAlumno` being updated.
  """
  patch: CalificacionesConceptosAlumnoPatch!
}

"""
Represents an update to a `CalificacionesConceptosAlumno`. Fields that are set will be updated.
"""
input CalificacionesConceptosAlumnoPatch {
  id: BigInt
  conceptoId: Int
  alumnoId: Int
}

"""All input for the `updateCalificacionesConceptosAlumno` mutation."""
input UpdateCalificacionesConceptosAlumnoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `CalificacionesConceptosAlumno` being updated.
  """
  patch: CalificacionesConceptosAlumnoPatch!
  id: BigInt!
}

"""The output of our update `CalificacionesEscala` mutation."""
type UpdateCalificacionesEscalaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `CalificacionesEscala` that was updated by this mutation."""
  calificacionesEscala: CalificacionesEscala

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `CalificacionesEscala`. May be used by Relay 1."""
  calificacionesEscalaEdge(
    """The method to use when ordering `CalificacionesEscala`."""
    orderBy: [CalificacionesEscalasOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalificacionesEscalasEdge
}

"""All input for the `updateCalificacionesEscalaByNodeId` mutation."""
input UpdateCalificacionesEscalaByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `CalificacionesEscala` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `CalificacionesEscala` being updated.
  """
  patch: CalificacionesEscalaPatch!
}

"""
Represents an update to a `CalificacionesEscala`. Fields that are set will be updated.
"""
input CalificacionesEscalaPatch {
  id: BigInt
  nombre: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateCalificacionesEscala` mutation."""
input UpdateCalificacionesEscalaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `CalificacionesEscala` being updated.
  """
  patch: CalificacionesEscalaPatch!
  id: BigInt!
}

"""The output of our update `CalificacionesEscalasValore` mutation."""
type UpdateCalificacionesEscalasValorePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `CalificacionesEscalasValore` that was updated by this mutation."""
  calificacionesEscalasValore: CalificacionesEscalasValore

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `CalificacionesEscalasValore`. May be used by Relay 1."""
  calificacionesEscalasValoreEdge(
    """The method to use when ordering `CalificacionesEscalasValore`."""
    orderBy: [CalificacionesEscalasValoresOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalificacionesEscalasValoresEdge
}

"""
All input for the `updateCalificacionesEscalasValoreByNodeId` mutation.
"""
input UpdateCalificacionesEscalasValoreByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `CalificacionesEscalasValore` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `CalificacionesEscalasValore` being updated.
  """
  patch: CalificacionesEscalasValorePatch!
}

"""
Represents an update to a `CalificacionesEscalasValore`. Fields that are set will be updated.
"""
input CalificacionesEscalasValorePatch {
  id: BigInt
  nombre: String
  exitoso: Boolean
  peso: Int
  calificacionEscalaId: Int
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateCalificacionesEscalasValore` mutation."""
input UpdateCalificacionesEscalasValoreInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `CalificacionesEscalasValore` being updated.
  """
  patch: CalificacionesEscalasValorePatch!
  id: BigInt!
}

"""The output of our update `Changelog` mutation."""
type UpdateChangelogPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Changelog` that was updated by this mutation."""
  changelog: Changelog

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Changelog`. May be used by Relay 1."""
  changelogEdge(
    """The method to use when ordering `Changelog`."""
    orderBy: [ChangelogsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ChangelogsEdge
}

"""All input for the `updateChangelogByNodeId` mutation."""
input UpdateChangelogByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Changelog` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Changelog` being updated.
  """
  patch: ChangelogPatch!
}

"""
Represents an update to a `Changelog`. Fields that are set will be updated.
"""
input ChangelogPatch {
  id: BigInt
  descripcion: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateChangelog` mutation."""
input UpdateChangelogInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Changelog` being updated.
  """
  patch: ChangelogPatch!
  id: BigInt!
}

"""The output of our update `City` mutation."""
type UpdateCityPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `City` that was updated by this mutation."""
  city: City

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Provincia` that is related to this `City`."""
  provincia: Provincia

  """An edge for our `City`. May be used by Relay 1."""
  cityEdge(
    """The method to use when ordering `City`."""
    orderBy: [CitiesOrderBy!] = [PRIMARY_KEY_ASC]
  ): CitiesEdge
}

"""All input for the `updateCityByNodeId` mutation."""
input UpdateCityByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `City` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `City` being updated.
  """
  patch: CityPatch!
}

"""Represents an update to a `City`. Fields that are set will be updated."""
input CityPatch {
  id: BigInt
  nombre: String
  provinciaId: BigInt
  latitud: Float
  longitud: Float
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateCity` mutation."""
input UpdateCityInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `City` being updated.
  """
  patch: CityPatch!
  id: BigInt!
}

"""The output of our update `ClienteModule` mutation."""
type UpdateClienteModulePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `ClienteModule` that was updated by this mutation."""
  clienteModule: ClienteModule

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `ClienteModule`. May be used by Relay 1."""
  clienteModuleEdge(
    """The method to use when ordering `ClienteModule`."""
    orderBy: [ClienteModulesOrderBy!] = [PRIMARY_KEY_ASC]
  ): ClienteModulesEdge
}

"""All input for the `updateClienteModuleByNodeId` mutation."""
input UpdateClienteModuleByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `ClienteModule` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `ClienteModule` being updated.
  """
  patch: ClienteModulePatch!
}

"""
Represents an update to a `ClienteModule`. Fields that are set will be updated.
"""
input ClienteModulePatch {
  id: BigInt
  moduleId: BigInt
  clienteId: BigInt
}

"""All input for the `updateClienteModule` mutation."""
input UpdateClienteModuleInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `ClienteModule` being updated.
  """
  patch: ClienteModulePatch!
  id: BigInt!
}

"""The output of our update `Cliente` mutation."""
type UpdateClientePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Cliente` that was updated by this mutation."""
  cliente: Cliente

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Cliente`. May be used by Relay 1."""
  clienteEdge(
    """The method to use when ordering `Cliente`."""
    orderBy: [ClientesOrderBy!] = [PRIMARY_KEY_ASC]
  ): ClientesEdge
}

"""All input for the `updateClienteByNodeId` mutation."""
input UpdateClienteByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Cliente` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Cliente` being updated.
  """
  patch: ClientePatch!
}

"""
Represents an update to a `Cliente`. Fields that are set will be updated.
"""
input ClientePatch {
  id: BigInt
  name: String
  alumnosFacturables: BigInt
  logo: String
  email: String
  direccion: String
  provinciaId: BigInt
  latitud: String
  longitud: String
  tieneApp: Int
  notes: String
  cuit: String
  iibb: String
  inicioActividades: String
  appBundleAndroid: String
  appBundleIos: String
  demoActiva: Int
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
  telefono: String
}

"""All input for the `updateCliente` mutation."""
input UpdateClienteInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Cliente` being updated.
  """
  patch: ClientePatch!
  id: BigInt!
}

"""The output of our update `Dispositivo` mutation."""
type UpdateDispositivoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Dispositivo` that was updated by this mutation."""
  dispositivo: Dispositivo

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `Dispositivo`."""
  user: User

  """Reads a single `Cliente` that is related to this `Dispositivo`."""
  cliente: Cliente

  """An edge for our `Dispositivo`. May be used by Relay 1."""
  dispositivoEdge(
    """The method to use when ordering `Dispositivo`."""
    orderBy: [DispositivosOrderBy!] = [PRIMARY_KEY_ASC]
  ): DispositivosEdge
}

"""All input for the `updateDispositivoByNodeId` mutation."""
input UpdateDispositivoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Dispositivo` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Dispositivo` being updated.
  """
  patch: DispositivoPatch!
}

"""
Represents an update to a `Dispositivo`. Fields that are set will be updated.
"""
input DispositivoPatch {
  id: BigInt
  userId: Int
  clienteId: Int
  app: String
  pushToken: String
  pushTokenReal: String
  deviceId: String
  deviceName: String
  os: String
  versionApp: String
  versionExpo: String
  versionOs: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateDispositivo` mutation."""
input UpdateDispositivoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Dispositivo` being updated.
  """
  patch: DispositivoPatch!
  id: BigInt!
}

"""The output of our update `Divisione` mutation."""
type UpdateDivisionePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Divisione` that was updated by this mutation."""
  divisione: Divisione

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Divisione`. May be used by Relay 1."""
  divisioneEdge(
    """The method to use when ordering `Divisione`."""
    orderBy: [DivisionesOrderBy!] = [PRIMARY_KEY_ASC]
  ): DivisionesEdge
}

"""All input for the `updateDivisioneByNodeId` mutation."""
input UpdateDivisioneByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Divisione` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Divisione` being updated.
  """
  patch: DivisionePatch!
}

"""
Represents an update to a `Divisione`. Fields that are set will be updated.
"""
input DivisionePatch {
  id: BigInt
  nombre: String
  clienteId: BigInt
  color: String
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""All input for the `updateDivisione` mutation."""
input UpdateDivisioneInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Divisione` being updated.
  """
  patch: DivisionePatch!
  id: BigInt!
}

"""The output of our update `Errorsapp` mutation."""
type UpdateErrorsappPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Errorsapp` that was updated by this mutation."""
  errorsapp: Errorsapp

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `Errorsapp`."""
  user: User

  """An edge for our `Errorsapp`. May be used by Relay 1."""
  errorsappEdge(
    """The method to use when ordering `Errorsapp`."""
    orderBy: [ErrorsappsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ErrorsappsEdge
}

"""All input for the `updateErrorsappByNodeId` mutation."""
input UpdateErrorsappByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Errorsapp` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Errorsapp` being updated.
  """
  patch: ErrorsappPatch!
}

"""
Represents an update to a `Errorsapp`. Fields that are set will be updated.
"""
input ErrorsappPatch {
  id: BigInt
  userId: BigInt
  case: String
  deviceName: String
  os: String
  deviceId: String
  versionApp: String
  versionExpo: String
  versionOs: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateErrorsapp` mutation."""
input UpdateErrorsappInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Errorsapp` being updated.
  """
  patch: ErrorsappPatch!
  id: BigInt!
}

"""The output of our update `EspaciosCurriculare` mutation."""
type UpdateEspaciosCurricularePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `EspaciosCurriculare` that was updated by this mutation."""
  espaciosCurriculare: EspaciosCurriculare

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `EspaciosCurriculare`. May be used by Relay 1."""
  espaciosCurriculareEdge(
    """The method to use when ordering `EspaciosCurriculare`."""
    orderBy: [EspaciosCurricularesOrderBy!] = [PRIMARY_KEY_ASC]
  ): EspaciosCurricularesEdge
}

"""All input for the `updateEspaciosCurriculareByNodeId` mutation."""
input UpdateEspaciosCurriculareByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `EspaciosCurriculare` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `EspaciosCurriculare` being updated.
  """
  patch: EspaciosCurricularePatch!
}

"""
Represents an update to a `EspaciosCurriculare`. Fields that are set will be updated.
"""
input EspaciosCurricularePatch {
  id: BigInt
  nombre: String
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""All input for the `updateEspaciosCurriculare` mutation."""
input UpdateEspaciosCurriculareInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `EspaciosCurriculare` being updated.
  """
  patch: EspaciosCurricularePatch!
  id: BigInt!
}

"""The output of our update `Evento` mutation."""
type UpdateEventoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Evento` that was updated by this mutation."""
  evento: Evento

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `Evento`."""
  cliente: Cliente

  """Reads a single `Divisione` that is related to this `Evento`."""
  division: Divisione

  """An edge for our `Evento`. May be used by Relay 1."""
  eventoEdge(
    """The method to use when ordering `Evento`."""
    orderBy: [EventosOrderBy!] = [PRIMARY_KEY_ASC]
  ): EventosEdge
}

"""All input for the `updateEventoByNodeId` mutation."""
input UpdateEventoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Evento` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Evento` being updated.
  """
  patch: EventoPatch!
}

"""
Represents an update to a `Evento`. Fields that are set will be updated.
"""
input EventoPatch {
  id: BigInt
  clienteId: BigInt
  ownerId: BigInt
  divisionId: BigInt
  nombre: String
  descripcion: String
  imagen: String
  fechaInicio: Datetime
  horaInicio: Time
  horaFin: Time
  fechaFin: Datetime
  lugar: String
  latitud: String
  longitud: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateEvento` mutation."""
input UpdateEventoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Evento` being updated.
  """
  patch: EventoPatch!
  id: BigInt!
}

"""The output of our update `FailedJob` mutation."""
type UpdateFailedJobPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `FailedJob` that was updated by this mutation."""
  failedJob: FailedJob

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `FailedJob`. May be used by Relay 1."""
  failedJobEdge(
    """The method to use when ordering `FailedJob`."""
    orderBy: [FailedJobsOrderBy!] = [PRIMARY_KEY_ASC]
  ): FailedJobsEdge
}

"""All input for the `updateFailedJobByNodeId` mutation."""
input UpdateFailedJobByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `FailedJob` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `FailedJob` being updated.
  """
  patch: FailedJobPatch!
}

"""
Represents an update to a `FailedJob`. Fields that are set will be updated.
"""
input FailedJobPatch {
  id: BigInt
  connection: String
  queue: String
  payload: String
  exception: String
  failedAt: Datetime
}

"""All input for the `updateFailedJob` mutation."""
input UpdateFailedJobInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `FailedJob` being updated.
  """
  patch: FailedJobPatch!
  id: BigInt!
}

"""The output of our update `Foto` mutation."""
type UpdateFotoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Foto` that was updated by this mutation."""
  foto: Foto

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Galeria` that is related to this `Foto`."""
  galeria: Galeria

  """An edge for our `Foto`. May be used by Relay 1."""
  fotoEdge(
    """The method to use when ordering `Foto`."""
    orderBy: [FotosOrderBy!] = [PRIMARY_KEY_ASC]
  ): FotosEdge
}

"""All input for the `updateFotoByNodeId` mutation."""
input UpdateFotoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Foto` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Foto` being updated.
  """
  patch: FotoPatch!
}

"""Represents an update to a `Foto`. Fields that are set will be updated."""
input FotoPatch {
  id: BigInt
  galeriaId: BigInt
  imagen: String
  orden: BigInt
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""All input for the `updateFoto` mutation."""
input UpdateFotoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Foto` being updated.
  """
  patch: FotoPatch!
  id: BigInt!
}

"""The output of our update `Galeria` mutation."""
type UpdateGaleriaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Galeria` that was updated by this mutation."""
  galeria: Galeria

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `Galeria`."""
  cliente: Cliente

  """Reads a single `Divisione` that is related to this `Galeria`."""
  division: Divisione

  """An edge for our `Galeria`. May be used by Relay 1."""
  galeriaEdge(
    """The method to use when ordering `Galeria`."""
    orderBy: [GaleriasOrderBy!] = [PRIMARY_KEY_ASC]
  ): GaleriasEdge
}

"""All input for the `updateGaleriaByNodeId` mutation."""
input UpdateGaleriaByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Galeria` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Galeria` being updated.
  """
  patch: GaleriaPatch!
}

"""
Represents an update to a `Galeria`. Fields that are set will be updated.
"""
input GaleriaPatch {
  id: BigInt
  clienteId: BigInt
  divisionId: BigInt
  nombre: String
  fecha: Date
  lugar: String
  imagen: String
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""All input for the `updateGaleria` mutation."""
input UpdateGaleriaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Galeria` being updated.
  """
  patch: GaleriaPatch!
  id: BigInt!
}

"""The output of our update `Grupo` mutation."""
type UpdateGrupoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Grupo` that was updated by this mutation."""
  grupo: Grupo

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `Grupo`."""
  cliente: Cliente

  """Reads a single `Divisione` that is related to this `Grupo`."""
  division: Divisione

  """An edge for our `Grupo`. May be used by Relay 1."""
  grupoEdge(
    """The method to use when ordering `Grupo`."""
    orderBy: [GruposOrderBy!] = [PRIMARY_KEY_ASC]
  ): GruposEdge
}

"""All input for the `updateGrupoByNodeId` mutation."""
input UpdateGrupoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Grupo` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Grupo` being updated.
  """
  patch: GrupoPatch!
}

"""
Represents an update to a `Grupo`. Fields that are set will be updated.
"""
input GrupoPatch {
  id: BigInt
  nombre: String
  descripcion: String
  clienteId: BigInt
  divisionId: BigInt
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""All input for the `updateGrupo` mutation."""
input UpdateGrupoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Grupo` being updated.
  """
  patch: GrupoPatch!
  id: BigInt!
}

"""The output of our update `GruposArchivo` mutation."""
type UpdateGruposArchivoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `GruposArchivo` that was updated by this mutation."""
  gruposArchivo: GruposArchivo

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Grupo` that is related to this `GruposArchivo`."""
  grupo: Grupo

  """Reads a single `User` that is related to this `GruposArchivo`."""
  user: User

  """An edge for our `GruposArchivo`. May be used by Relay 1."""
  gruposArchivoEdge(
    """The method to use when ordering `GruposArchivo`."""
    orderBy: [GruposArchivosOrderBy!] = [PRIMARY_KEY_ASC]
  ): GruposArchivosEdge
}

"""All input for the `updateGruposArchivoByNodeId` mutation."""
input UpdateGruposArchivoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `GruposArchivo` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `GruposArchivo` being updated.
  """
  patch: GruposArchivoPatch!
}

"""
Represents an update to a `GruposArchivo`. Fields that are set will be updated.
"""
input GruposArchivoPatch {
  id: BigInt
  grupoId: Int
  userId: Int
  path: String
  tipo: Int
  titulo: String
  nombre: String
  extension: String
  soloDocentes: Boolean
  descripcion: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateGruposArchivo` mutation."""
input UpdateGruposArchivoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `GruposArchivo` being updated.
  """
  patch: GruposArchivoPatch!
  id: BigInt!
}

"""The output of our update `Hijo` mutation."""
type UpdateHijoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Hijo` that was updated by this mutation."""
  hijo: Hijo

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `Hijo`."""
  user: User

  """Reads a single `User` that is related to this `Hijo`."""
  uhijos: User

  """An edge for our `Hijo`. May be used by Relay 1."""
  hijoEdge(
    """The method to use when ordering `Hijo`."""
    orderBy: [HijosOrderBy!] = [PRIMARY_KEY_ASC]
  ): HijosEdge
}

"""All input for the `updateHijoByNodeId` mutation."""
input UpdateHijoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Hijo` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Hijo` being updated.
  """
  patch: HijoPatch!
}

"""Represents an update to a `Hijo`. Fields that are set will be updated."""
input HijoPatch {
  id: BigInt
  userId: BigInt
  hijoId: Int
  createdAt: Datetime
  updatedAt: Datetime
  userIdOrig: BigInt
}

"""All input for the `updateHijo` mutation."""
input UpdateHijoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Hijo` being updated.
  """
  patch: HijoPatch!
  id: BigInt!
}

"""The output of our update `HistorialNotificacione` mutation."""
type UpdateHistorialNotificacionePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `HistorialNotificacione` that was updated by this mutation."""
  historialNotificacione: HistorialNotificacione

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `HistorialNotificacione`. May be used by Relay 1."""
  historialNotificacioneEdge(
    """The method to use when ordering `HistorialNotificacione`."""
    orderBy: [HistorialNotificacionesOrderBy!] = [PRIMARY_KEY_ASC]
  ): HistorialNotificacionesEdge
}

"""All input for the `updateHistorialNotificacioneByNodeId` mutation."""
input UpdateHistorialNotificacioneByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `HistorialNotificacione` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `HistorialNotificacione` being updated.
  """
  patch: HistorialNotificacionePatch!
}

"""
Represents an update to a `HistorialNotificacione`. Fields that are set will be updated.
"""
input HistorialNotificacionePatch {
  id: BigInt
  mensajeItemId: Int
  tipo: String
  token: String
  exitoso: Boolean
  resultado: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateHistorialNotificacione` mutation."""
input UpdateHistorialNotificacioneInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `HistorialNotificacione` being updated.
  """
  patch: HistorialNotificacionePatch!
  id: BigInt!
}

"""The output of our update `Log` mutation."""
type UpdateLogPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Log` that was updated by this mutation."""
  log: Log

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Log`. May be used by Relay 1."""
  logEdge(
    """The method to use when ordering `Log`."""
    orderBy: [LogsOrderBy!] = [PRIMARY_KEY_ASC]
  ): LogsEdge
}

"""All input for the `updateLogByNodeId` mutation."""
input UpdateLogByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Log` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Log` being updated.
  """
  patch: LogPatch!
}

"""Represents an update to a `Log`. Fields that are set will be updated."""
input LogPatch {
  id: BigInt
  url: String
  token: String
  rolId: Int
  rol: String
  userId: Int
  email: String
  nombre: String
  clienteId: Int
  divisionId: Int
  params: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateLog` mutation."""
input UpdateLogInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Log` being updated.
  """
  patch: LogPatch!
  id: BigInt!
}

"""The output of our update `MensajeItem` mutation."""
type UpdateMensajeItemPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `MensajeItem` that was updated by this mutation."""
  mensajeItem: MensajeItem

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Mensaje` that is related to this `MensajeItem`."""
  mensaje: Mensaje

  """An edge for our `MensajeItem`. May be used by Relay 1."""
  mensajeItemEdge(
    """The method to use when ordering `MensajeItem`."""
    orderBy: [MensajeItemsOrderBy!] = [PRIMARY_KEY_ASC]
  ): MensajeItemsEdge
}

"""All input for the `updateMensajeItemByNodeId` mutation."""
input UpdateMensajeItemByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `MensajeItem` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `MensajeItem` being updated.
  """
  patch: MensajeItemPatch!
}

"""
Represents an update to a `MensajeItem`. Fields that are set will be updated.
"""
input MensajeItemPatch {
  id: BigInt
  mensajeId: BigInt
  alumnoId: BigInt
  tutorId: BigInt
  docenteId: BigInt
  estado: Int
  grupoId: BigInt
  fechaNotificacion: Datetime
  fechaRecepcion: Datetime
  fechaLectura: Datetime
  fechaConfirmacion: Datetime
  pushStatus: Int
  pushDetail: String
  awsEmailMessageid: String
  createdAt: Datetime
  updatedAt: Datetime
  docenteIdOrig: BigInt
  tutorIdOrig: BigInt
  alumnoIdOrig: BigInt
}

"""All input for the `updateMensajeItem` mutation."""
input UpdateMensajeItemInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `MensajeItem` being updated.
  """
  patch: MensajeItemPatch!
  id: BigInt!
}

"""The output of our update `Mensaje` mutation."""
type UpdateMensajePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Mensaje` that was updated by this mutation."""
  mensaje: Mensaje

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Mensaje`. May be used by Relay 1."""
  mensajeEdge(
    """The method to use when ordering `Mensaje`."""
    orderBy: [MensajesOrderBy!] = [PRIMARY_KEY_ASC]
  ): MensajesEdge
}

"""All input for the `updateMensajeByNodeId` mutation."""
input UpdateMensajeByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Mensaje` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Mensaje` being updated.
  """
  patch: MensajePatch!
}

"""
Represents an update to a `Mensaje`. Fields that are set will be updated.
"""
input MensajePatch {
  id: BigInt
  titulo: String
  mensaje: String
  userEmisor: BigInt
  rolEmisor: BigInt
  clienteId: BigInt
  divisionId: BigInt
  grupoId: BigInt
  estado: Int
  foto: String
  adjunto: String
  requiereConfirmacion: Int
  tipoMensaje: BigInt
  padreId: BigInt
  padreHilo: BigInt
  adminSenderId: BigInt
  aprobadoAt: Datetime
  aproboUser: Int
  request: String
  userEmisorOrig: BigInt
  cantHilos: Int
  destinatarios: String
  busqueda: String
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
}

"""All input for the `updateMensaje` mutation."""
input UpdateMensajeInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Mensaje` being updated.
  """
  patch: MensajePatch!
  id: BigInt!
}

"""The output of our update `MensajesAdmin` mutation."""
type UpdateMensajesAdminPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `MensajesAdmin` that was updated by this mutation."""
  mensajesAdmin: MensajesAdmin

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `MensajesAdmin`. May be used by Relay 1."""
  mensajesAdminEdge(
    """The method to use when ordering `MensajesAdmin`."""
    orderBy: [MensajesAdminsOrderBy!] = [PRIMARY_KEY_ASC]
  ): MensajesAdminsEdge
}

"""All input for the `updateMensajesAdminByNodeId` mutation."""
input UpdateMensajesAdminByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `MensajesAdmin` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `MensajesAdmin` being updated.
  """
  patch: MensajesAdminPatch!
}

"""
Represents an update to a `MensajesAdmin`. Fields that are set will be updated.
"""
input MensajesAdminPatch {
  id: BigInt
  asunto: String
  contenido: String
  destinatarios: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateMensajesAdmin` mutation."""
input UpdateMensajesAdminInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `MensajesAdmin` being updated.
  """
  patch: MensajesAdminPatch!
  id: BigInt!
}

"""The output of our update `MensajesArchivo` mutation."""
type UpdateMensajesArchivoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `MensajesArchivo` that was updated by this mutation."""
  mensajesArchivo: MensajesArchivo

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `MensajesArchivo`. May be used by Relay 1."""
  mensajesArchivoEdge(
    """The method to use when ordering `MensajesArchivo`."""
    orderBy: [MensajesArchivosOrderBy!] = [PRIMARY_KEY_ASC]
  ): MensajesArchivosEdge
}

"""All input for the `updateMensajesArchivoByNodeId` mutation."""
input UpdateMensajesArchivoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `MensajesArchivo` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `MensajesArchivo` being updated.
  """
  patch: MensajesArchivoPatch!
}

"""
Represents an update to a `MensajesArchivo`. Fields that are set will be updated.
"""
input MensajesArchivoPatch {
  id: BigInt
  nombre: String
  extension: String
  mensajeId: BigInt
  path: String
  tipo: Boolean
  clienteId: BigInt
  eliminado: Boolean
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateMensajesArchivo` mutation."""
input UpdateMensajesArchivoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `MensajesArchivo` being updated.
  """
  patch: MensajesArchivoPatch!
  id: BigInt!
}

"""The output of our update `MenuApp` mutation."""
type UpdateMenuAppPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `MenuApp` that was updated by this mutation."""
  menuApp: MenuApp

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `MenuApp`. May be used by Relay 1."""
  menuAppEdge(
    """The method to use when ordering `MenuApp`."""
    orderBy: [MenuAppsOrderBy!] = [PRIMARY_KEY_ASC]
  ): MenuAppsEdge
}

"""All input for the `updateMenuAppByNodeId` mutation."""
input UpdateMenuAppByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `MenuApp` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `MenuApp` being updated.
  """
  patch: MenuAppPatch!
}

"""
Represents an update to a `MenuApp`. Fields that are set will be updated.
"""
input MenuAppPatch {
  id: BigInt
  clienteId: Int
  divisionId: Int
  rotulo: String
  funcion: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateMenuApp` mutation."""
input UpdateMenuAppInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `MenuApp` being updated.
  """
  patch: MenuAppPatch!
  id: BigInt!
}

"""The output of our update `Migration` mutation."""
type UpdateMigrationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Migration` that was updated by this mutation."""
  migration: Migration

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Migration`. May be used by Relay 1."""
  migrationEdge(
    """The method to use when ordering `Migration`."""
    orderBy: [MigrationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): MigrationsEdge
}

"""All input for the `updateMigrationByNodeId` mutation."""
input UpdateMigrationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Migration` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Migration` being updated.
  """
  patch: MigrationPatch!
}

"""
Represents an update to a `Migration`. Fields that are set will be updated.
"""
input MigrationPatch {
  id: BigInt
  migration: String
  batch: Int
}

"""All input for the `updateMigration` mutation."""
input UpdateMigrationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Migration` being updated.
  """
  patch: MigrationPatch!
  id: BigInt!
}

"""The output of our update `Module` mutation."""
type UpdateModulePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Module` that was updated by this mutation."""
  module: Module

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Module`. May be used by Relay 1."""
  moduleEdge(
    """The method to use when ordering `Module`."""
    orderBy: [ModulesOrderBy!] = [PRIMARY_KEY_ASC]
  ): ModulesEdge
}

"""All input for the `updateModuleByNodeId` mutation."""
input UpdateModuleByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Module` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Module` being updated.
  """
  patch: ModulePatch!
}

"""
Represents an update to a `Module`. Fields that are set will be updated.
"""
input ModulePatch {
  id: BigInt
  slug: String
  nombre: String
}

"""All input for the `updateModule` mutation."""
input UpdateModuleInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Module` being updated.
  """
  patch: ModulePatch!
  id: BigInt!
}

"""The output of our update `ModulesBack` mutation."""
type UpdateModulesBackPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `ModulesBack` that was updated by this mutation."""
  modulesBack: ModulesBack

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `ModulesBack`. May be used by Relay 1."""
  modulesBackEdge(
    """The method to use when ordering `ModulesBack`."""
    orderBy: [ModulesBacksOrderBy!] = [PRIMARY_KEY_ASC]
  ): ModulesBacksEdge
}

"""All input for the `updateModulesBackByNodeId` mutation."""
input UpdateModulesBackByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `ModulesBack` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `ModulesBack` being updated.
  """
  patch: ModulesBackPatch!
}

"""
Represents an update to a `ModulesBack`. Fields that are set will be updated.
"""
input ModulesBackPatch {
  id: BigInt
  slug: String
  nombre: String
}

"""All input for the `updateModulesBack` mutation."""
input UpdateModulesBackInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `ModulesBack` being updated.
  """
  patch: ModulesBackPatch!
  id: BigInt!
}

"""The output of our update `MtCorregir` mutation."""
type UpdateMtCorregirPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `MtCorregir` that was updated by this mutation."""
  mtCorregir: MtCorregir

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `MtCorregir`. May be used by Relay 1."""
  mtCorregirEdge(
    """The method to use when ordering `MtCorregir`."""
    orderBy: [MtCorregirsOrderBy!] = [PRIMARY_KEY_ASC]
  ): MtCorregirsEdge
}

"""All input for the `updateMtCorregirByNodeId` mutation."""
input UpdateMtCorregirByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `MtCorregir` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `MtCorregir` being updated.
  """
  patch: MtCorregirPatch!
}

"""
Represents an update to a `MtCorregir`. Fields that are set will be updated.
"""
input MtCorregirPatch {
  id: BigInt
  userId: String
  email: String
}

"""All input for the `updateMtCorregir` mutation."""
input UpdateMtCorregirInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `MtCorregir` being updated.
  """
  patch: MtCorregirPatch!
  id: BigInt!
}

"""The output of our update `MultimediaMapping` mutation."""
type UpdateMultimediaMappingPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `MultimediaMapping` that was updated by this mutation."""
  multimediaMapping: MultimediaMapping

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `MultimediaMapping`. May be used by Relay 1."""
  multimediaMappingEdge(
    """The method to use when ordering `MultimediaMapping`."""
    orderBy: [MultimediaMappingsOrderBy!] = [PRIMARY_KEY_ASC]
  ): MultimediaMappingsEdge
}

"""All input for the `updateMultimediaMappingByNodeId` mutation."""
input UpdateMultimediaMappingByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `MultimediaMapping` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `MultimediaMapping` being updated.
  """
  patch: MultimediaMappingPatch!
}

"""
Represents an update to a `MultimediaMapping`. Fields that are set will be updated.
"""
input MultimediaMappingPatch {
  id: BigInt
  cloudinary: String
  s3: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateMultimediaMapping` mutation."""
input UpdateMultimediaMappingInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `MultimediaMapping` being updated.
  """
  patch: MultimediaMappingPatch!
  id: BigInt!
}

"""The output of our update `Noticia` mutation."""
type UpdateNoticiaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Noticia` that was updated by this mutation."""
  noticia: Noticia

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `Noticia`."""
  cliente: Cliente

  """Reads a single `Divisione` that is related to this `Noticia`."""
  division: Divisione

  """An edge for our `Noticia`. May be used by Relay 1."""
  noticiaEdge(
    """The method to use when ordering `Noticia`."""
    orderBy: [NoticiasOrderBy!] = [PRIMARY_KEY_ASC]
  ): NoticiasEdge
}

"""All input for the `updateNoticiaByNodeId` mutation."""
input UpdateNoticiaByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Noticia` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Noticia` being updated.
  """
  patch: NoticiaPatch!
}

"""
Represents an update to a `Noticia`. Fields that are set will be updated.
"""
input NoticiaPatch {
  id: BigInt
  clienteId: BigInt
  divisionId: BigInt
  titulo: String
  contenido: String
  imagen: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateNoticia` mutation."""
input UpdateNoticiaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Noticia` being updated.
  """
  patch: NoticiaPatch!
  id: BigInt!
}

"""The output of our update `Opcione` mutation."""
type UpdateOpcionePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Opcione` that was updated by this mutation."""
  opcione: Opcione

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Opcione`. May be used by Relay 1."""
  opcioneEdge(
    """The method to use when ordering `Opcione`."""
    orderBy: [OpcionesOrderBy!] = [PRIMARY_KEY_ASC]
  ): OpcionesEdge
}

"""All input for the `updateOpcioneByNodeId` mutation."""
input UpdateOpcioneByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Opcione` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Opcione` being updated.
  """
  patch: OpcionePatch!
}

"""
Represents an update to a `Opcione`. Fields that are set will be updated.
"""
input OpcionePatch {
  id: BigInt
  rotulo: String
  valor: String
  visible: Boolean
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateOpcione` mutation."""
input UpdateOpcioneInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Opcione` being updated.
  """
  patch: OpcionePatch!
  id: BigInt!
}

"""The output of our update `OpcionesDivision` mutation."""
type UpdateOpcionesDivisionPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `OpcionesDivision` that was updated by this mutation."""
  opcionesDivision: OpcionesDivision

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Divisione` that is related to this `OpcionesDivision`."""
  division: Divisione

  """An edge for our `OpcionesDivision`. May be used by Relay 1."""
  opcionesDivisionEdge(
    """The method to use when ordering `OpcionesDivision`."""
    orderBy: [OpcionesDivisionsOrderBy!] = [PRIMARY_KEY_ASC]
  ): OpcionesDivisionsEdge
}

"""All input for the `updateOpcionesDivisionByNodeId` mutation."""
input UpdateOpcionesDivisionByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `OpcionesDivision` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `OpcionesDivision` being updated.
  """
  patch: OpcionesDivisionPatch!
}

"""
Represents an update to a `OpcionesDivision`. Fields that are set will be updated.
"""
input OpcionesDivisionPatch {
  id: BigInt
  rotulo: String
  nombre: String
  valor: String
  divisionId: Int
  tipo: String
  modulo: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateOpcionesDivision` mutation."""
input UpdateOpcionesDivisionInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `OpcionesDivision` being updated.
  """
  patch: OpcionesDivisionPatch!
  id: BigInt!
}

"""The output of our update `Plantilla` mutation."""
type UpdatePlantillaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Plantilla` that was updated by this mutation."""
  plantilla: Plantilla

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `Plantilla`."""
  user: User

  """An edge for our `Plantilla`. May be used by Relay 1."""
  plantillaEdge(
    """The method to use when ordering `Plantilla`."""
    orderBy: [PlantillasOrderBy!] = [PRIMARY_KEY_ASC]
  ): PlantillasEdge
}

"""All input for the `updatePlantillaByNodeId` mutation."""
input UpdatePlantillaByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Plantilla` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Plantilla` being updated.
  """
  patch: PlantillaPatch!
}

"""
Represents an update to a `Plantilla`. Fields that are set will be updated.
"""
input PlantillaPatch {
  id: BigInt
  userId: Int
  nombre: String
  contenido: String
  categoria: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updatePlantilla` mutation."""
input UpdatePlantillaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Plantilla` being updated.
  """
  patch: PlantillaPatch!
  id: BigInt!
}

"""The output of our update `Provincia` mutation."""
type UpdateProvinciaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Provincia` that was updated by this mutation."""
  provincia: Provincia

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Provincia`. May be used by Relay 1."""
  provinciaEdge(
    """The method to use when ordering `Provincia`."""
    orderBy: [ProvinciasOrderBy!] = [PRIMARY_KEY_ASC]
  ): ProvinciasEdge
}

"""All input for the `updateProvinciaByNodeId` mutation."""
input UpdateProvinciaByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Provincia` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Provincia` being updated.
  """
  patch: ProvinciaPatch!
}

"""
Represents an update to a `Provincia`. Fields that are set will be updated.
"""
input ProvinciaPatch {
  id: BigInt
  nombre: String
}

"""All input for the `updateProvincia` mutation."""
input UpdateProvinciaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Provincia` being updated.
  """
  patch: ProvinciaPatch!
  id: BigInt!
}

"""The output of our update `Setting` mutation."""
type UpdateSettingPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Setting` that was updated by this mutation."""
  setting: Setting

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Setting`. May be used by Relay 1."""
  settingEdge(
    """The method to use when ordering `Setting`."""
    orderBy: [SettingsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SettingsEdge
}

"""All input for the `updateSettingByNodeId` mutation."""
input UpdateSettingByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Setting` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Setting` being updated.
  """
  patch: SettingPatch!
}

"""
Represents an update to a `Setting`. Fields that are set will be updated.
"""
input SettingPatch {
  id: BigInt
  clienteId: BigInt
  acercaTitulo: String
  acercaImagen: String
  acercaContenido: String
  acercaMarkerTitulo: String
  acercaLat: String
  acercaLon: String
  tituloEmail: String
  urlGooglePlay: String
  urlAppleStore: String
  urlCampus: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateSetting` mutation."""
input UpdateSettingInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Setting` being updated.
  """
  patch: SettingPatch!
  id: BigInt!
}

"""The output of our update `TelescopeEntry` mutation."""
type UpdateTelescopeEntryPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `TelescopeEntry` that was updated by this mutation."""
  telescopeEntry: TelescopeEntry

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `TelescopeEntry`. May be used by Relay 1."""
  telescopeEntryEdge(
    """The method to use when ordering `TelescopeEntry`."""
    orderBy: [TelescopeEntriesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TelescopeEntriesEdge
}

"""All input for the `updateTelescopeEntryByNodeId` mutation."""
input UpdateTelescopeEntryByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `TelescopeEntry` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `TelescopeEntry` being updated.
  """
  patch: TelescopeEntryPatch!
}

"""
Represents an update to a `TelescopeEntry`. Fields that are set will be updated.
"""
input TelescopeEntryPatch {
  sequence: BigInt
  uuid: String
  batchId: String
  familyHash: String
  shouldDisplayOnIndex: Boolean
  type: String
  content: String
  createdAt: Datetime
}

"""All input for the `updateTelescopeEntry` mutation."""
input UpdateTelescopeEntryInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `TelescopeEntry` being updated.
  """
  patch: TelescopeEntryPatch!
  sequence: BigInt!
}

"""The output of our update `Tip` mutation."""
type UpdateTipPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Tip` that was updated by this mutation."""
  tip: Tip

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `Tip`."""
  cliente: Cliente

  """Reads a single `Divisione` that is related to this `Tip`."""
  division: Divisione

  """An edge for our `Tip`. May be used by Relay 1."""
  tipEdge(
    """The method to use when ordering `Tip`."""
    orderBy: [TipsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TipsEdge
}

"""All input for the `updateTipByNodeId` mutation."""
input UpdateTipByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Tip` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Tip` being updated.
  """
  patch: TipPatch!
}

"""Represents an update to a `Tip`. Fields that are set will be updated."""
input TipPatch {
  id: BigInt
  clienteId: BigInt
  divisionId: BigInt
  titulo: String
  contenido: String
  imagen: String
  tags: String
  orden: BigInt
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateTip` mutation."""
input UpdateTipInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Tip` being updated.
  """
  patch: TipPatch!
  id: BigInt!
}

"""The output of our update `User` mutation."""
type UpdateUserPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `User` that was updated by this mutation."""
  user: User

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Provincia` that is related to this `User`."""
  provincia: Provincia

  """Reads a single `City` that is related to this `User`."""
  ciudad: City

  """An edge for our `User`. May be used by Relay 1."""
  userEdge(
    """The method to use when ordering `User`."""
    orderBy: [UsersOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsersEdge
}

"""All input for the `updateUserByNodeId` mutation."""
input UpdateUserByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `User` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `User` being updated.
  """
  patch: UserPatch!
}

"""Represents an update to a `User`. Fields that are set will be updated."""
input UserPatch {
  id: BigInt
  nombre: String
  apellido: String
  dni: String
  fechaNacimiento: Date
  sexo: String
  foto: String
  email: String
  telefono: String
  password: String
  domicilio: String
  provinciaId: Int
  ciudadId: Int
  perfil: String
  observaciones: String
  rememberToken: String
  recoveryToken: String
  grupoFamiliarId: BigInt
  permisoAdmin: Int
  recibirEmails: Int
  lastAction: Datetime
  createdAt: Datetime
  updatedAt: Datetime
  deletedAt: Datetime
  deletedBy: BigInt
}

"""All input for the `updateUser` mutation."""
input UpdateUserInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `User` being updated.
  """
  patch: UserPatch!
  id: BigInt!
}

"""The output of our update `UsersConfiguracion` mutation."""
type UpdateUsersConfiguracionPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `UsersConfiguracion` that was updated by this mutation."""
  usersConfiguracion: UsersConfiguracion

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `UsersConfiguracion`."""
  user: User

  """
  Reads a single `Divisione` that is related to this `UsersConfiguracion`.
  """
  division: Divisione

  """An edge for our `UsersConfiguracion`. May be used by Relay 1."""
  usersConfiguracionEdge(
    """The method to use when ordering `UsersConfiguracion`."""
    orderBy: [UsersConfiguracionsOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsersConfiguracionsEdge
}

"""All input for the `updateUsersConfiguracionByNodeId` mutation."""
input UpdateUsersConfiguracionByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `UsersConfiguracion` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `UsersConfiguracion` being updated.
  """
  patch: UsersConfiguracionPatch!
}

"""
Represents an update to a `UsersConfiguracion`. Fields that are set will be updated.
"""
input UsersConfiguracionPatch {
  id: BigInt
  userId: Int
  divisionId: Int
  mensajesGlobales: Boolean
  mensajesAutoaprobables: Boolean
  actividadesAutoaprobables: Boolean
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateUsersConfiguracion` mutation."""
input UpdateUsersConfiguracionInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `UsersConfiguracion` being updated.
  """
  patch: UsersConfiguracionPatch!
  id: BigInt!
}

"""The output of our update `UsersGrupo` mutation."""
type UpdateUsersGrupoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `UsersGrupo` that was updated by this mutation."""
  usersGrupo: UsersGrupo

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `UsersGrupo`."""
  user: User

  """Reads a single `Grupo` that is related to this `UsersGrupo`."""
  grupo: Grupo

  """An edge for our `UsersGrupo`. May be used by Relay 1."""
  usersGrupoEdge(
    """The method to use when ordering `UsersGrupo`."""
    orderBy: [UsersGruposOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsersGruposEdge
}

"""All input for the `updateUsersGrupoByNodeId` mutation."""
input UpdateUsersGrupoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `UsersGrupo` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `UsersGrupo` being updated.
  """
  patch: UsersGrupoPatch!
}

"""
Represents an update to a `UsersGrupo`. Fields that are set will be updated.
"""
input UsersGrupoPatch {
  id: BigInt
  userId: BigInt
  grupoId: BigInt
  autoaprueba: Int
  visibleGrupal: Int
  createdAt: Datetime
  updatedAt: Datetime
  userIdOrig: BigInt
}

"""All input for the `updateUsersGrupo` mutation."""
input UpdateUsersGrupoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `UsersGrupo` being updated.
  """
  patch: UsersGrupoPatch!
  id: BigInt!
}

"""The output of our update `UsersInactivo` mutation."""
type UpdateUsersInactivoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `UsersInactivo` that was updated by this mutation."""
  usersInactivo: UsersInactivo

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `UsersInactivo`. May be used by Relay 1."""
  usersInactivoEdge(
    """The method to use when ordering `UsersInactivo`."""
    orderBy: [UsersInactivosOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsersInactivosEdge
}

"""All input for the `updateUsersInactivoByNodeId` mutation."""
input UpdateUsersInactivoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `UsersInactivo` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `UsersInactivo` being updated.
  """
  patch: UsersInactivoPatch!
}

"""
Represents an update to a `UsersInactivo`. Fields that are set will be updated.
"""
input UsersInactivoPatch {
  id: BigInt
  userId: Int
  clienteId: Int
  password: String
  messageId: String
  statusMessage: String
  fechaEntrega: Datetime
  fechaLectura: Datetime
  fechaLogin: Datetime
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateUsersInactivo` mutation."""
input UpdateUsersInactivoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `UsersInactivo` being updated.
  """
  patch: UsersInactivoPatch!
  id: BigInt!
}

"""The output of our update `UsersRole` mutation."""
type UpdateUsersRolePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `UsersRole` that was updated by this mutation."""
  usersRole: UsersRole

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `UsersRole`."""
  user: User

  """Reads a single `Cliente` that is related to this `UsersRole`."""
  usersRolesCliente: Cliente

  """Reads a single `Divisione` that is related to this `UsersRole`."""
  usersRolesDivision: Divisione

  """An edge for our `UsersRole`. May be used by Relay 1."""
  usersRoleEdge(
    """The method to use when ordering `UsersRole`."""
    orderBy: [UsersRolesOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsersRolesEdge
}

"""All input for the `updateUsersRoleByNodeId` mutation."""
input UpdateUsersRoleByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `UsersRole` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `UsersRole` being updated.
  """
  patch: UsersRolePatch!
}

"""
Represents an update to a `UsersRole`. Fields that are set will be updated.
"""
input UsersRolePatch {
  usersRolesId: BigInt
  userId: BigInt
  rol: String
  alumnoIndependiente: Boolean
  usersRolesClienteId: Int
  usersRolesDivisionId: Int
  fechaInicioActividades: Datetime
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateUsersRole` mutation."""
input UpdateUsersRoleInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `UsersRole` being updated.
  """
  patch: UsersRolePatch!
  usersRolesId: BigInt!
}

"""The output of our update `Versione` mutation."""
type UpdateVersionePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Versione` that was updated by this mutation."""
  versione: Versione

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `Versione`."""
  cliente: Cliente

  """An edge for our `Versione`. May be used by Relay 1."""
  versioneEdge(
    """The method to use when ordering `Versione`."""
    orderBy: [VersionesOrderBy!] = [PRIMARY_KEY_ASC]
  ): VersionesEdge
}

"""All input for the `updateVersioneByNodeId` mutation."""
input UpdateVersioneByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Versione` to be updated.
  """
  nodeId: ID!

  """
  An object where the defined keys will be set on the `Versione` being updated.
  """
  patch: VersionePatch!
}

"""
Represents an update to a `Versione`. Fields that are set will be updated.
"""
input VersionePatch {
  id: BigInt
  nombre: String
  version: String
  otaVersion: String
  clienteId: Int
  appleStoreUrl: String
  playStoreUrl: String
  createdAt: Datetime
  updatedAt: Datetime
}

"""All input for the `updateVersione` mutation."""
input UpdateVersioneInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `Versione` being updated.
  """
  patch: VersionePatch!
  id: BigInt!
}

"""The output of our delete `Activity` mutation."""
type DeleteActivityPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Activity` that was deleted by this mutation."""
  activity: Activity
  deletedActividadeNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `EspaciosCurriculare` that is related to this `Activity`.
  """
  espacioCurricular: EspaciosCurriculare

  """Reads a single `Grupo` that is related to this `Activity`."""
  grupo: Grupo

  """Reads a single `Divisione` that is related to this `Activity`."""
  division: Divisione

  """Reads a single `User` that is related to this `Activity`."""
  docente: User

  """
  Reads a single `CalificacionesConcepto` that is related to this `Activity`.
  """
  calificacionConcepto: CalificacionesConcepto

  """An edge for our `Activity`. May be used by Relay 1."""
  activityEdge(
    """The method to use when ordering `Activity`."""
    orderBy: [ActivitiesOrderBy!] = [PRIMARY_KEY_ASC]
  ): ActivitiesEdge
}

"""All input for the `deleteActivityByNodeId` mutation."""
input DeleteActivityByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Activity` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteActivity` mutation."""
input DeleteActivityInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `ActividadesAlumno` mutation."""
type DeleteActividadesAlumnoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `ActividadesAlumno` that was deleted by this mutation."""
  actividadesAlumno: ActividadesAlumno
  deletedActividadesAlumnoNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Activity` that is related to this `ActividadesAlumno`."""
  actividad: Activity

  """Reads a single `User` that is related to this `ActividadesAlumno`."""
  alumno: User

  """An edge for our `ActividadesAlumno`. May be used by Relay 1."""
  actividadesAlumnoEdge(
    """The method to use when ordering `ActividadesAlumno`."""
    orderBy: [ActividadesAlumnosOrderBy!] = [PRIMARY_KEY_ASC]
  ): ActividadesAlumnosEdge
}

"""All input for the `deleteActividadesAlumnoByNodeId` mutation."""
input DeleteActividadesAlumnoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `ActividadesAlumno` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteActividadesAlumno` mutation."""
input DeleteActividadesAlumnoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `ActividadesArchivo` mutation."""
type DeleteActividadesArchivoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `ActividadesArchivo` that was deleted by this mutation."""
  actividadesArchivo: ActividadesArchivo
  deletedActividadesArchivoNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Activity` that is related to this `ActividadesArchivo`.
  """
  actividad: Activity

  """
  Reads a single `ActividadesEntregas` that is related to this `ActividadesArchivo`.
  """
  entrega: ActividadesEntregas

  """Reads a single `User` that is related to this `ActividadesArchivo`."""
  user: User

  """An edge for our `ActividadesArchivo`. May be used by Relay 1."""
  actividadesArchivoEdge(
    """The method to use when ordering `ActividadesArchivo`."""
    orderBy: [ActividadesArchivosOrderBy!] = [PRIMARY_KEY_ASC]
  ): ActividadesArchivosEdge
}

"""All input for the `deleteActividadesArchivoByNodeId` mutation."""
input DeleteActividadesArchivoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `ActividadesArchivo` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteActividadesArchivo` mutation."""
input DeleteActividadesArchivoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `ActividadesEntregas` mutation."""
type DeleteActividadesEntregasPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `ActividadesEntregas` that was deleted by this mutation."""
  actividadesEntregas: ActividadesEntregas
  deletedActividadesEntregasNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `Activity` that is related to this `ActividadesEntregas`.
  """
  actividad: Activity

  """Reads a single `User` that is related to this `ActividadesEntregas`."""
  alumno: User

  """An edge for our `ActividadesEntregas`. May be used by Relay 1."""
  actividadesEntregasEdge(
    """The method to use when ordering `ActividadesEntregas`."""
    orderBy: [ActividadesEntregasesOrderBy!] = [PRIMARY_KEY_ASC]
  ): ActividadesEntregasesEdge
}

"""All input for the `deleteActividadesEntregasByNodeId` mutation."""
input DeleteActividadesEntregasByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `ActividadesEntregas` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteActividadesEntregas` mutation."""
input DeleteActividadesEntregasInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `ActividadesEntregasComentario` mutation."""
type DeleteActividadesEntregasComentarioPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `ActividadesEntregasComentario` that was deleted by this mutation."""
  actividadesEntregasComentario: ActividadesEntregasComentario
  deletedActividadesEntregasComentarioNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `ActividadesEntregas` that is related to this `ActividadesEntregasComentario`.
  """
  entrega: ActividadesEntregas

  """
  Reads a single `User` that is related to this `ActividadesEntregasComentario`.
  """
  user: User

  """
  An edge for our `ActividadesEntregasComentario`. May be used by Relay 1.
  """
  actividadesEntregasComentarioEdge(
    """The method to use when ordering `ActividadesEntregasComentario`."""
    orderBy: [ActividadesEntregasComentariosOrderBy!] = [PRIMARY_KEY_ASC]
  ): ActividadesEntregasComentariosEdge
}

"""
All input for the `deleteActividadesEntregasComentarioByNodeId` mutation.
"""
input DeleteActividadesEntregasComentarioByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `ActividadesEntregasComentario` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteActividadesEntregasComentario` mutation."""
input DeleteActividadesEntregasComentarioInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `ActivityLog` mutation."""
type DeleteActivityLogPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `ActivityLog` that was deleted by this mutation."""
  activityLog: ActivityLog
  deletedActivityLogNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `ActivityLog`. May be used by Relay 1."""
  activityLogEdge(
    """The method to use when ordering `ActivityLog`."""
    orderBy: [ActivityLogsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ActivityLogsEdge
}

"""All input for the `deleteActivityLogByNodeId` mutation."""
input DeleteActivityLogByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `ActivityLog` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteActivityLog` mutation."""
input DeleteActivityLogInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `AdmAporte` mutation."""
type DeleteAdmAportePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmAporte` that was deleted by this mutation."""
  admAporte: AdmAporte
  deletedAdmAporteNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `AdmAporte`. May be used by Relay 1."""
  admAporteEdge(
    """The method to use when ordering `AdmAporte`."""
    orderBy: [AdmAportesOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmAportesEdge
}

"""All input for the `deleteAdmAporteByNodeId` mutation."""
input DeleteAdmAporteByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmAporte` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAdmAporte` mutation."""
input DeleteAdmAporteInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `AdmBanco` mutation."""
type DeleteAdmBancoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmBanco` that was deleted by this mutation."""
  admBanco: AdmBanco
  deletedAdmBancoNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `AdmBanco`. May be used by Relay 1."""
  admBancoEdge(
    """The method to use when ordering `AdmBanco`."""
    orderBy: [AdmBancosOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmBancosEdge
}

"""All input for the `deleteAdmBancoByNodeId` mutation."""
input DeleteAdmBancoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmBanco` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAdmBanco` mutation."""
input DeleteAdmBancoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `AdmBancosCuenta` mutation."""
type DeleteAdmBancosCuentaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmBancosCuenta` that was deleted by this mutation."""
  admBancosCuenta: AdmBancosCuenta
  deletedAdmBancosCuentaNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `AdmBanco` that is related to this `AdmBancosCuenta`."""
  banco: AdmBanco

  """Reads a single `Cliente` that is related to this `AdmBancosCuenta`."""
  cliente: Cliente

  """An edge for our `AdmBancosCuenta`. May be used by Relay 1."""
  admBancosCuentaEdge(
    """The method to use when ordering `AdmBancosCuenta`."""
    orderBy: [AdmBancosCuentasOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmBancosCuentasEdge
}

"""All input for the `deleteAdmBancosCuentaByNodeId` mutation."""
input DeleteAdmBancosCuentaByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmBancosCuenta` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAdmBancosCuenta` mutation."""
input DeleteAdmBancosCuentaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `AdmCaja` mutation."""
type DeleteAdmCajaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmCaja` that was deleted by this mutation."""
  admCaja: AdmCaja
  deletedAdmCajaNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `AdmCaja`."""
  user: User

  """Reads a single `Cliente` that is related to this `AdmCaja`."""
  cliente: Cliente

  """An edge for our `AdmCaja`. May be used by Relay 1."""
  admCajaEdge(
    """The method to use when ordering `AdmCaja`."""
    orderBy: [AdmCajasOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmCajasEdge
}

"""All input for the `deleteAdmCajaByNodeId` mutation."""
input DeleteAdmCajaByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmCaja` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAdmCaja` mutation."""
input DeleteAdmCajaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `AdmCegreso` mutation."""
type DeleteAdmCegresoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmCegreso` that was deleted by this mutation."""
  admCegreso: AdmCegreso
  deletedAdmCegresoNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `AdmCegreso`."""
  cliente: Cliente

  """Reads a single `AdmCuenta` that is related to this `AdmCegreso`."""
  cuenta: AdmCuenta

  """An edge for our `AdmCegreso`. May be used by Relay 1."""
  admCegresoEdge(
    """The method to use when ordering `AdmCegreso`."""
    orderBy: [AdmCegresosOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmCegresosEdge
}

"""All input for the `deleteAdmCegresoByNodeId` mutation."""
input DeleteAdmCegresoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmCegreso` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAdmCegreso` mutation."""
input DeleteAdmCegresoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `AdmCingreso` mutation."""
type DeleteAdmCingresoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmCingreso` that was deleted by this mutation."""
  admCingreso: AdmCingreso
  deletedAdmCingresoNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `AdmCingreso`."""
  cliente: Cliente

  """Reads a single `AdmCuenta` that is related to this `AdmCingreso`."""
  cuenta: AdmCuenta

  """An edge for our `AdmCingreso`. May be used by Relay 1."""
  admCingresoEdge(
    """The method to use when ordering `AdmCingreso`."""
    orderBy: [AdmCingresosOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmCingresosEdge
}

"""All input for the `deleteAdmCingresoByNodeId` mutation."""
input DeleteAdmCingresoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmCingreso` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAdmCingreso` mutation."""
input DeleteAdmCingresoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `AdmCingresosValore` mutation."""
type DeleteAdmCingresosValorePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmCingresosValore` that was deleted by this mutation."""
  admCingresosValore: AdmCingresosValore
  deletedAdmCingresosValoreNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `AdmCingreso` that is related to this `AdmCingresosValore`.
  """
  cingreso: AdmCingreso

  """Reads a single `Cliente` that is related to this `AdmCingresosValore`."""
  cliente: Cliente

  """
  Reads a single `Divisione` that is related to this `AdmCingresosValore`.
  """
  division: Divisione

  """An edge for our `AdmCingresosValore`. May be used by Relay 1."""
  admCingresosValoreEdge(
    """The method to use when ordering `AdmCingresosValore`."""
    orderBy: [AdmCingresosValoresOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmCingresosValoresEdge
}

"""All input for the `deleteAdmCingresosValoreByNodeId` mutation."""
input DeleteAdmCingresosValoreByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmCingresosValore` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAdmCingresosValore` mutation."""
input DeleteAdmCingresosValoreInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `AdmCuenta` mutation."""
type DeleteAdmCuentaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmCuenta` that was deleted by this mutation."""
  admCuenta: AdmCuenta
  deletedAdmCuentaNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `AdmCuenta`. May be used by Relay 1."""
  admCuentaEdge(
    """The method to use when ordering `AdmCuenta`."""
    orderBy: [AdmCuentasOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmCuentasEdge
}

"""All input for the `deleteAdmCuentaByNodeId` mutation."""
input DeleteAdmCuentaByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmCuenta` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAdmCuenta` mutation."""
input DeleteAdmCuentaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `AdmDescuento` mutation."""
type DeleteAdmDescuentoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmDescuento` that was deleted by this mutation."""
  admDescuento: AdmDescuento
  deletedAdmDescuentoNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `AdmDescuento`. May be used by Relay 1."""
  admDescuentoEdge(
    """The method to use when ordering `AdmDescuento`."""
    orderBy: [AdmDescuentosOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmDescuentosEdge
}

"""All input for the `deleteAdmDescuentoByNodeId` mutation."""
input DeleteAdmDescuentoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmDescuento` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAdmDescuento` mutation."""
input DeleteAdmDescuentoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `AdmDescuentosGrupo` mutation."""
type DeleteAdmDescuentosGrupoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmDescuentosGrupo` that was deleted by this mutation."""
  admDescuentosGrupo: AdmDescuentosGrupo
  deletedAdmDescuentosGrupoNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `AdmDescuentosGrupo`. May be used by Relay 1."""
  admDescuentosGrupoEdge(
    """The method to use when ordering `AdmDescuentosGrupo`."""
    orderBy: [AdmDescuentosGruposOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmDescuentosGruposEdge
}

"""All input for the `deleteAdmDescuentosGrupoByNodeId` mutation."""
input DeleteAdmDescuentosGrupoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmDescuentosGrupo` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAdmDescuentosGrupo` mutation."""
input DeleteAdmDescuentosGrupoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `AdmDescuentosGruposFamiliare` mutation."""
type DeleteAdmDescuentosGruposFamiliarePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmDescuentosGruposFamiliare` that was deleted by this mutation."""
  admDescuentosGruposFamiliare: AdmDescuentosGruposFamiliare
  deletedAdmDescuentosGruposFamiliareNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `AdmDescuento` that is related to this `AdmDescuentosGruposFamiliare`.
  """
  descuento: AdmDescuento

  """
  Reads a single `AdmGruposFamiliare` that is related to this `AdmDescuentosGruposFamiliare`.
  """
  grupoFamiliar: AdmGruposFamiliare

  """
  An edge for our `AdmDescuentosGruposFamiliare`. May be used by Relay 1.
  """
  admDescuentosGruposFamiliareEdge(
    """The method to use when ordering `AdmDescuentosGruposFamiliare`."""
    orderBy: [AdmDescuentosGruposFamiliaresOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmDescuentosGruposFamiliaresEdge
}

"""
All input for the `deleteAdmDescuentosGruposFamiliareByNodeId` mutation.
"""
input DeleteAdmDescuentosGruposFamiliareByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmDescuentosGruposFamiliare` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAdmDescuentosGruposFamiliare` mutation."""
input DeleteAdmDescuentosGruposFamiliareInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `AdmEgresoItem` mutation."""
type DeleteAdmEgresoItemPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmEgresoItem` that was deleted by this mutation."""
  admEgresoItem: AdmEgresoItem
  deletedAdmEgresoItemNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `AdmEgreso` that is related to this `AdmEgresoItem`."""
  egreso: AdmEgreso

  """Reads a single `AdmCegreso` that is related to this `AdmEgresoItem`."""
  conceptoEgreso: AdmCegreso

  """Reads a single `Cliente` that is related to this `AdmEgresoItem`."""
  cliente: Cliente

  """An edge for our `AdmEgresoItem`. May be used by Relay 1."""
  admEgresoItemEdge(
    """The method to use when ordering `AdmEgresoItem`."""
    orderBy: [AdmEgresoItemsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmEgresoItemsEdge
}

"""All input for the `deleteAdmEgresoItemByNodeId` mutation."""
input DeleteAdmEgresoItemByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmEgresoItem` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAdmEgresoItem` mutation."""
input DeleteAdmEgresoItemInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `AdmEgreso` mutation."""
type DeleteAdmEgresoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmEgreso` that was deleted by this mutation."""
  admEgreso: AdmEgreso
  deletedAdmEgresoNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `AdmProveedore` that is related to this `AdmEgreso`."""
  proveedor: AdmProveedore

  """Reads a single `Cliente` that is related to this `AdmEgreso`."""
  cliente: Cliente

  """Reads a single `Divisione` that is related to this `AdmEgreso`."""
  division: Divisione

  """Reads a single `User` that is related to this `AdmEgreso`."""
  userByUserCreator: User

  """An edge for our `AdmEgreso`. May be used by Relay 1."""
  admEgresoEdge(
    """The method to use when ordering `AdmEgreso`."""
    orderBy: [AdmEgresosOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmEgresosEdge
}

"""All input for the `deleteAdmEgresoByNodeId` mutation."""
input DeleteAdmEgresoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmEgreso` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAdmEgreso` mutation."""
input DeleteAdmEgresoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `AdmFacturaItem` mutation."""
type DeleteAdmFacturaItemPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmFacturaItem` that was deleted by this mutation."""
  admFacturaItem: AdmFacturaItem
  deletedAdmFacturaItemNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `AdmFactura` that is related to this `AdmFacturaItem`."""
  factura: AdmFactura

  """Reads a single `AdmCingreso` that is related to this `AdmFacturaItem`."""
  conceptoIngreso: AdmCingreso

  """Reads a single `Cliente` that is related to this `AdmFacturaItem`."""
  cliente: Cliente

  """Reads a single `User` that is related to this `AdmFacturaItem`."""
  user: User

  """An edge for our `AdmFacturaItem`. May be used by Relay 1."""
  admFacturaItemEdge(
    """The method to use when ordering `AdmFacturaItem`."""
    orderBy: [AdmFacturaItemsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmFacturaItemsEdge
}

"""All input for the `deleteAdmFacturaItemByNodeId` mutation."""
input DeleteAdmFacturaItemByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmFacturaItem` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAdmFacturaItem` mutation."""
input DeleteAdmFacturaItemInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `AdmFacturaPago` mutation."""
type DeleteAdmFacturaPagoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmFacturaPago` that was deleted by this mutation."""
  admFacturaPago: AdmFacturaPago
  deletedAdmFacturaPagoNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `AdmFacturaPago`."""
  cliente: Cliente

  """Reads a single `User` that is related to this `AdmFacturaPago`."""
  userCreator: User

  """Reads a single `AdmFactura` that is related to this `AdmFacturaPago`."""
  factura: AdmFactura

  """An edge for our `AdmFacturaPago`. May be used by Relay 1."""
  admFacturaPagoEdge(
    """The method to use when ordering `AdmFacturaPago`."""
    orderBy: [AdmFacturaPagosOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmFacturaPagosEdge
}

"""All input for the `deleteAdmFacturaPagoByNodeId` mutation."""
input DeleteAdmFacturaPagoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmFacturaPago` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAdmFacturaPago` mutation."""
input DeleteAdmFacturaPagoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `AdmFactura` mutation."""
type DeleteAdmFacturaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmFactura` that was deleted by this mutation."""
  admFactura: AdmFactura
  deletedAdmFacturaNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `AdmFactura`."""
  cliente: Cliente

  """Reads a single `User` that is related to this `AdmFactura`."""
  userByUserCreator: User

  """An edge for our `AdmFactura`. May be used by Relay 1."""
  admFacturaEdge(
    """The method to use when ordering `AdmFactura`."""
    orderBy: [AdmFacturasOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmFacturasEdge
}

"""All input for the `deleteAdmFacturaByNodeId` mutation."""
input DeleteAdmFacturaByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmFactura` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAdmFactura` mutation."""
input DeleteAdmFacturaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `AdmGruposFamiliare` mutation."""
type DeleteAdmGruposFamiliarePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmGruposFamiliare` that was deleted by this mutation."""
  admGruposFamiliare: AdmGruposFamiliare
  deletedAdmGruposFamiliareNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `AdmGruposFamiliare`."""
  cliente: Cliente

  """
  Reads a single `AdmDescuento` that is related to this `AdmGruposFamiliare`.
  """
  descuento: AdmDescuento

  """An edge for our `AdmGruposFamiliare`. May be used by Relay 1."""
  admGruposFamiliareEdge(
    """The method to use when ordering `AdmGruposFamiliare`."""
    orderBy: [AdmGruposFamiliaresOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmGruposFamiliaresEdge
}

"""All input for the `deleteAdmGruposFamiliareByNodeId` mutation."""
input DeleteAdmGruposFamiliareByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmGruposFamiliare` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAdmGruposFamiliare` mutation."""
input DeleteAdmGruposFamiliareInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `AdmProveedore` mutation."""
type DeleteAdmProveedorePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AdmProveedore` that was deleted by this mutation."""
  admProveedore: AdmProveedore
  deletedAdmProveedoreNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `AdmProveedore`."""
  cliente: Cliente

  """An edge for our `AdmProveedore`. May be used by Relay 1."""
  admProveedoreEdge(
    """The method to use when ordering `AdmProveedore`."""
    orderBy: [AdmProveedoresOrderBy!] = [PRIMARY_KEY_ASC]
  ): AdmProveedoresEdge
}

"""All input for the `deleteAdmProveedoreByNodeId` mutation."""
input DeleteAdmProveedoreByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AdmProveedore` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAdmProveedore` mutation."""
input DeleteAdmProveedoreInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `Alerta` mutation."""
type DeleteAlertaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Alerta` that was deleted by this mutation."""
  alerta: Alerta
  deletedAlertaNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `Alerta`."""
  alumno: User

  """Reads a single `Activity` that is related to this `Alerta`."""
  actividad: Activity

  """Reads a single `ActividadesEntregas` that is related to this `Alerta`."""
  entrega: ActividadesEntregas

  """An edge for our `Alerta`. May be used by Relay 1."""
  alertaEdge(
    """The method to use when ordering `Alerta`."""
    orderBy: [AlertasOrderBy!] = [PRIMARY_KEY_ASC]
  ): AlertasEdge
}

"""All input for the `deleteAlertaByNodeId` mutation."""
input DeleteAlertaByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Alerta` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAlerta` mutation."""
input DeleteAlertaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `Asignatura` mutation."""
type DeleteAsignaturaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Asignatura` that was deleted by this mutation."""
  asignatura: Asignatura
  deletedAsignaturaNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Grupo` that is related to this `Asignatura`."""
  grupo: Grupo

  """Reads a single `User` that is related to this `Asignatura`."""
  docente: User

  """
  Reads a single `EspaciosCurriculare` that is related to this `Asignatura`.
  """
  espacioCurricular: EspaciosCurriculare

  """An edge for our `Asignatura`. May be used by Relay 1."""
  asignaturaEdge(
    """The method to use when ordering `Asignatura`."""
    orderBy: [AsignaturasOrderBy!] = [PRIMARY_KEY_ASC]
  ): AsignaturasEdge
}

"""All input for the `deleteAsignaturaByNodeId` mutation."""
input DeleteAsignaturaByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Asignatura` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAsignatura` mutation."""
input DeleteAsignaturaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `AwsSesHistorial` mutation."""
type DeleteAwsSesHistorialPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `AwsSesHistorial` that was deleted by this mutation."""
  awsSesHistorial: AwsSesHistorial
  deletedAwsSesHistorialNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `AwsSesHistorial`. May be used by Relay 1."""
  awsSesHistorialEdge(
    """The method to use when ordering `AwsSesHistorial`."""
    orderBy: [AwsSesHistorialsOrderBy!] = [PRIMARY_KEY_ASC]
  ): AwsSesHistorialsEdge
}

"""All input for the `deleteAwsSesHistorialByNodeId` mutation."""
input DeleteAwsSesHistorialByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `AwsSesHistorial` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteAwsSesHistorial` mutation."""
input DeleteAwsSesHistorialInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `Calendario` mutation."""
type DeleteCalendarioPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Calendario` that was deleted by this mutation."""
  calendario: Calendario
  deletedCalendarioNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Grupo` that is related to this `Calendario`."""
  grupo: Grupo

  """Reads a single `Activity` that is related to this `Calendario`."""
  actividad: Activity

  """Reads a single `User` that is related to this `Calendario`."""
  user: User

  """An edge for our `Calendario`. May be used by Relay 1."""
  calendarioEdge(
    """The method to use when ordering `Calendario`."""
    orderBy: [CalendariosOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalendariosEdge
}

"""All input for the `deleteCalendarioByNodeId` mutation."""
input DeleteCalendarioByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Calendario` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteCalendario` mutation."""
input DeleteCalendarioInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `CalendarioGrupo` mutation."""
type DeleteCalendarioGrupoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `CalendarioGrupo` that was deleted by this mutation."""
  calendarioGrupo: CalendarioGrupo
  deletedCalendarioGrupoNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Calendario` that is related to this `CalendarioGrupo`."""
  calendario: Calendario

  """Reads a single `Grupo` that is related to this `CalendarioGrupo`."""
  grupo: Grupo

  """An edge for our `CalendarioGrupo`. May be used by Relay 1."""
  calendarioGrupoEdge(
    """The method to use when ordering `CalendarioGrupo`."""
    orderBy: [CalendarioGruposOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalendarioGruposEdge
}

"""All input for the `deleteCalendarioGrupoByNodeId` mutation."""
input DeleteCalendarioGrupoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `CalendarioGrupo` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteCalendarioGrupo` mutation."""
input DeleteCalendarioGrupoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `CalendarioUser` mutation."""
type DeleteCalendarioUserPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `CalendarioUser` that was deleted by this mutation."""
  calendarioUser: CalendarioUser
  deletedCalendarioUserNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `CalendarioUser`. May be used by Relay 1."""
  calendarioUserEdge(
    """The method to use when ordering `CalendarioUser`."""
    orderBy: [CalendarioUsersOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalendarioUsersEdge
}

"""All input for the `deleteCalendarioUserByNodeId` mutation."""
input DeleteCalendarioUserByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `CalendarioUser` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteCalendarioUser` mutation."""
input DeleteCalendarioUserInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `Calificacione` mutation."""
type DeleteCalificacionePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Calificacione` that was deleted by this mutation."""
  calificacione: Calificacione
  deletedCalificacioneNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  Reads a single `CalificacionesConcepto` that is related to this `Calificacione`.
  """
  concepto: CalificacionesConcepto

  """Reads a single `User` that is related to this `Calificacione`."""
  alumno: User

  """Reads a single `Divisione` that is related to this `Calificacione`."""
  division: Divisione

  """
  Reads a single `CalificacionesEscalasValore` that is related to this `Calificacione`.
  """
  calificacionEscalaValor: CalificacionesEscalasValore

  """An edge for our `Calificacione`. May be used by Relay 1."""
  calificacioneEdge(
    """The method to use when ordering `Calificacione`."""
    orderBy: [CalificacionesOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalificacionesEdge
}

"""All input for the `deleteCalificacioneByNodeId` mutation."""
input DeleteCalificacioneByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Calificacione` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteCalificacione` mutation."""
input DeleteCalificacioneInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `CalificacionesConcepto` mutation."""
type DeleteCalificacionesConceptoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `CalificacionesConcepto` that was deleted by this mutation."""
  calificacionesConcepto: CalificacionesConcepto
  deletedCalificacionesConceptoNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `CalificacionesConcepto`. May be used by Relay 1."""
  calificacionesConceptoEdge(
    """The method to use when ordering `CalificacionesConcepto`."""
    orderBy: [CalificacionesConceptosOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalificacionesConceptosEdge
}

"""All input for the `deleteCalificacionesConceptoByNodeId` mutation."""
input DeleteCalificacionesConceptoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `CalificacionesConcepto` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteCalificacionesConcepto` mutation."""
input DeleteCalificacionesConceptoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `CalificacionesConceptosAlumno` mutation."""
type DeleteCalificacionesConceptosAlumnoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `CalificacionesConceptosAlumno` that was deleted by this mutation."""
  calificacionesConceptosAlumno: CalificacionesConceptosAlumno
  deletedCalificacionesConceptosAlumnoNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """
  An edge for our `CalificacionesConceptosAlumno`. May be used by Relay 1.
  """
  calificacionesConceptosAlumnoEdge(
    """The method to use when ordering `CalificacionesConceptosAlumno`."""
    orderBy: [CalificacionesConceptosAlumnosOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalificacionesConceptosAlumnosEdge
}

"""
All input for the `deleteCalificacionesConceptosAlumnoByNodeId` mutation.
"""
input DeleteCalificacionesConceptosAlumnoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `CalificacionesConceptosAlumno` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteCalificacionesConceptosAlumno` mutation."""
input DeleteCalificacionesConceptosAlumnoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `CalificacionesEscala` mutation."""
type DeleteCalificacionesEscalaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `CalificacionesEscala` that was deleted by this mutation."""
  calificacionesEscala: CalificacionesEscala
  deletedCalificacionesEscalaNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `CalificacionesEscala`. May be used by Relay 1."""
  calificacionesEscalaEdge(
    """The method to use when ordering `CalificacionesEscala`."""
    orderBy: [CalificacionesEscalasOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalificacionesEscalasEdge
}

"""All input for the `deleteCalificacionesEscalaByNodeId` mutation."""
input DeleteCalificacionesEscalaByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `CalificacionesEscala` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteCalificacionesEscala` mutation."""
input DeleteCalificacionesEscalaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `CalificacionesEscalasValore` mutation."""
type DeleteCalificacionesEscalasValorePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `CalificacionesEscalasValore` that was deleted by this mutation."""
  calificacionesEscalasValore: CalificacionesEscalasValore
  deletedCalificacionesEscalasValoreNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `CalificacionesEscalasValore`. May be used by Relay 1."""
  calificacionesEscalasValoreEdge(
    """The method to use when ordering `CalificacionesEscalasValore`."""
    orderBy: [CalificacionesEscalasValoresOrderBy!] = [PRIMARY_KEY_ASC]
  ): CalificacionesEscalasValoresEdge
}

"""
All input for the `deleteCalificacionesEscalasValoreByNodeId` mutation.
"""
input DeleteCalificacionesEscalasValoreByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `CalificacionesEscalasValore` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteCalificacionesEscalasValore` mutation."""
input DeleteCalificacionesEscalasValoreInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `Changelog` mutation."""
type DeleteChangelogPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Changelog` that was deleted by this mutation."""
  changelog: Changelog
  deletedChangelogNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Changelog`. May be used by Relay 1."""
  changelogEdge(
    """The method to use when ordering `Changelog`."""
    orderBy: [ChangelogsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ChangelogsEdge
}

"""All input for the `deleteChangelogByNodeId` mutation."""
input DeleteChangelogByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Changelog` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteChangelog` mutation."""
input DeleteChangelogInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `City` mutation."""
type DeleteCityPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `City` that was deleted by this mutation."""
  city: City
  deletedCiudadeNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Provincia` that is related to this `City`."""
  provincia: Provincia

  """An edge for our `City`. May be used by Relay 1."""
  cityEdge(
    """The method to use when ordering `City`."""
    orderBy: [CitiesOrderBy!] = [PRIMARY_KEY_ASC]
  ): CitiesEdge
}

"""All input for the `deleteCityByNodeId` mutation."""
input DeleteCityByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `City` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteCity` mutation."""
input DeleteCityInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `ClienteModule` mutation."""
type DeleteClienteModulePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `ClienteModule` that was deleted by this mutation."""
  clienteModule: ClienteModule
  deletedClienteModuleNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `ClienteModule`. May be used by Relay 1."""
  clienteModuleEdge(
    """The method to use when ordering `ClienteModule`."""
    orderBy: [ClienteModulesOrderBy!] = [PRIMARY_KEY_ASC]
  ): ClienteModulesEdge
}

"""All input for the `deleteClienteModuleByNodeId` mutation."""
input DeleteClienteModuleByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `ClienteModule` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteClienteModule` mutation."""
input DeleteClienteModuleInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `Cliente` mutation."""
type DeleteClientePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Cliente` that was deleted by this mutation."""
  cliente: Cliente
  deletedClienteNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Cliente`. May be used by Relay 1."""
  clienteEdge(
    """The method to use when ordering `Cliente`."""
    orderBy: [ClientesOrderBy!] = [PRIMARY_KEY_ASC]
  ): ClientesEdge
}

"""All input for the `deleteClienteByNodeId` mutation."""
input DeleteClienteByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Cliente` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteCliente` mutation."""
input DeleteClienteInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `Dispositivo` mutation."""
type DeleteDispositivoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Dispositivo` that was deleted by this mutation."""
  dispositivo: Dispositivo
  deletedDispositivoNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `Dispositivo`."""
  user: User

  """Reads a single `Cliente` that is related to this `Dispositivo`."""
  cliente: Cliente

  """An edge for our `Dispositivo`. May be used by Relay 1."""
  dispositivoEdge(
    """The method to use when ordering `Dispositivo`."""
    orderBy: [DispositivosOrderBy!] = [PRIMARY_KEY_ASC]
  ): DispositivosEdge
}

"""All input for the `deleteDispositivoByNodeId` mutation."""
input DeleteDispositivoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Dispositivo` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteDispositivo` mutation."""
input DeleteDispositivoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `Divisione` mutation."""
type DeleteDivisionePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Divisione` that was deleted by this mutation."""
  divisione: Divisione
  deletedDivisioneNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Divisione`. May be used by Relay 1."""
  divisioneEdge(
    """The method to use when ordering `Divisione`."""
    orderBy: [DivisionesOrderBy!] = [PRIMARY_KEY_ASC]
  ): DivisionesEdge
}

"""All input for the `deleteDivisioneByNodeId` mutation."""
input DeleteDivisioneByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Divisione` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteDivisione` mutation."""
input DeleteDivisioneInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `Errorsapp` mutation."""
type DeleteErrorsappPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Errorsapp` that was deleted by this mutation."""
  errorsapp: Errorsapp
  deletedErrorsappNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `Errorsapp`."""
  user: User

  """An edge for our `Errorsapp`. May be used by Relay 1."""
  errorsappEdge(
    """The method to use when ordering `Errorsapp`."""
    orderBy: [ErrorsappsOrderBy!] = [PRIMARY_KEY_ASC]
  ): ErrorsappsEdge
}

"""All input for the `deleteErrorsappByNodeId` mutation."""
input DeleteErrorsappByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Errorsapp` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteErrorsapp` mutation."""
input DeleteErrorsappInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `EspaciosCurriculare` mutation."""
type DeleteEspaciosCurricularePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `EspaciosCurriculare` that was deleted by this mutation."""
  espaciosCurriculare: EspaciosCurriculare
  deletedEspaciosCurriculareNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `EspaciosCurriculare`. May be used by Relay 1."""
  espaciosCurriculareEdge(
    """The method to use when ordering `EspaciosCurriculare`."""
    orderBy: [EspaciosCurricularesOrderBy!] = [PRIMARY_KEY_ASC]
  ): EspaciosCurricularesEdge
}

"""All input for the `deleteEspaciosCurriculareByNodeId` mutation."""
input DeleteEspaciosCurriculareByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `EspaciosCurriculare` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteEspaciosCurriculare` mutation."""
input DeleteEspaciosCurriculareInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `Evento` mutation."""
type DeleteEventoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Evento` that was deleted by this mutation."""
  evento: Evento
  deletedEventoNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `Evento`."""
  cliente: Cliente

  """Reads a single `Divisione` that is related to this `Evento`."""
  division: Divisione

  """An edge for our `Evento`. May be used by Relay 1."""
  eventoEdge(
    """The method to use when ordering `Evento`."""
    orderBy: [EventosOrderBy!] = [PRIMARY_KEY_ASC]
  ): EventosEdge
}

"""All input for the `deleteEventoByNodeId` mutation."""
input DeleteEventoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Evento` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteEvento` mutation."""
input DeleteEventoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `FailedJob` mutation."""
type DeleteFailedJobPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `FailedJob` that was deleted by this mutation."""
  failedJob: FailedJob
  deletedFailedJobNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `FailedJob`. May be used by Relay 1."""
  failedJobEdge(
    """The method to use when ordering `FailedJob`."""
    orderBy: [FailedJobsOrderBy!] = [PRIMARY_KEY_ASC]
  ): FailedJobsEdge
}

"""All input for the `deleteFailedJobByNodeId` mutation."""
input DeleteFailedJobByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `FailedJob` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteFailedJob` mutation."""
input DeleteFailedJobInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `Foto` mutation."""
type DeleteFotoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Foto` that was deleted by this mutation."""
  foto: Foto
  deletedFotoNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Galeria` that is related to this `Foto`."""
  galeria: Galeria

  """An edge for our `Foto`. May be used by Relay 1."""
  fotoEdge(
    """The method to use when ordering `Foto`."""
    orderBy: [FotosOrderBy!] = [PRIMARY_KEY_ASC]
  ): FotosEdge
}

"""All input for the `deleteFotoByNodeId` mutation."""
input DeleteFotoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Foto` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteFoto` mutation."""
input DeleteFotoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `Galeria` mutation."""
type DeleteGaleriaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Galeria` that was deleted by this mutation."""
  galeria: Galeria
  deletedGaleriaNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `Galeria`."""
  cliente: Cliente

  """Reads a single `Divisione` that is related to this `Galeria`."""
  division: Divisione

  """An edge for our `Galeria`. May be used by Relay 1."""
  galeriaEdge(
    """The method to use when ordering `Galeria`."""
    orderBy: [GaleriasOrderBy!] = [PRIMARY_KEY_ASC]
  ): GaleriasEdge
}

"""All input for the `deleteGaleriaByNodeId` mutation."""
input DeleteGaleriaByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Galeria` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteGaleria` mutation."""
input DeleteGaleriaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `Grupo` mutation."""
type DeleteGrupoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Grupo` that was deleted by this mutation."""
  grupo: Grupo
  deletedGrupoNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `Grupo`."""
  cliente: Cliente

  """Reads a single `Divisione` that is related to this `Grupo`."""
  division: Divisione

  """An edge for our `Grupo`. May be used by Relay 1."""
  grupoEdge(
    """The method to use when ordering `Grupo`."""
    orderBy: [GruposOrderBy!] = [PRIMARY_KEY_ASC]
  ): GruposEdge
}

"""All input for the `deleteGrupoByNodeId` mutation."""
input DeleteGrupoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Grupo` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteGrupo` mutation."""
input DeleteGrupoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `GruposArchivo` mutation."""
type DeleteGruposArchivoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `GruposArchivo` that was deleted by this mutation."""
  gruposArchivo: GruposArchivo
  deletedGruposArchivoNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Grupo` that is related to this `GruposArchivo`."""
  grupo: Grupo

  """Reads a single `User` that is related to this `GruposArchivo`."""
  user: User

  """An edge for our `GruposArchivo`. May be used by Relay 1."""
  gruposArchivoEdge(
    """The method to use when ordering `GruposArchivo`."""
    orderBy: [GruposArchivosOrderBy!] = [PRIMARY_KEY_ASC]
  ): GruposArchivosEdge
}

"""All input for the `deleteGruposArchivoByNodeId` mutation."""
input DeleteGruposArchivoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `GruposArchivo` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteGruposArchivo` mutation."""
input DeleteGruposArchivoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `Hijo` mutation."""
type DeleteHijoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Hijo` that was deleted by this mutation."""
  hijo: Hijo
  deletedHijoNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `Hijo`."""
  user: User

  """Reads a single `User` that is related to this `Hijo`."""
  uhijos: User

  """An edge for our `Hijo`. May be used by Relay 1."""
  hijoEdge(
    """The method to use when ordering `Hijo`."""
    orderBy: [HijosOrderBy!] = [PRIMARY_KEY_ASC]
  ): HijosEdge
}

"""All input for the `deleteHijoByNodeId` mutation."""
input DeleteHijoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Hijo` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteHijo` mutation."""
input DeleteHijoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `HistorialNotificacione` mutation."""
type DeleteHistorialNotificacionePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `HistorialNotificacione` that was deleted by this mutation."""
  historialNotificacione: HistorialNotificacione
  deletedHistorialNotificacioneNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `HistorialNotificacione`. May be used by Relay 1."""
  historialNotificacioneEdge(
    """The method to use when ordering `HistorialNotificacione`."""
    orderBy: [HistorialNotificacionesOrderBy!] = [PRIMARY_KEY_ASC]
  ): HistorialNotificacionesEdge
}

"""All input for the `deleteHistorialNotificacioneByNodeId` mutation."""
input DeleteHistorialNotificacioneByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `HistorialNotificacione` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteHistorialNotificacione` mutation."""
input DeleteHistorialNotificacioneInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `Log` mutation."""
type DeleteLogPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Log` that was deleted by this mutation."""
  log: Log
  deletedLogNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Log`. May be used by Relay 1."""
  logEdge(
    """The method to use when ordering `Log`."""
    orderBy: [LogsOrderBy!] = [PRIMARY_KEY_ASC]
  ): LogsEdge
}

"""All input for the `deleteLogByNodeId` mutation."""
input DeleteLogByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Log` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteLog` mutation."""
input DeleteLogInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `MensajeItem` mutation."""
type DeleteMensajeItemPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `MensajeItem` that was deleted by this mutation."""
  mensajeItem: MensajeItem
  deletedMensajeItemNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Mensaje` that is related to this `MensajeItem`."""
  mensaje: Mensaje

  """An edge for our `MensajeItem`. May be used by Relay 1."""
  mensajeItemEdge(
    """The method to use when ordering `MensajeItem`."""
    orderBy: [MensajeItemsOrderBy!] = [PRIMARY_KEY_ASC]
  ): MensajeItemsEdge
}

"""All input for the `deleteMensajeItemByNodeId` mutation."""
input DeleteMensajeItemByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `MensajeItem` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteMensajeItem` mutation."""
input DeleteMensajeItemInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `Mensaje` mutation."""
type DeleteMensajePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Mensaje` that was deleted by this mutation."""
  mensaje: Mensaje
  deletedMensajeNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Mensaje`. May be used by Relay 1."""
  mensajeEdge(
    """The method to use when ordering `Mensaje`."""
    orderBy: [MensajesOrderBy!] = [PRIMARY_KEY_ASC]
  ): MensajesEdge
}

"""All input for the `deleteMensajeByNodeId` mutation."""
input DeleteMensajeByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Mensaje` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteMensaje` mutation."""
input DeleteMensajeInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `MensajesAdmin` mutation."""
type DeleteMensajesAdminPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `MensajesAdmin` that was deleted by this mutation."""
  mensajesAdmin: MensajesAdmin
  deletedMensajesAdminNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `MensajesAdmin`. May be used by Relay 1."""
  mensajesAdminEdge(
    """The method to use when ordering `MensajesAdmin`."""
    orderBy: [MensajesAdminsOrderBy!] = [PRIMARY_KEY_ASC]
  ): MensajesAdminsEdge
}

"""All input for the `deleteMensajesAdminByNodeId` mutation."""
input DeleteMensajesAdminByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `MensajesAdmin` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteMensajesAdmin` mutation."""
input DeleteMensajesAdminInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `MensajesArchivo` mutation."""
type DeleteMensajesArchivoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `MensajesArchivo` that was deleted by this mutation."""
  mensajesArchivo: MensajesArchivo
  deletedMensajesArchivoNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `MensajesArchivo`. May be used by Relay 1."""
  mensajesArchivoEdge(
    """The method to use when ordering `MensajesArchivo`."""
    orderBy: [MensajesArchivosOrderBy!] = [PRIMARY_KEY_ASC]
  ): MensajesArchivosEdge
}

"""All input for the `deleteMensajesArchivoByNodeId` mutation."""
input DeleteMensajesArchivoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `MensajesArchivo` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteMensajesArchivo` mutation."""
input DeleteMensajesArchivoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `MenuApp` mutation."""
type DeleteMenuAppPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `MenuApp` that was deleted by this mutation."""
  menuApp: MenuApp
  deletedMenuAppNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `MenuApp`. May be used by Relay 1."""
  menuAppEdge(
    """The method to use when ordering `MenuApp`."""
    orderBy: [MenuAppsOrderBy!] = [PRIMARY_KEY_ASC]
  ): MenuAppsEdge
}

"""All input for the `deleteMenuAppByNodeId` mutation."""
input DeleteMenuAppByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `MenuApp` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteMenuApp` mutation."""
input DeleteMenuAppInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `Migration` mutation."""
type DeleteMigrationPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Migration` that was deleted by this mutation."""
  migration: Migration
  deletedMigrationNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Migration`. May be used by Relay 1."""
  migrationEdge(
    """The method to use when ordering `Migration`."""
    orderBy: [MigrationsOrderBy!] = [PRIMARY_KEY_ASC]
  ): MigrationsEdge
}

"""All input for the `deleteMigrationByNodeId` mutation."""
input DeleteMigrationByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Migration` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteMigration` mutation."""
input DeleteMigrationInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `Module` mutation."""
type DeleteModulePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Module` that was deleted by this mutation."""
  module: Module
  deletedModuleNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Module`. May be used by Relay 1."""
  moduleEdge(
    """The method to use when ordering `Module`."""
    orderBy: [ModulesOrderBy!] = [PRIMARY_KEY_ASC]
  ): ModulesEdge
}

"""All input for the `deleteModuleByNodeId` mutation."""
input DeleteModuleByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Module` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteModule` mutation."""
input DeleteModuleInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `ModulesBack` mutation."""
type DeleteModulesBackPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `ModulesBack` that was deleted by this mutation."""
  modulesBack: ModulesBack
  deletedModulesBackNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `ModulesBack`. May be used by Relay 1."""
  modulesBackEdge(
    """The method to use when ordering `ModulesBack`."""
    orderBy: [ModulesBacksOrderBy!] = [PRIMARY_KEY_ASC]
  ): ModulesBacksEdge
}

"""All input for the `deleteModulesBackByNodeId` mutation."""
input DeleteModulesBackByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `ModulesBack` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteModulesBack` mutation."""
input DeleteModulesBackInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `MtCorregir` mutation."""
type DeleteMtCorregirPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `MtCorregir` that was deleted by this mutation."""
  mtCorregir: MtCorregir
  deletedMtCorregirNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `MtCorregir`. May be used by Relay 1."""
  mtCorregirEdge(
    """The method to use when ordering `MtCorregir`."""
    orderBy: [MtCorregirsOrderBy!] = [PRIMARY_KEY_ASC]
  ): MtCorregirsEdge
}

"""All input for the `deleteMtCorregirByNodeId` mutation."""
input DeleteMtCorregirByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `MtCorregir` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteMtCorregir` mutation."""
input DeleteMtCorregirInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `MultimediaMapping` mutation."""
type DeleteMultimediaMappingPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `MultimediaMapping` that was deleted by this mutation."""
  multimediaMapping: MultimediaMapping
  deletedMultimediaMappingNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `MultimediaMapping`. May be used by Relay 1."""
  multimediaMappingEdge(
    """The method to use when ordering `MultimediaMapping`."""
    orderBy: [MultimediaMappingsOrderBy!] = [PRIMARY_KEY_ASC]
  ): MultimediaMappingsEdge
}

"""All input for the `deleteMultimediaMappingByNodeId` mutation."""
input DeleteMultimediaMappingByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `MultimediaMapping` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteMultimediaMapping` mutation."""
input DeleteMultimediaMappingInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `Noticia` mutation."""
type DeleteNoticiaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Noticia` that was deleted by this mutation."""
  noticia: Noticia
  deletedNoticiaNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `Noticia`."""
  cliente: Cliente

  """Reads a single `Divisione` that is related to this `Noticia`."""
  division: Divisione

  """An edge for our `Noticia`. May be used by Relay 1."""
  noticiaEdge(
    """The method to use when ordering `Noticia`."""
    orderBy: [NoticiasOrderBy!] = [PRIMARY_KEY_ASC]
  ): NoticiasEdge
}

"""All input for the `deleteNoticiaByNodeId` mutation."""
input DeleteNoticiaByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Noticia` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteNoticia` mutation."""
input DeleteNoticiaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `Opcione` mutation."""
type DeleteOpcionePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Opcione` that was deleted by this mutation."""
  opcione: Opcione
  deletedOpcioneNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Opcione`. May be used by Relay 1."""
  opcioneEdge(
    """The method to use when ordering `Opcione`."""
    orderBy: [OpcionesOrderBy!] = [PRIMARY_KEY_ASC]
  ): OpcionesEdge
}

"""All input for the `deleteOpcioneByNodeId` mutation."""
input DeleteOpcioneByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Opcione` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteOpcione` mutation."""
input DeleteOpcioneInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `OpcionesDivision` mutation."""
type DeleteOpcionesDivisionPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `OpcionesDivision` that was deleted by this mutation."""
  opcionesDivision: OpcionesDivision
  deletedOpcionesDivisionNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Divisione` that is related to this `OpcionesDivision`."""
  division: Divisione

  """An edge for our `OpcionesDivision`. May be used by Relay 1."""
  opcionesDivisionEdge(
    """The method to use when ordering `OpcionesDivision`."""
    orderBy: [OpcionesDivisionsOrderBy!] = [PRIMARY_KEY_ASC]
  ): OpcionesDivisionsEdge
}

"""All input for the `deleteOpcionesDivisionByNodeId` mutation."""
input DeleteOpcionesDivisionByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `OpcionesDivision` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteOpcionesDivision` mutation."""
input DeleteOpcionesDivisionInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `Plantilla` mutation."""
type DeletePlantillaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Plantilla` that was deleted by this mutation."""
  plantilla: Plantilla
  deletedPlantillaNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `Plantilla`."""
  user: User

  """An edge for our `Plantilla`. May be used by Relay 1."""
  plantillaEdge(
    """The method to use when ordering `Plantilla`."""
    orderBy: [PlantillasOrderBy!] = [PRIMARY_KEY_ASC]
  ): PlantillasEdge
}

"""All input for the `deletePlantillaByNodeId` mutation."""
input DeletePlantillaByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Plantilla` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deletePlantilla` mutation."""
input DeletePlantillaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `Provincia` mutation."""
type DeleteProvinciaPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Provincia` that was deleted by this mutation."""
  provincia: Provincia
  deletedProvinciaNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Provincia`. May be used by Relay 1."""
  provinciaEdge(
    """The method to use when ordering `Provincia`."""
    orderBy: [ProvinciasOrderBy!] = [PRIMARY_KEY_ASC]
  ): ProvinciasEdge
}

"""All input for the `deleteProvinciaByNodeId` mutation."""
input DeleteProvinciaByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Provincia` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteProvincia` mutation."""
input DeleteProvinciaInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `Setting` mutation."""
type DeleteSettingPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Setting` that was deleted by this mutation."""
  setting: Setting
  deletedSettingNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `Setting`. May be used by Relay 1."""
  settingEdge(
    """The method to use when ordering `Setting`."""
    orderBy: [SettingsOrderBy!] = [PRIMARY_KEY_ASC]
  ): SettingsEdge
}

"""All input for the `deleteSettingByNodeId` mutation."""
input DeleteSettingByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Setting` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteSetting` mutation."""
input DeleteSettingInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `TelescopeEntry` mutation."""
type DeleteTelescopeEntryPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `TelescopeEntry` that was deleted by this mutation."""
  telescopeEntry: TelescopeEntry
  deletedTelescopeEntryNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `TelescopeEntry`. May be used by Relay 1."""
  telescopeEntryEdge(
    """The method to use when ordering `TelescopeEntry`."""
    orderBy: [TelescopeEntriesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TelescopeEntriesEdge
}

"""All input for the `deleteTelescopeEntryByNodeId` mutation."""
input DeleteTelescopeEntryByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `TelescopeEntry` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteTelescopeEntry` mutation."""
input DeleteTelescopeEntryInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  sequence: BigInt!
}

"""The output of our delete `Tip` mutation."""
type DeleteTipPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Tip` that was deleted by this mutation."""
  tip: Tip
  deletedTipNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `Tip`."""
  cliente: Cliente

  """Reads a single `Divisione` that is related to this `Tip`."""
  division: Divisione

  """An edge for our `Tip`. May be used by Relay 1."""
  tipEdge(
    """The method to use when ordering `Tip`."""
    orderBy: [TipsOrderBy!] = [PRIMARY_KEY_ASC]
  ): TipsEdge
}

"""All input for the `deleteTipByNodeId` mutation."""
input DeleteTipByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Tip` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteTip` mutation."""
input DeleteTipInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `User` mutation."""
type DeleteUserPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `User` that was deleted by this mutation."""
  user: User
  deletedUserNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Provincia` that is related to this `User`."""
  provincia: Provincia

  """Reads a single `City` that is related to this `User`."""
  ciudad: City

  """An edge for our `User`. May be used by Relay 1."""
  userEdge(
    """The method to use when ordering `User`."""
    orderBy: [UsersOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsersEdge
}

"""All input for the `deleteUserByNodeId` mutation."""
input DeleteUserByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `User` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteUser` mutation."""
input DeleteUserInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `UsersConfiguracion` mutation."""
type DeleteUsersConfiguracionPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `UsersConfiguracion` that was deleted by this mutation."""
  usersConfiguracion: UsersConfiguracion
  deletedUsersConfiguracionNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `UsersConfiguracion`."""
  user: User

  """
  Reads a single `Divisione` that is related to this `UsersConfiguracion`.
  """
  division: Divisione

  """An edge for our `UsersConfiguracion`. May be used by Relay 1."""
  usersConfiguracionEdge(
    """The method to use when ordering `UsersConfiguracion`."""
    orderBy: [UsersConfiguracionsOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsersConfiguracionsEdge
}

"""All input for the `deleteUsersConfiguracionByNodeId` mutation."""
input DeleteUsersConfiguracionByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `UsersConfiguracion` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteUsersConfiguracion` mutation."""
input DeleteUsersConfiguracionInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `UsersGrupo` mutation."""
type DeleteUsersGrupoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `UsersGrupo` that was deleted by this mutation."""
  usersGrupo: UsersGrupo
  deletedUsersGrupoNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `UsersGrupo`."""
  user: User

  """Reads a single `Grupo` that is related to this `UsersGrupo`."""
  grupo: Grupo

  """An edge for our `UsersGrupo`. May be used by Relay 1."""
  usersGrupoEdge(
    """The method to use when ordering `UsersGrupo`."""
    orderBy: [UsersGruposOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsersGruposEdge
}

"""All input for the `deleteUsersGrupoByNodeId` mutation."""
input DeleteUsersGrupoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `UsersGrupo` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteUsersGrupo` mutation."""
input DeleteUsersGrupoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `UsersInactivo` mutation."""
type DeleteUsersInactivoPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `UsersInactivo` that was deleted by this mutation."""
  usersInactivo: UsersInactivo
  deletedUsersInactivoNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `UsersInactivo`. May be used by Relay 1."""
  usersInactivoEdge(
    """The method to use when ordering `UsersInactivo`."""
    orderBy: [UsersInactivosOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsersInactivosEdge
}

"""All input for the `deleteUsersInactivoByNodeId` mutation."""
input DeleteUsersInactivoByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `UsersInactivo` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteUsersInactivo` mutation."""
input DeleteUsersInactivoInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our delete `UsersRole` mutation."""
type DeleteUsersRolePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `UsersRole` that was deleted by this mutation."""
  usersRole: UsersRole
  deletedUsersRoleNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `User` that is related to this `UsersRole`."""
  user: User

  """Reads a single `Cliente` that is related to this `UsersRole`."""
  usersRolesCliente: Cliente

  """Reads a single `Divisione` that is related to this `UsersRole`."""
  usersRolesDivision: Divisione

  """An edge for our `UsersRole`. May be used by Relay 1."""
  usersRoleEdge(
    """The method to use when ordering `UsersRole`."""
    orderBy: [UsersRolesOrderBy!] = [PRIMARY_KEY_ASC]
  ): UsersRolesEdge
}

"""All input for the `deleteUsersRoleByNodeId` mutation."""
input DeleteUsersRoleByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `UsersRole` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteUsersRole` mutation."""
input DeleteUsersRoleInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  usersRolesId: BigInt!
}

"""The output of our delete `Versione` mutation."""
type DeleteVersionePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `Versione` that was deleted by this mutation."""
  versione: Versione
  deletedVersioneNodeId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """Reads a single `Cliente` that is related to this `Versione`."""
  cliente: Cliente

  """An edge for our `Versione`. May be used by Relay 1."""
  versioneEdge(
    """The method to use when ordering `Versione`."""
    orderBy: [VersionesOrderBy!] = [PRIMARY_KEY_ASC]
  ): VersionesEdge
}

"""All input for the `deleteVersioneByNodeId` mutation."""
input DeleteVersioneByNodeIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `Versione` to be deleted.
  """
  nodeId: ID!
}

"""All input for the `deleteVersione` mutation."""
input DeleteVersioneInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  id: BigInt!
}

"""The output of our `usersLogin` mutation."""
type UsersLoginPayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String
  jwtToken: JwtToken

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query
}

type JwtToken {
  role: String
  usersId: BigInt
  expira: BigInt
  clienteId: BigInt
  divisionId: BigInt
}

"""All input for the `usersLogin` mutation."""
input UsersLoginInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  email: String!
  passw: String
}
